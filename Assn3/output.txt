<PUNCTUATOR, 267, #>
<IDENTIFIER, 261, include>
<PUNCTUATOR, 267, <>
<IDENTIFIER, 261, stdio>
<PUNCTUATOR, 267, .>
<IDENTIFIER, 261, h>
<PUNCTUATOR, 267, >>
<KEYWORD, 260, int>
<IDENTIFIER, 261, main>
<PUNCTUATOR, 267, (>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, {>
<BEGIN_SINGLE_COMMENT, 269, //>
 Lets test some data types first
<END_SINGLE_COMMENT, 270, >
<KEYWORD, 260, int>
<IDENTIFIER, 261, n>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, n>
<PUNCTUATOR, 267, =>
<INTEGER_CONST, 263, 34>
<PUNCTUATOR, 267, ;>
<KEYWORD, 260, float>
<IDENTIFIER, 261, f>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, f>
<PUNCTUATOR, 267, =>
<FLOATING_CONST, 262, 3.4e-12>
<PUNCTUATOR, 267, ;>
<KEYWORD, 260, char>
<IDENTIFIER, 261, c>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, c>
<PUNCTUATOR, 267, =>
<CHARACTER_CONST, 264, 'X'>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, c>
<PUNCTUATOR, 267, =>
<CHARACTER_CONST, 264, '-'>
<PUNCTUATOR, 267, ;>
<BEGIN_MULTI_COMMENT, 272, /*>

     * Here we will be exploring some strings
     * We'll do these things:
     * 1. We'll convert a string to upper case.
     * 2. Then we'll convert it back to lower case.
     
<END_MULTI_COMMENT, 273, */>
<KEYWORD, 260, char>
<IDENTIFIER, 261, str>
<PUNCTUATOR, 267, [>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, =>
<STRING_LITERAL, 266, "Oh dear! When will this online sem end?!">
<PUNCTUATOR, 267, ;>
<BEGIN_SINGLE_COMMENT, 269, //>
 Lets convert the string tp upper case
<END_SINGLE_COMMENT, 270, >
<KEYWORD, 260, for>
<PUNCTUATOR, 267, (>
<KEYWORD, 260, register>
<KEYWORD, 260, int>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, =>
<INTEGER_CONST, 263, 0>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, str>
<PUNCTUATOR, 267, [>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, !=>
<CHARACTER_CONST, 264, '\0'>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ++>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, {>
<KEYWORD, 260, if>
<PUNCTUATOR, 267, (>
<IDENTIFIER, 261, str>
<PUNCTUATOR, 267, [>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, <=>
<CHARACTER_CONST, 264, 'z'>
<PUNCTUATOR, 267, &&>
<IDENTIFIER, 261, str>
<PUNCTUATOR, 267, [>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, >=>
<CHARACTER_CONST, 264, 'a'>
<PUNCTUATOR, 267, )>
<IDENTIFIER, 261, str>
<PUNCTUATOR, 267, [>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, -=>
<INTEGER_CONST, 263, 32>
<PUNCTUATOR, 267, ;>
<PUNCTUATOR, 267, }>
<BEGIN_SINGLE_COMMENT, 269, //>
 Lets go back to lower case using a while loop now
<END_SINGLE_COMMENT, 270, >
<KEYWORD, 260, register>
<KEYWORD, 260, int>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, =>
<INTEGER_CONST, 263, 0>
<PUNCTUATOR, 267, ;>
<KEYWORD, 260, while>
<PUNCTUATOR, 267, (>
<IDENTIFIER, 261, str>
<PUNCTUATOR, 267, [>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, !=>
<CHARACTER_CONST, 264, '\0'>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, {>
<KEYWORD, 260, if>
<PUNCTUATOR, 267, (>
<IDENTIFIER, 261, str>
<PUNCTUATOR, 267, [>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, <=>
<CHARACTER_CONST, 264, 'Z'>
<PUNCTUATOR, 267, &&>
<IDENTIFIER, 261, str>
<PUNCTUATOR, 267, [>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, >=>
<CHARACTER_CONST, 264, 'A'>
<PUNCTUATOR, 267, )>
<IDENTIFIER, 261, str>
<PUNCTUATOR, 267, [>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, +=>
<INTEGER_CONST, 263, 32>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, i>
<PUNCTUATOR, 267, ++>
<PUNCTUATOR, 267, ;>
<PUNCTUATOR, 267, }>
<KEYWORD, 260, char>
<IDENTIFIER, 261, nullChar>
<PUNCTUATOR, 267, =>
<CHARACTER_CONST, 264, '\0'>
<PUNCTUATOR, 267, ;>
<KEYWORD, 260, return>
<INTEGER_CONST, 263, 0>
<PUNCTUATOR, 267, ;>
<PUNCTUATOR, 267, }>

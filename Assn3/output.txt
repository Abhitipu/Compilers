<BEGIN_SINGLE_COMMENT, 269, //>
 C program to Open a File,
<END_SINGLE_COMMENT, 270, >
<BEGIN_SINGLE_COMMENT, 269, //>
 Write in it, And Close the File
<END_SINGLE_COMMENT, 270, >
<BEGIN_MULTI_COMMENT, 272, /*>

	A multiline comment
	Test it!//

<END_MULTI_COMMENT, 273, */>
<PUNCTUATOR, 267, #>
<IDENTIFIER, 261, include>
<PUNCTUATOR, 267, <>
<IDENTIFIER, 261, stdio>
<PUNCTUATOR, 267, .>
<IDENTIFIER, 261, h>
<PUNCTUATOR, 267, >>
<PUNCTUATOR, 267, #>
<IDENTIFIER, 261, include>
<PUNCTUATOR, 267, <>
<IDENTIFIER, 261, string>
<PUNCTUATOR, 267, .>
<IDENTIFIER, 261, h>
<PUNCTUATOR, 267, >>
<KEYWORD, 260, int>
<IDENTIFIER, 261, main>
<PUNCTUATOR, 267, (>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, {>
<BEGIN_SINGLE_COMMENT, 269, //>
 Declare the file pointer
<END_SINGLE_COMMENT, 270, >
<IDENTIFIER, 261, FILE>
<PUNCTUATOR, 267, *>
<IDENTIFIER, 261, filePointer>
<PUNCTUATOR, 267, ;>
<KEYWORD, 260, const>
<KEYWORD, 260, float>
<IDENTIFIER, 261, dummy_float_int>
<PUNCTUATOR, 267, =>
<FLOATING_CONST, 262, 12.43E-14>
<PUNCTUATOR, 267, ;>
<BEGIN_SINGLE_COMMENT, 269, //>
 Get the data to be written in file
<END_SINGLE_COMMENT, 270, >
<KEYWORD, 260, char>
<IDENTIFIER, 261, dataToBeWritten>
<PUNCTUATOR, 267, [>
<INTEGER_CONST, 263, 50>
<PUNCTUATOR, 267, ]>
<PUNCTUATOR, 267, =>
<STRING_LITERAL, 266, "GeeksforGeeks-A Computer Science Portal for Geeks\'">
<PUNCTUATOR, 267, ;>
<BEGIN_SINGLE_COMMENT, 269, //>
 Open the existing file GfgTest.c using fopen()
<END_SINGLE_COMMENT, 270, >
<BEGIN_SINGLE_COMMENT, 269, //>
 in write mode using "w" attribute
<END_SINGLE_COMMENT, 270, >
<IDENTIFIER, 261, filePointer>
<PUNCTUATOR, 267, =>
<IDENTIFIER, 261, fopen>
<PUNCTUATOR, 267, (>
<STRING_LITERAL, 266, "GfgTest.c">
<PUNCTUATOR, 267, ,>
<STRING_LITERAL, 266, "w">
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, ;>
<BEGIN_SINGLE_COMMENT, 269, //>
 Check if this filePointer is null
<END_SINGLE_COMMENT, 270, >
<BEGIN_SINGLE_COMMENT, 269, //>
 which maybe if the file does not exist
<END_SINGLE_COMMENT, 270, >
<KEYWORD, 260, if>
<PUNCTUATOR, 267, (>
<IDENTIFIER, 261, filePointer>
<PUNCTUATOR, 267, ==>
<IDENTIFIER, 261, NULL>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, {>
<IDENTIFIER, 261, printf>
<PUNCTUATOR, 267, (>
<STRING_LITERAL, 266, "GfgTest.c file failed to open.">
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, ;>
<PUNCTUATOR, 267, }>
<KEYWORD, 260, else>
<PUNCTUATOR, 267, {>
<IDENTIFIER, 261, printf>
<PUNCTUATOR, 267, (>
<STRING_LITERAL, 266, "The file is now opened.\n">
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, ;>
<BEGIN_SINGLE_COMMENT, 269, //>
 Write the dataToBeWritten into the file
<END_SINGLE_COMMENT, 270, >
<KEYWORD, 260, if>
<PUNCTUATOR, 267, (>
<IDENTIFIER, 261, strlen>
<PUNCTUATOR, 267, (>
<IDENTIFIER, 261, dataToBeWritten>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, >>
<INTEGER_CONST, 263, 0>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, {>
<BEGIN_SINGLE_COMMENT, 269, //>
 writing in the file using fputs()
<END_SINGLE_COMMENT, 270, >
<IDENTIFIER, 261, fputs>
<PUNCTUATOR, 267, (>
<IDENTIFIER, 261, dataToBeWritten>
<PUNCTUATOR, 267, ,>
<IDENTIFIER, 261, filePointer>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, fputs>
<PUNCTUATOR, 267, (>
<STRING_LITERAL, 266, "\n">
<PUNCTUATOR, 267, ,>
<IDENTIFIER, 261, filePointer>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, ;>
<PUNCTUATOR, 267, }>
<BEGIN_SINGLE_COMMENT, 269, //>
 Closing the file using fclose()
<END_SINGLE_COMMENT, 270, >
<IDENTIFIER, 261, fclose>
<PUNCTUATOR, 267, (>
<IDENTIFIER, 261, filePointer>
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, printf>
<PUNCTUATOR, 267, (>
<STRING_LITERAL, 266, "Data successfully written in file GfgTest.c\n">
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, ;>
<IDENTIFIER, 261, printf>
<PUNCTUATOR, 267, (>
<STRING_LITERAL, 266, "The file is now closed.">
<PUNCTUATOR, 267, )>
<PUNCTUATOR, 267, ;>
<PUNCTUATOR, 267, }>
<KEYWORD, 260, return>
<INTEGER_CONST, 263, 0>
<PUNCTUATOR, 267, ;>
<PUNCTUATOR, 267, }>


#################### LINE NO : 2 ####################

#################### LINE NO : 3 ####################

#################### LINE NO : 4 ####################
storage_class_specifier -> static
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration_specifiers -> storage_class_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
external_declaration -> declaration
translation_unit -> external_declaration

#################### LINE NO : 5 ####################

#################### LINE NO : 6 ####################
enumerator -> enumerator_constant
enumerator_list -> enumerator
enumerator -> enumerator_constant
enumerator_list -> enumerator_list, enumerator
enumerator -> enumerator_constant
enumerator_list -> enumerator_list, enumerator
enumerator -> enumerator_constant
enumerator_list -> enumerator_list, enumerator
enumerator -> enumerator_constant
enumerator_list -> enumerator_list, enumerator
enumerator -> enumerator_constant
enumerator_list -> enumerator_list, enumerator
enumerator -> enumerator_constant
enumerator_list -> enumerator_list, enumerator
enum_specifier -> enum identifier_opt { enumerator_list }
type_specifier -> enum_specifier
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration -> declaration_specifiers init_declarator_list_opt ;
external_declaration -> declaration
translation_unit -> external_declaration

#################### LINE NO : 7 ####################

#################### LINE NO : 8 ####################
storage_class_specifier -> extern
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration_specifiers -> storage_class_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
init_declarator -> declarator
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
external_declaration -> declaration
translation_unit -> external_declaration

#################### LINE NO : 9 ####################

#################### LINE NO : 10 ####################
function_specifier -> inline
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration_specifiers -> function_specifier declaration_specifiers_opt
direct_declarator -> identifier
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
parameter_declaration -> declaration_specifiers declarator
parameter_list -> parameter_declaration
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
parameter_declaration -> declaration_specifiers declarator
parameter_list -> parameter_list , parameter_declaration
parameter_type_list -> parameter_list
direct_declarator -> direct_declarator ( parameter_type_list )
declarator -> pointer_opt direct_declarator

#################### LINE NO : 11 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> additive_expression + multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
jump_statement -> return expression_opt ;
statement -> jump_statement
block_item -> statement
block_item_list -> block_item

#################### LINE NO : 12 ####################
compound_statement -> { block_item_list_opt }
function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement
external_declaration -> function_definition
translation_unit -> external_declaration

#################### LINE NO : 13 ####################

#################### LINE NO : 14 ####################

#################### LINE NO : 15 ####################
type_specifier -> int
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 16 ####################
type_specifier -> char
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 17 ####################
type_specifier -> float
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 18 ####################
Works
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration -> declaration_specifiers init_declarator_list_opt ;
external_declaration -> declaration
translation_unit -> external_declaration

#################### LINE NO : 19 ####################

#################### LINE NO : 20 ####################

#################### LINE NO : 21 ####################
type_specifier -> short
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 22 ####################
type_specifier -> int
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 23 ####################
type_specifier -> long
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 24 ####################
type_specifier -> float
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 25 ####################
type_specifier -> double
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 26 ####################
type_specifier -> _complex
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 27 ####################
type_specifier -> _bool
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 28 ####################
type_specifier -> _imaginary
specifier_qualifier_list -> type_specifier specifier_qualifier_list_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator

#################### LINE NO : 29 ####################
Works
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration -> declaration_specifiers init_declarator_list_opt ;
external_declaration -> declaration
translation_unit -> external_declaration

#################### LINE NO : 30 ####################

#################### LINE NO : 31 ####################
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
direct_declarator -> direct_declarator ( identifier_list_opt )
declarator -> pointer_opt direct_declarator

#################### LINE NO : 32 ####################

#################### LINE NO : 33 ####################

#################### LINE NO : 34 ####################
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> multiplicative_expression modulo cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item

#################### LINE NO : 35 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
assignment_operator -> %=
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 36 ####################

#################### LINE NO : 37 ####################
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> multiplicative_expression * cast_expression
additive_expression -> additive_expression + multiplicative_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> multiplicative_expression / cast_expression
additive_expression -> additive_expression + multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 38 ####################
type_specifier -> float
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
init_declarator -> declarator
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 39 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
assignment_operator -> =
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 40 ####################
type_specifier -> char
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
init_declarator -> declarator
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 41 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
assignment_operator -> =
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 42 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
assignment_operator -> =
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 43 ####################

#################### LINE NO : 44 ####################

#################### LINE NO : 45 ####################
type_qualifier -> const
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration_specifiers -> type_qualifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 46 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression

#################### LINE NO : 47 ####################
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
constant_expression -> conditional_expression
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> string-literal
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
argument_expression_list -> assignment_expression
postfix_expression -> postfix_expression ( argument_expression_list_opt )
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
labeled_statement -> case constant_expression : statement
statement -> labeled_statement
block_item -> statement
block_item_list -> block_item

#################### LINE NO : 48 ####################
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
constant_expression -> conditional_expression
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> string-literal
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
argument_expression_list -> assignment_expression
postfix_expression -> postfix_expression ( argument_expression_list_opt )
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
labeled_statement -> case constant_expression : statement
statement -> labeled_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 49 ####################
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
constant_expression -> conditional_expression
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> string-literal
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
argument_expression_list -> assignment_expression
postfix_expression -> postfix_expression ( argument_expression_list_opt )
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
labeled_statement -> case constant_expression : statement
statement -> labeled_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 50 ####################
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
constant_expression -> conditional_expression

#################### LINE NO : 51 ####################
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
constant_expression -> conditional_expression
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> string-literal
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
argument_expression_list -> assignment_expression
postfix_expression -> postfix_expression ( argument_expression_list_opt )
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
labeled_statement -> case constant_expression : statement
statement -> labeled_statement
labeled_statement -> case constant_expression : statement
statement -> labeled_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 52 ####################
jump_statement -> break ;
statement -> jump_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 53 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> string-literal
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
argument_expression_list -> assignment_expression
postfix_expression -> postfix_expression ( argument_expression_list_opt )
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
labeled_statement -> default : statement
statement -> labeled_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 54 ####################
compound_statement -> { block_item_list_opt }
statement -> compound_statement
selection_statement -> switch ( expression ) statement
statement -> selection_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 55 ####################

#################### LINE NO : 56 ####################

#################### LINE NO : 57 ####################
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
direct_declarator -> direct_declarator [ type_qualifier_list_opt assignment_expression_opt ]
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
initializer_list -> designation_opt initializer
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
initializer_list -> initializer_list , designation_opt initializer
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
initializer_list -> initializer_list , designation_opt initializer
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
initializer_list -> initializer_list , designation_opt initializer
initializer -> { initializer_list }
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 58 ####################
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 59 ####################
storage_class_specifier -> auto
declaration_specifiers -> storage_class_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> relational_expression < shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression ++
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression

#################### LINE NO : 60 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> multiplicative_expression modulo cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> equality_expression == relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression

#################### LINE NO : 61 ####################
jump_statement -> continue ;
statement -> jump_statement
block_item -> statement
block_item_list -> block_item

#################### LINE NO : 62 ####################
compound_statement -> { block_item_list_opt }
statement -> compound_statement

#################### LINE NO : 63 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression ++
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item

#################### LINE NO : 64 ####################
compound_statement -> { block_item_list_opt }
statement -> compound_statement
selection_statement -> if ( expression ) statement else statement
statement -> selection_statement
block_item -> statement
block_item_list -> block_item

#################### LINE NO : 65 ####################
compound_statement -> { block_item_list_opt }
statement -> compound_statement
iteration_statement -> for ( declaration expression_opt ; expression_opt ) statement
statement -> iteration_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 66 ####################

#################### LINE NO : 67 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> string-literal
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
argument_expression_list -> assignment_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
primary_expression -> ( expression )
postfix_expression -> primary_expression
unary_expression -> postfix_expression
unary_expression -> sizeof unary_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
argument_expression_list -> argument_expression_list , assignment_expression
postfix_expression -> postfix_expression ( argument_expression_list_opt )
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 68 ####################

#################### LINE NO : 69 ####################
type_specifier -> float
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
direct_declarator -> direct_declarator [ type_qualifier_list_opt assignment_expression_opt ]
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
initializer_list -> designation_opt initializer
unary_operator -> -
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
unary_expression -> unary_operator cast_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
initializer_list -> initializer_list , designation_opt initializer
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
initializer_list -> initializer_list , designation_opt initializer
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
initializer_list -> initializer_list , designation_opt initializer
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
initializer_list -> initializer_list , designation_opt initializer
initializer -> { initializer_list }
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 70 ####################
type_specifier -> float
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 71 ####################
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> relational_expression < shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression ++
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression

#################### LINE NO : 72 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
assignment_operator -> +=
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item

#################### LINE NO : 73 ####################
compound_statement -> { block_item_list_opt }
statement -> compound_statement
iteration_statement -> for ( declaration expression_opt ; expression_opt ) statement
statement -> iteration_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 74 ####################

#################### LINE NO : 75 ####################

#################### LINE NO : 76 ####################

#################### LINE NO : 77 ####################

#################### LINE NO : 78 ####################

#################### LINE NO : 79 ####################

#################### LINE NO : 80 ####################

#################### LINE NO : 81 ####################

#################### LINE NO : 82 ####################
storage_class_specifier -> static
type_specifier -> char
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration_specifiers -> storage_class_specifier declaration_specifiers_opt
direct_declarator -> identifier
direct_declarator -> direct_declarator [ type_qualifier_list_opt assignment_expression_opt ]
declarator -> pointer_opt direct_declarator
primary_expression -> string-literal
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 83 ####################

#################### LINE NO : 84 ####################
storage_class_specifier -> register
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration_specifiers -> storage_class_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> equality_expression ! = relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression ++
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression

#################### LINE NO : 85 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> relational_expression <= shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> relational_expression >= shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> logical_AND_expression && inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression

#################### LINE NO : 86 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
assignment_operator -> -=
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement

#################### LINE NO : 87 ####################
selection_statement -> if ( expression ) statement
statement -> selection_statement
block_item -> statement
block_item_list -> block_item
compound_statement -> { block_item_list_opt }
statement -> compound_statement
iteration_statement -> for ( declaration expression_opt ; expression_opt ) statement
statement -> iteration_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 88 ####################

#################### LINE NO : 89 ####################

#################### LINE NO : 90 ####################
storage_class_specifier -> register
type_specifier -> int
declaration_specifiers -> type_specifier declaration_specifiers_opt
declaration_specifiers -> storage_class_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 91 ####################
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression

#################### LINE NO : 92 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> equality_expression == relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression

#################### LINE NO : 93 ####################
jump_statement -> break ;
statement -> jump_statement
block_item -> statement
block_item_list -> block_item

#################### LINE NO : 94 ####################
compound_statement -> { block_item_list_opt }
statement -> compound_statement
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> relational_expression <= shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> relational_expression >= shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> logical_AND_expression && inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression

#################### LINE NO : 95 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
primary_expression -> identifier
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
postfix_expression -> postfix_expression [ expression ]
unary_expression -> postfix_expression
assignment_operator -> +=
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement

#################### LINE NO : 96 ####################
selection_statement -> if ( expression ) statement
statement -> selection_statement
selection_statement -> if ( expression ) statement else statement
statement -> selection_statement
block_item -> statement
block_item_list -> block_item
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression ++
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 97 ####################
compound_statement -> { block_item_list_opt }
statement -> compound_statement
iteration_statement -> while ( expression ) statement
statement -> iteration_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 98 ####################

#################### LINE NO : 99 ####################
jump_statement -> goto identifier ;
statement -> jump_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 100 ####################

#################### LINE NO : 101 ####################
type_specifier -> char
declaration_specifiers -> type_specifier declaration_specifiers_opt
direct_declarator -> identifier
declarator -> pointer_opt direct_declarator
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
initializer -> assignment_expression
init_declarator -> declarator = initializer
init_declarator_list -> init_declarator
declaration -> declaration_specifiers init_declarator_list_opt ;
block_item -> declaration
block_item_list -> block_item_list block_item

#################### LINE NO : 102 ####################

#################### LINE NO : 103 ####################

#################### LINE NO : 104 ####################

#################### LINE NO : 105 ####################

#################### LINE NO : 106 ####################

#################### LINE NO : 107 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression . identifier
unary_expression -> postfix_expression
assignment_operator -> =
primary_expression -> string-literal
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
labeled_statement -> identifier : statement
statement -> labeled_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 108 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression . identifier
unary_expression -> postfix_expression
assignment_operator -> =
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 109 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression . identifier
unary_expression -> postfix_expression
assignment_operator -> =
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 110 ####################

#################### LINE NO : 111 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression . identifier
unary_expression -> postfix_expression
assignment_operator -> =
primary_expression -> string-literal
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 112 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression . identifier
unary_expression -> postfix_expression
assignment_operator -> =
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 113 ####################
primary_expression -> identifier
postfix_expression -> primary_expression
postfix_expression -> postfix_expression . identifier
unary_expression -> postfix_expression
assignment_operator -> =
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
assignment_expression -> unary_expression assignment_operator assignment_expression
expression -> assignment_expression
expression_statement-> expression_opt ;
statement -> expression_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 114 ####################

#################### LINE NO : 115 ####################
primary_expression -> constant
postfix_expression -> primary_expression
unary_expression -> postfix_expression
cast_expression -> unary_expression
multiplicative_expression -> cast_expression
additive_expression -> multiplicative_expression
shift_expression -> additive_expression
relational_expression -> shift_expression
equality_expression -> relational_expression
AND_expression -> equality_expression
exclusive_OR_expression -> AND_expression
inclusive_OR_expression -> exclusive_OR_expression
logical_AND_expression -> inclusive_OR_expression
logical_OR_expression -> logical_AND_expression
conditional_expression -> logical_OR_expression
assignment_expression -> conditional_expression
expression -> assignment_expression
jump_statement -> return expression_opt ;
statement -> jump_statement
block_item -> statement
block_item_list -> block_item_list block_item

#################### LINE NO : 116 ####################
compound_statement -> { block_item_list_opt }
function_definition -> declaration_specifiers declarator declaration_list_opt compound_statement
external_declaration -> function_definition
translation_unit -> external_declaration

#################### LINE NO : 117 ####################
Done!

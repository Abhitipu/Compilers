Terminals unused in grammar

    UNION
    STRUCT
    TYPEDEF
    BEGIN_SINGLE_COMMENT
    END_SINGLE_COMMENT
    SINGLE_COMMENT
    BEGIN_MULTI_COMMENT
    END_MULTI_COMMENT
    MULTI_COMMENT
    WHITE_SPACE
    DOUBLE_CONST


State 326 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | constant
    3                   | STRING_LITERAL
    4                   | '(' expression ')'

    5 constant: INTEGER_CONST
    6         | FLOAT_CONST
    7         | CHAR_CONST

    8 postfix_expression: primary_expression
    9                   | postfix_expression '[' expression ']'
   10                   | postfix_expression '(' argument_expression_list_opt ')'
   11                   | postfix_expression '.' IDENTIFIER
   12                   | postfix_expression ARROW IDENTIFIER
   13                   | postfix_expression INCREMENT
   14                   | postfix_expression DECREMENT
   15                   | '(' type_name ')' '{' initializer_list '}'
   16                   | '(' type_name ')' '{' initializer_list ',' '}'

   17 argument_expression_list: assignment_expression
   18                         | argument_expression_list ',' assignment_expression

   19 argument_expression_list_opt: argument_expression_list
   20                             | %empty

   21 unary_expression: postfix_expression
   22                 | INCREMENT unary_expression
   23                 | DECREMENT unary_expression
   24                 | unary_operator cast_expression
   25                 | SIZEOF unary_expression
   26                 | SIZEOF '(' type_name ')'

   27 unary_operator: BITWISE_AND
   28               | MULT
   29               | PLUS
   30               | MINUS
   31               | BITWISE_NOT
   32               | LOGICAL_NOT

   33 cast_expression: unary_expression
   34                | '(' type_name ')' cast_expression

   35 multiplicative_expression: cast_expression
   36                          | multiplicative_expression MULT cast_expression
   37                          | multiplicative_expression DIVIDE cast_expression
   38                          | multiplicative_expression MODULO cast_expression

   39 additive_expression: multiplicative_expression
   40                    | additive_expression PLUS multiplicative_expression
   41                    | additive_expression MINUS multiplicative_expression

   42 shift_expression: additive_expression
   43                 | shift_expression LSHIFT additive_expression
   44                 | shift_expression RSHIFT additive_expression

   45 relational_expression: shift_expression
   46                      | relational_expression LT shift_expression
   47                      | relational_expression GT shift_expression
   48                      | relational_expression LEQ shift_expression
   49                      | relational_expression GEQ shift_expression

   50 equality_expression: relational_expression
   51                    | equality_expression EQ relational_expression
   52                    | equality_expression NEQ relational_expression

   53 AND_expression: equality_expression
   54               | AND_expression BITWISE_AND equality_expression

   55 exclusive_OR_expression: AND_expression
   56                        | exclusive_OR_expression XOR AND_expression

   57 inclusive_OR_expression: exclusive_OR_expression
   58                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   59 logical_AND_expression: inclusive_OR_expression
   60                       | logical_AND_expression LOGICAL_AND inclusive_OR_expression

   61 logical_OR_expression: logical_AND_expression
   62                      | logical_OR_expression LOGICAL_OR logical_AND_expression

   63 conditional_expression: logical_OR_expression
   64                       | logical_OR_expression '?' expression ':' conditional_expression

   65 assignment_expression: conditional_expression
   66                      | unary_expression assignment_operator assignment_expression

   67 assignment_operator: '='
   68                    | MULT_ASGN
   69                    | DIV_ASGN
   70                    | MOD_ASGN
   71                    | ADD_ASGN
   72                    | SUB_ASGN
   73                    | LSHIFT_ASGN
   74                    | RSHIFT_ASGN
   75                    | AND_ASGN
   76                    | XOR_ASGN
   77                    | OR_ASGN

   78 expression: assignment_expression
   79           | expression ',' assignment_expression

   80 constant_expression: conditional_expression

   81 declaration: declaration_specifiers init_declarator_list_opt ';'

   82 init_declarator_list_opt: init_declarator_list
   83                         | %empty

   84 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   85                       | type_specifier declaration_specifiers_opt
   86                       | type_qualifier declaration_specifiers_opt
   87                       | function_specifier declaration_specifiers_opt

   88 declaration_specifiers_opt: declaration_specifiers
   89                           | %empty

   90 init_declarator_list: init_declarator
   91                     | init_declarator_list ',' init_declarator

   92 init_declarator: declarator
   93                | declarator ASGN initializer

   94 storage_class_specifier: EXTERN
   95                        | STATIC
   96                        | AUTO
   97                        | REGISTER

   98 type_specifier: VOID
   99               | CHAR
  100               | SHORT
  101               | INT
  102               | LONG
  103               | FLOAT
  104               | DOUBLE
  105               | SIGNED
  106               | UNSIGNED
  107               | _BOOL
  108               | _COMPLEX
  109               | _IMAGINARY
  110               | enum_specifier

  111 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  112                         | type_qualifier specifier_qualifier_list_opt

  113 specifier_qualifier_list_opt: specifier_qualifier_list
  114                             | %empty

  115 enum_specifier: ENUM identifier_opt '{' enumerator_list '}'
  116               | ENUM identifier_opt '{' enumerator_list ',' '}'
  117               | ENUM IDENTIFIER

  118 identifier_opt: IDENTIFIER
  119               | %empty

  120 enumerator_list: enumerator
  121                | enumerator_list ',' enumerator

  122 $@1: %empty

  123 enumerator: ENUMERATION_CONST $@1 ENUMERATION_CONST ASGN constant_expression

  124 type_qualifier: CONST
  125               | RESTRICT
  126               | VOLATILE

  127 function_specifier: INLINE

  128 declarator: pointer_opt direct_declarator

  129 pointer_opt: pointer
  130            | %empty

  131 direct_declarator: IDENTIFIER
  132                  | '(' declarator ')'
  133                  | direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']'
  134                  | direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']'
  135                  | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']'
  136                  | direct_declarator '[' type_qualifier_list_opt MULT ']'
  137                  | direct_declarator '(' parameter_type_list ')'
  138                  | direct_declarator '(' identifier_list_opt ')'

  139 type_qualifier_list_opt: type_qualifier_list
  140                        | %empty

  141 assignment_expression_opt: assignment_expression
  142                          | %empty

  143 identifier_list_opt: identifier_list
  144                    | %empty

  145 pointer: MULT type_qualifier_list_opt
  146        | MULT type_qualifier_list_opt pointer

  147 type_qualifier_list: type_qualifier
  148                    | type_qualifier_list type_qualifier

  149 parameter_type_list: parameter_list
  150                    | parameter_list ',' ELLIPSIS

  151 parameter_list: parameter_declaration
  152               | parameter_list ',' parameter_declaration

  153 parameter_declaration: declaration_specifiers declarator
  154                      | declaration_specifiers

  155 identifier_list: IDENTIFIER
  156                | identifier_list ',' IDENTIFIER

  157 type_name: specifier_qualifier_list

  158 initializer: assignment_expression
  159            | '{' initializer_list '}'
  160            | '{' initializer_list ',' '}'

  161 initializer_list: designation_opt initializer
  162                 | initializer_list ',' designation_opt initializer

  163 designation_opt: designation
  164                | %empty

  165 designation: designator_list '='

  166 designator_list: designator
  167                | designator_list designator

  168 designator: '[' constant_expression ']'
  169           | '.' IDENTIFIER

  170 statement: labeled_statement
  171          | compound_statement
  172          | expression_statement
  173          | selection_statement
  174          | iteration_statement
  175          | jump_statement

  176 labeled_statement: IDENTIFIER ':' statement
  177                  | CASE constant_expression ':' statement
  178                  | DEFAULT ':' statement

  179 compound_statement: '{' block_item_list_opt '}'

  180 block_item_list: block_item
  181                | block_item_list block_item

  182 block_item_list_opt: block_item_list
  183                    | %empty

  184 block_item: declaration
  185           | statement

  186 expression_statement: expression_opt ';'

  187 selection_statement: IF '(' expression ')' statement
  188                    | IF '(' expression ')' statement ELSE statement
  189                    | SWITCH '(' expression ')' statement

  190 iteration_statement: WHILE '(' expression ')' statement
  191                    | DO statement WHILE '(' expression ')' ';'
  192                    | FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement
  193                    | FOR '(' declaration expression_opt ';' expression_opt ')' statement

  194 expression_opt: expression
  195               | %empty

  196 jump_statement: GOTO IDENTIFIER ';'
  197               | CONTINUE ';'
  198               | BREAK ';'
  199               | RETURN expression_opt ';'

  200 translation_unit: external_declaration
  201                 | translation_unit external_declaration

  202 external_declaration: function_definition
  203                     | declaration

  204 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  205 declaration_list_opt: declaration_list
  206                     | %empty

  207 declaration_list: declaration
  208                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 10 15 16 26 34 132 137 138 187 188 189 190 191 192 193
    ')' (41) 4 10 15 16 26 34 132 137 138 187 188 189 190 191 192 193
    ',' (44) 16 18 79 91 116 121 150 152 156 160 162
    '.' (46) 11 169
    ':' (58) 64 176 177 178
    ';' (59) 81 186 191 192 193 196 197 198 199
    '=' (61) 67 165
    '?' (63) 64
    '[' (91) 9 133 134 135 136 168
    ']' (93) 9 133 134 135 136 168
    '{' (123) 15 16 115 116 159 160 179
    '}' (125) 15 16 115 116 159 160 179
    error (256)
    BREAK (258) 198
    RETURN (259) 199
    CASE (260) 177
    FOR (261) 192 193
    WHILE (262) 190 191
    GOTO (263) 196
    SIZEOF (264) 25 26
    CONTINUE (265) 197
    IF (266) 187 188
    DO (267) 191
    SWITCH (268) 189
    ELSE (269) 188
    FLOAT (270) 103
    SHORT (271) 100
    CHAR (272) 99
    _BOOL (273) 107
    _IMAGINARY (274) 109
    _COMPLEX (275) 108
    INT (276) 101
    DOUBLE (277) 104
    LONG (278) 102
    VOID (279) 98
    SIGNED (280) 105
    AUTO (281) 96
    UNSIGNED (282) 106
    ENUM (283) 115 116 117
    UNION (284)
    STRUCT (285)
    TYPEDEF (286)
    CONST (287) 124
    DEFAULT (288) 178
    STATIC (289) 95 134 135
    REGISTER (290) 97
    RESTRICT (291) 125
    VOLATILE (292) 126
    EXTERN (293) 94
    INLINE (294) 127
    BEGIN_SINGLE_COMMENT (295)
    END_SINGLE_COMMENT (296)
    SINGLE_COMMENT (297)
    BEGIN_MULTI_COMMENT (298)
    END_MULTI_COMMENT (299)
    MULTI_COMMENT (300)
    WHITE_SPACE (301)
    IDENTIFIER <myStringVal> (302) 1 11 12 117 118 131 155 156 169 176 196
    INTEGER_CONST <myIntVal> (303) 5
    CHAR_CONST <myCharVal> (304) 7
    FLOAT_CONST <myFloatVal> (305) 6
    DOUBLE_CONST <myDoubleVal> (306)
    STRING_LITERAL <myStringVal> (307) 3
    PLUS (308) 29 40
    MINUS (309) 30 41
    MULT (310) 28 36 136 145 146
    DIVIDE (311) 37
    ARROW (312) 12
    INCREMENT (313) 13 22
    DECREMENT (314) 14 23
    RSHIFT (315) 44
    LSHIFT (316) 43
    LT (317) 46
    GT (318) 47
    LEQ (319) 48
    GEQ (320) 49
    EQ (321) 51
    NEQ (322) 52
    BITWISE_OR (323) 58
    LOGICAL_OR (324) 62
    BITWISE_AND (325) 27 54
    LOGICAL_AND (326) 60
    XOR (327) 56
    BITWISE_NOT (328) 31
    LOGICAL_NOT (329) 32
    ELLIPSIS (330) 150
    MODULO (331) 38
    ASGN (332) 93 123
    ENUMERATION_CONST (333) 123
    ADD_ASGN (334) 71
    SUB_ASGN (335) 72
    MULT_ASGN (336) 68
    DIV_ASGN (337) 69
    MOD_ASGN (338) 70
    LSHIFT_ASGN (339) 73
    RSHIFT_ASGN (340) 74
    AND_ASGN (341) 75
    OR_ASGN (342) 77
    XOR_ASGN (343) 76


Nonterminals, with rules where they appear

    $accept (101)
        on left: 0
    primary_expression (102)
        on left: 1 2 3 4
        on right: 8
    constant (103)
        on left: 5 6 7
        on right: 2
    postfix_expression (104)
        on left: 8 9 10 11 12 13 14 15 16
        on right: 9 10 11 12 13 14 21
    argument_expression_list (105)
        on left: 17 18
        on right: 18 19
    argument_expression_list_opt (106)
        on left: 19 20
        on right: 10
    unary_expression (107)
        on left: 21 22 23 24 25 26
        on right: 22 23 25 33 66
    unary_operator (108)
        on left: 27 28 29 30 31 32
        on right: 24
    cast_expression (109)
        on left: 33 34
        on right: 24 34 35 36 37 38
    multiplicative_expression (110)
        on left: 35 36 37 38
        on right: 36 37 38 39 40 41
    additive_expression (111)
        on left: 39 40 41
        on right: 40 41 42 43 44
    shift_expression (112)
        on left: 42 43 44
        on right: 43 44 45 46 47 48 49
    relational_expression (113)
        on left: 45 46 47 48 49
        on right: 46 47 48 49 50 51 52
    equality_expression (114)
        on left: 50 51 52
        on right: 51 52 53 54
    AND_expression (115)
        on left: 53 54
        on right: 54 55 56
    exclusive_OR_expression (116)
        on left: 55 56
        on right: 56 57 58
    inclusive_OR_expression (117)
        on left: 57 58
        on right: 58 59 60
    logical_AND_expression (118)
        on left: 59 60
        on right: 60 61 62
    logical_OR_expression (119)
        on left: 61 62
        on right: 62 63 64
    conditional_expression (120)
        on left: 63 64
        on right: 64 65 80
    assignment_expression (121)
        on left: 65 66
        on right: 17 18 66 78 79 134 135 141 158
    assignment_operator (122)
        on left: 67 68 69 70 71 72 73 74 75 76 77
        on right: 66
    expression (123)
        on left: 78 79
        on right: 4 9 64 79 187 188 189 190 191 194
    constant_expression (124)
        on left: 80
        on right: 123 168 177
    declaration (125)
        on left: 81
        on right: 184 193 203 207 208
    init_declarator_list_opt (126)
        on left: 82 83
        on right: 81
    declaration_specifiers (127)
        on left: 84 85 86 87
        on right: 81 88 153 154 204
    declaration_specifiers_opt (128)
        on left: 88 89
        on right: 84 85 86 87
    init_declarator_list (129)
        on left: 90 91
        on right: 82 91
    init_declarator (130)
        on left: 92 93
        on right: 90 91
    storage_class_specifier (131)
        on left: 94 95 96 97
        on right: 84
    type_specifier (132)
        on left: 98 99 100 101 102 103 104 105 106 107 108 109 110
        on right: 85 111
    specifier_qualifier_list (133)
        on left: 111 112
        on right: 113 157
    specifier_qualifier_list_opt (134)
        on left: 113 114
        on right: 111 112
    enum_specifier (135)
        on left: 115 116 117
        on right: 110
    identifier_opt (136)
        on left: 118 119
        on right: 115 116
    enumerator_list (137)
        on left: 120 121
        on right: 115 116 121
    enumerator (138)
        on left: 123
        on right: 120 121
    $@1 (139)
        on left: 122
        on right: 123
    type_qualifier (140)
        on left: 124 125 126
        on right: 86 112 147 148
    function_specifier (141)
        on left: 127
        on right: 87
    declarator (142)
        on left: 128
        on right: 92 93 132 153 204
    pointer_opt (143)
        on left: 129 130
        on right: 128
    direct_declarator (144)
        on left: 131 132 133 134 135 136 137 138
        on right: 128 133 134 135 136 137 138
    type_qualifier_list_opt (145)
        on left: 139 140
        on right: 133 134 136 145 146
    assignment_expression_opt (146)
        on left: 141 142
        on right: 133
    identifier_list_opt (147)
        on left: 143 144
        on right: 138
    pointer (148)
        on left: 145 146
        on right: 129 146
    type_qualifier_list (149)
        on left: 147 148
        on right: 135 139 148
    parameter_type_list (150)
        on left: 149 150
        on right: 137
    parameter_list (151)
        on left: 151 152
        on right: 149 150 152
    parameter_declaration (152)
        on left: 153 154
        on right: 151 152
    identifier_list (153)
        on left: 155 156
        on right: 143 156
    type_name (154)
        on left: 157
        on right: 15 16 26 34
    initializer (155)
        on left: 158 159 160
        on right: 93 161 162
    initializer_list (156)
        on left: 161 162
        on right: 15 16 159 160 162
    designation_opt (157)
        on left: 163 164
        on right: 161 162
    designation (158)
        on left: 165
        on right: 163
    designator_list (159)
        on left: 166 167
        on right: 165 167
    designator (160)
        on left: 168 169
        on right: 166 167
    statement (161)
        on left: 170 171 172 173 174 175
        on right: 176 177 178 185 187 188 189 190 191 192 193
    labeled_statement (162)
        on left: 176 177 178
        on right: 170
    compound_statement (163)
        on left: 179
        on right: 171 204
    block_item_list (164)
        on left: 180 181
        on right: 181 182
    block_item_list_opt (165)
        on left: 182 183
        on right: 179
    block_item (166)
        on left: 184 185
        on right: 180 181
    expression_statement (167)
        on left: 186
        on right: 172
    selection_statement (168)
        on left: 187 188 189
        on right: 173
    iteration_statement (169)
        on left: 190 191 192 193
        on right: 174
    expression_opt (170)
        on left: 194 195
        on right: 186 192 193 199
    jump_statement (171)
        on left: 196 197 198 199
        on right: 175
    translation_unit (172)
        on left: 200 201
        on right: 0 201
    external_declaration (173)
        on left: 202 203
        on right: 200 201
    function_definition (174)
        on left: 204
        on right: 202
    declaration_list_opt (175)
        on left: 205 206
        on right: 204
    declaration_list (176)
        on left: 207 208
        on right: 205 208


State 0

    0 $accept: . translation_unit $end

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

  103 type_specifier: FLOAT .

    $default  reduce using rule 103 (type_specifier)


State 2

  100 type_specifier: SHORT .

    $default  reduce using rule 100 (type_specifier)


State 3

   99 type_specifier: CHAR .

    $default  reduce using rule 99 (type_specifier)


State 4

  107 type_specifier: _BOOL .

    $default  reduce using rule 107 (type_specifier)


State 5

  109 type_specifier: _IMAGINARY .

    $default  reduce using rule 109 (type_specifier)


State 6

  108 type_specifier: _COMPLEX .

    $default  reduce using rule 108 (type_specifier)


State 7

  101 type_specifier: INT .

    $default  reduce using rule 101 (type_specifier)


State 8

  104 type_specifier: DOUBLE .

    $default  reduce using rule 104 (type_specifier)


State 9

  102 type_specifier: LONG .

    $default  reduce using rule 102 (type_specifier)


State 10

   98 type_specifier: VOID .

    $default  reduce using rule 98 (type_specifier)


State 11

  105 type_specifier: SIGNED .

    $default  reduce using rule 105 (type_specifier)


State 12

   96 storage_class_specifier: AUTO .

    $default  reduce using rule 96 (storage_class_specifier)


State 13

  106 type_specifier: UNSIGNED .

    $default  reduce using rule 106 (type_specifier)


State 14

  115 enum_specifier: ENUM . identifier_opt '{' enumerator_list '}'
  116               | ENUM . identifier_opt '{' enumerator_list ',' '}'
  117               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 119 (identifier_opt)

    identifier_opt  go to state 33


State 15

  124 type_qualifier: CONST .

    $default  reduce using rule 124 (type_qualifier)


State 16

   95 storage_class_specifier: STATIC .

    $default  reduce using rule 95 (storage_class_specifier)


State 17

   97 storage_class_specifier: REGISTER .

    $default  reduce using rule 97 (storage_class_specifier)


State 18

  125 type_qualifier: RESTRICT .

    $default  reduce using rule 125 (type_qualifier)


State 19

  126 type_qualifier: VOLATILE .

    $default  reduce using rule 126 (type_qualifier)


State 20

   94 storage_class_specifier: EXTERN .

    $default  reduce using rule 94 (storage_class_specifier)


State 21

  127 function_specifier: INLINE .

    $default  reduce using rule 127 (function_specifier)


State 22

  203 external_declaration: declaration .

    $default  reduce using rule 203 (external_declaration)


State 23

   81 declaration: declaration_specifiers . init_declarator_list_opt ';'
  204 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    MULT  shift, and go to state 34

    ';'       reduce using rule 83 (init_declarator_list_opt)
    $default  reduce using rule 130 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 38
    pointer_opt               go to state 39
    pointer                   go to state 40


State 24

   84 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 89 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 42
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 25

   85 declaration_specifiers: type_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 89 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 43
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 26

  110 type_specifier: enum_specifier .

    $default  reduce using rule 110 (type_specifier)


State 27

   86 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 89 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 44
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 28

   87 declaration_specifiers: function_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 89 (declaration_specifiers_opt)

    declaration_specifiers      go to state 41
    declaration_specifiers_opt  go to state 45
    storage_class_specifier     go to state 24
    type_specifier              go to state 25
    enum_specifier              go to state 26
    type_qualifier              go to state 27
    function_specifier          go to state 28


State 29

    0 $accept: translation_unit . $end
  201 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 46
    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 47
    function_definition      go to state 31


State 30

  200 translation_unit: external_declaration .

    $default  reduce using rule 200 (translation_unit)


State 31

  202 external_declaration: function_definition .

    $default  reduce using rule 202 (external_declaration)


State 32

  117 enum_specifier: ENUM IDENTIFIER .
  118 identifier_opt: IDENTIFIER .

    '{'       reduce using rule 118 (identifier_opt)
    $default  reduce using rule 117 (enum_specifier)


State 33

  115 enum_specifier: ENUM identifier_opt . '{' enumerator_list '}'
  116               | ENUM identifier_opt . '{' enumerator_list ',' '}'

    '{'  shift, and go to state 48


State 34

  145 pointer: MULT . type_qualifier_list_opt
  146        | MULT . type_qualifier_list_opt pointer

    CONST     shift, and go to state 15
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 140 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 50
    type_qualifier_list      go to state 51


State 35

   81 declaration: declaration_specifiers init_declarator_list_opt . ';'

    ';'  shift, and go to state 52


State 36

   82 init_declarator_list_opt: init_declarator_list .
   91 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 53

    $default  reduce using rule 82 (init_declarator_list_opt)


State 37

   90 init_declarator_list: init_declarator .

    $default  reduce using rule 90 (init_declarator_list)


State 38

   92 init_declarator: declarator .
   93                | declarator . ASGN initializer
  204 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21
    ASGN        shift, and go to state 54

    '{'       reduce using rule 206 (declaration_list_opt)
    $default  reduce using rule 92 (init_declarator)

    declaration              go to state 55
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 57
    declaration_list         go to state 58


State 39

  128 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 59
    '('         shift, and go to state 60

    direct_declarator  go to state 61


State 40

  129 pointer_opt: pointer .

    $default  reduce using rule 129 (pointer_opt)


State 41

   88 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 88 (declaration_specifiers_opt)


State 42

   84 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 84 (declaration_specifiers)


State 43

   85 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 85 (declaration_specifiers)


State 44

   86 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


State 45

   87 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 87 (declaration_specifiers)


State 46

    0 $accept: translation_unit $end .

    $default  accept


State 47

  201 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 201 (translation_unit)


State 48

  115 enum_specifier: ENUM identifier_opt '{' . enumerator_list '}'
  116               | ENUM identifier_opt '{' . enumerator_list ',' '}'

    ENUMERATION_CONST  shift, and go to state 62

    enumerator_list  go to state 63
    enumerator       go to state 64


State 49

  147 type_qualifier_list: type_qualifier .

    $default  reduce using rule 147 (type_qualifier_list)


State 50

  145 pointer: MULT type_qualifier_list_opt .
  146        | MULT type_qualifier_list_opt . pointer

    MULT  shift, and go to state 34

    $default  reduce using rule 145 (pointer)

    pointer  go to state 65


State 51

  139 type_qualifier_list_opt: type_qualifier_list .
  148 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 15
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 52

   81 declaration: declaration_specifiers init_declarator_list_opt ';' .

    $default  reduce using rule 81 (declaration)


State 53

   91 init_declarator_list: init_declarator_list ',' . init_declarator

    MULT  shift, and go to state 34

    $default  reduce using rule 130 (pointer_opt)

    init_declarator  go to state 67
    declarator       go to state 68
    pointer_opt      go to state 39
    pointer          go to state 40


State 54

   93 init_declarator: declarator ASGN . initializer

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 84

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 102
    initializer                go to state 103


State 55

  207 declaration_list: declaration .

    $default  reduce using rule 207 (declaration_list)


State 56

   81 declaration: declaration_specifiers . init_declarator_list_opt ';'

    MULT  shift, and go to state 34

    ';'       reduce using rule 83 (init_declarator_list_opt)
    $default  reduce using rule 130 (pointer_opt)

    init_declarator_list_opt  go to state 35
    init_declarator_list      go to state 36
    init_declarator           go to state 37
    declarator                go to state 68
    pointer_opt               go to state 39
    pointer                   go to state 40


State 57

  204 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    '{'  shift, and go to state 104

    compound_statement  go to state 105


State 58

  205 declaration_list_opt: declaration_list .
  208 declaration_list: declaration_list . declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21

    $default  reduce using rule 205 (declaration_list_opt)

    declaration              go to state 106
    declaration_specifiers   go to state 56
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 59

  131 direct_declarator: IDENTIFIER .

    $default  reduce using rule 131 (direct_declarator)


State 60

  132 direct_declarator: '(' . declarator ')'

    MULT  shift, and go to state 34

    $default  reduce using rule 130 (pointer_opt)

    declarator   go to state 107
    pointer_opt  go to state 39
    pointer      go to state 40


State 61

  128 declarator: pointer_opt direct_declarator .
  133 direct_declarator: direct_declarator . '[' type_qualifier_list_opt assignment_expression_opt ']'
  134                  | direct_declarator . '[' STATIC type_qualifier_list_opt assignment_expression ']'
  135                  | direct_declarator . '[' type_qualifier_list STATIC assignment_expression ']'
  136                  | direct_declarator . '[' type_qualifier_list_opt MULT ']'
  137                  | direct_declarator . '(' parameter_type_list ')'
  138                  | direct_declarator . '(' identifier_list_opt ')'

    '('  shift, and go to state 108
    '['  shift, and go to state 109

    $default  reduce using rule 128 (declarator)


State 62

  123 enumerator: ENUMERATION_CONST . $@1 ENUMERATION_CONST ASGN constant_expression

    $default  reduce using rule 122 ($@1)

    $@1  go to state 110


State 63

  115 enum_specifier: ENUM identifier_opt '{' enumerator_list . '}'
  116               | ENUM identifier_opt '{' enumerator_list . ',' '}'
  121 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 111
    ','  shift, and go to state 112


State 64

  120 enumerator_list: enumerator .

    $default  reduce using rule 120 (enumerator_list)


State 65

  146 pointer: MULT type_qualifier_list_opt pointer .

    $default  reduce using rule 146 (pointer)


State 66

  148 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 148 (type_qualifier_list)


State 67

   91 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 68

   92 init_declarator: declarator .
   93                | declarator . ASGN initializer

    ASGN  shift, and go to state 54

    $default  reduce using rule 92 (init_declarator)


State 69

   25 unary_expression: SIZEOF . unary_expression
   26                 | SIZEOF . '(' type_name ')'

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 113

    primary_expression  go to state 85
    constant            go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 114
    unary_operator      go to state 89


State 70

    1 primary_expression: IDENTIFIER .

    $default  reduce using rule 1 (primary_expression)


State 71

    5 constant: INTEGER_CONST .

    $default  reduce using rule 5 (constant)


State 72

    7 constant: CHAR_CONST .

    $default  reduce using rule 7 (constant)


State 73

    6 constant: FLOAT_CONST .

    $default  reduce using rule 6 (constant)


State 74

    3 primary_expression: STRING_LITERAL .

    $default  reduce using rule 3 (primary_expression)


State 75

   29 unary_operator: PLUS .

    $default  reduce using rule 29 (unary_operator)


State 76

   30 unary_operator: MINUS .

    $default  reduce using rule 30 (unary_operator)


State 77

   28 unary_operator: MULT .

    $default  reduce using rule 28 (unary_operator)


State 78

   22 unary_expression: INCREMENT . unary_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 115

    primary_expression  go to state 85
    constant            go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 116
    unary_operator      go to state 89


State 79

   23 unary_expression: DECREMENT . unary_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 115

    primary_expression  go to state 85
    constant            go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 117
    unary_operator      go to state 89


State 80

   27 unary_operator: BITWISE_AND .

    $default  reduce using rule 27 (unary_operator)


State 81

   31 unary_operator: BITWISE_NOT .

    $default  reduce using rule 31 (unary_operator)


State 82

   32 unary_operator: LOGICAL_NOT .

    $default  reduce using rule 32 (unary_operator)


State 83

    4 primary_expression: '(' . expression ')'
   15 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   16                   | '(' . type_name ')' '{' initializer_list ',' '}'
   34 cast_expression: '(' . type_name ')' cast_expression

    SIZEOF          shift, and go to state 69
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    CONST           shift, and go to state 15
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 119
    type_specifier             go to state 120
    specifier_qualifier_list   go to state 121
    enum_specifier             go to state 26
    type_qualifier             go to state 122
    type_name                  go to state 123


State 84

  159 initializer: '{' . initializer_list '}'
  160            | '{' . initializer_list ',' '}'

    '['  shift, and go to state 124
    '.'  shift, and go to state 125

    $default  reduce using rule 164 (designation_opt)

    initializer_list  go to state 126
    designation_opt   go to state 127
    designation       go to state 128
    designator_list   go to state 129
    designator        go to state 130


State 85

    8 postfix_expression: primary_expression .

    $default  reduce using rule 8 (postfix_expression)


State 86

    2 primary_expression: constant .

    $default  reduce using rule 2 (primary_expression)


State 87

    9 postfix_expression: postfix_expression . '[' expression ']'
   10                   | postfix_expression . '(' argument_expression_list_opt ')'
   11                   | postfix_expression . '.' IDENTIFIER
   12                   | postfix_expression . ARROW IDENTIFIER
   13                   | postfix_expression . INCREMENT
   14                   | postfix_expression . DECREMENT
   21 unary_expression: postfix_expression .

    ARROW      shift, and go to state 131
    INCREMENT  shift, and go to state 132
    DECREMENT  shift, and go to state 133
    '('        shift, and go to state 134
    '['        shift, and go to state 135
    '.'        shift, and go to state 136

    $default  reduce using rule 21 (unary_expression)


State 88

   33 cast_expression: unary_expression .
   66 assignment_expression: unary_expression . assignment_operator assignment_expression

    ADD_ASGN     shift, and go to state 137
    SUB_ASGN     shift, and go to state 138
    MULT_ASGN    shift, and go to state 139
    DIV_ASGN     shift, and go to state 140
    MOD_ASGN     shift, and go to state 141
    LSHIFT_ASGN  shift, and go to state 142
    RSHIFT_ASGN  shift, and go to state 143
    AND_ASGN     shift, and go to state 144
    OR_ASGN      shift, and go to state 145
    XOR_ASGN     shift, and go to state 146
    '='          shift, and go to state 147

    $default  reduce using rule 33 (cast_expression)

    assignment_operator  go to state 148


State 89

   24 unary_expression: unary_operator . cast_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression  go to state 85
    constant            go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 149
    unary_operator      go to state 89
    cast_expression     go to state 150


State 90

   35 multiplicative_expression: cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 91

   36 multiplicative_expression: multiplicative_expression . MULT cast_expression
   37                          | multiplicative_expression . DIVIDE cast_expression
   38                          | multiplicative_expression . MODULO cast_expression
   39 additive_expression: multiplicative_expression .

    MULT    shift, and go to state 151
    DIVIDE  shift, and go to state 152
    MODULO  shift, and go to state 153

    $default  reduce using rule 39 (additive_expression)


State 92

   40 additive_expression: additive_expression . PLUS multiplicative_expression
   41                    | additive_expression . MINUS multiplicative_expression
   42 shift_expression: additive_expression .

    PLUS   shift, and go to state 154
    MINUS  shift, and go to state 155

    $default  reduce using rule 42 (shift_expression)


State 93

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   45 relational_expression: shift_expression .

    RSHIFT  shift, and go to state 156
    LSHIFT  shift, and go to state 157

    $default  reduce using rule 45 (relational_expression)


State 94

   46 relational_expression: relational_expression . LT shift_expression
   47                      | relational_expression . GT shift_expression
   48                      | relational_expression . LEQ shift_expression
   49                      | relational_expression . GEQ shift_expression
   50 equality_expression: relational_expression .

    LT   shift, and go to state 158
    GT   shift, and go to state 159
    LEQ  shift, and go to state 160
    GEQ  shift, and go to state 161

    $default  reduce using rule 50 (equality_expression)


State 95

   51 equality_expression: equality_expression . EQ relational_expression
   52                    | equality_expression . NEQ relational_expression
   53 AND_expression: equality_expression .

    EQ   shift, and go to state 162
    NEQ  shift, and go to state 163

    $default  reduce using rule 53 (AND_expression)


State 96

   54 AND_expression: AND_expression . BITWISE_AND equality_expression
   55 exclusive_OR_expression: AND_expression .

    BITWISE_AND  shift, and go to state 164

    $default  reduce using rule 55 (exclusive_OR_expression)


State 97

   56 exclusive_OR_expression: exclusive_OR_expression . XOR AND_expression
   57 inclusive_OR_expression: exclusive_OR_expression .

    XOR  shift, and go to state 165

    $default  reduce using rule 57 (inclusive_OR_expression)


State 98

   58 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   59 logical_AND_expression: inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 166

    $default  reduce using rule 59 (logical_AND_expression)


State 99

   60 logical_AND_expression: logical_AND_expression . LOGICAL_AND inclusive_OR_expression
   61 logical_OR_expression: logical_AND_expression .

    LOGICAL_AND  shift, and go to state 167

    $default  reduce using rule 61 (logical_OR_expression)


State 100

   62 logical_OR_expression: logical_OR_expression . LOGICAL_OR logical_AND_expression
   63 conditional_expression: logical_OR_expression .
   64                       | logical_OR_expression . '?' expression ':' conditional_expression

    LOGICAL_OR  shift, and go to state 168
    '?'         shift, and go to state 169

    $default  reduce using rule 63 (conditional_expression)


State 101

   65 assignment_expression: conditional_expression .

    $default  reduce using rule 65 (assignment_expression)


State 102

  158 initializer: assignment_expression .

    $default  reduce using rule 158 (initializer)


State 103

   93 init_declarator: declarator ASGN initializer .

    $default  reduce using rule 93 (init_declarator)


State 104

  179 compound_statement: '{' . block_item_list_opt '}'

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    CONST           shift, and go to state 15
    DEFAULT         shift, and go to state 180
    STATIC          shift, and go to state 16
    REGISTER        shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    EXTERN          shift, and go to state 20
    INLINE          shift, and go to state 21
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    ';'       reduce using rule 195 (expression_opt)
    $default  reduce using rule 183 (block_item_list_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    declaration                go to state 183
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 184
    labeled_statement          go to state 185
    compound_statement         go to state 186
    block_item_list            go to state 187
    block_item_list_opt        go to state 188
    block_item                 go to state 189
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 105

  204 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 204 (function_definition)


State 106

  208 declaration_list: declaration_list declaration .

    $default  reduce using rule 208 (declaration_list)


State 107

  132 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 195


State 108

  137 direct_declarator: direct_declarator '(' . parameter_type_list ')'
  138                  | direct_declarator '(' . identifier_list_opt ')'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21
    IDENTIFIER  shift, and go to state 196

    $default  reduce using rule 144 (identifier_list_opt)

    declaration_specifiers   go to state 197
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    identifier_list_opt      go to state 198
    parameter_type_list      go to state 199
    parameter_list           go to state 200
    parameter_declaration    go to state 201
    identifier_list          go to state 202


State 109

  133 direct_declarator: direct_declarator '[' . type_qualifier_list_opt assignment_expression_opt ']'
  134                  | direct_declarator '[' . STATIC type_qualifier_list_opt assignment_expression ']'
  135                  | direct_declarator '[' . type_qualifier_list STATIC assignment_expression ']'
  136                  | direct_declarator '[' . type_qualifier_list_opt MULT ']'

    CONST     shift, and go to state 15
    STATIC    shift, and go to state 203
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 140 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 204
    type_qualifier_list      go to state 205


State 110

  123 enumerator: ENUMERATION_CONST $@1 . ENUMERATION_CONST ASGN constant_expression

    ENUMERATION_CONST  shift, and go to state 206


State 111

  115 enum_specifier: ENUM identifier_opt '{' enumerator_list '}' .

    $default  reduce using rule 115 (enum_specifier)


State 112

  116 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' . '}'
  121 enumerator_list: enumerator_list ',' . enumerator

    ENUMERATION_CONST  shift, and go to state 62
    '}'                shift, and go to state 207

    enumerator  go to state 208


State 113

    4 primary_expression: '(' . expression ')'
   15 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   16                   | '(' . type_name ')' '{' initializer_list ',' '}'
   26 unary_expression: SIZEOF '(' . type_name ')'

    SIZEOF          shift, and go to state 69
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    CONST           shift, and go to state 15
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 119
    type_specifier             go to state 120
    specifier_qualifier_list   go to state 121
    enum_specifier             go to state 26
    type_qualifier             go to state 122
    type_name                  go to state 209


State 114

   25 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 25 (unary_expression)


State 115

    4 primary_expression: '(' . expression ')'
   15 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   16                   | '(' . type_name ')' '{' initializer_list ',' '}'

    SIZEOF          shift, and go to state 69
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    CONST           shift, and go to state 15
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 119
    type_specifier             go to state 120
    specifier_qualifier_list   go to state 121
    enum_specifier             go to state 26
    type_qualifier             go to state 122
    type_name                  go to state 210


State 116

   22 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 117

   23 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 118

   78 expression: assignment_expression .

    $default  reduce using rule 78 (expression)


State 119

    4 primary_expression: '(' expression . ')'
   79 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 211
    ','  shift, and go to state 212


State 120

  111 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19

    $default  reduce using rule 114 (specifier_qualifier_list_opt)

    type_specifier                go to state 120
    specifier_qualifier_list      go to state 213
    specifier_qualifier_list_opt  go to state 214
    enum_specifier                go to state 26
    type_qualifier                go to state 122


State 121

  157 type_name: specifier_qualifier_list .

    $default  reduce using rule 157 (type_name)


State 122

  112 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19

    $default  reduce using rule 114 (specifier_qualifier_list_opt)

    type_specifier                go to state 120
    specifier_qualifier_list      go to state 213
    specifier_qualifier_list_opt  go to state 215
    enum_specifier                go to state 26
    type_qualifier                go to state 122


State 123

   15 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   16                   | '(' type_name . ')' '{' initializer_list ',' '}'
   34 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 216


State 124

  168 designator: '[' . constant_expression ']'

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 217
    constant_expression        go to state 218


State 125

  169 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 219


State 126

  159 initializer: '{' initializer_list . '}'
  160            | '{' initializer_list . ',' '}'
  162 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 220
    ','  shift, and go to state 221


State 127

  161 initializer_list: designation_opt . initializer

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 84

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 102
    initializer                go to state 222


State 128

  163 designation_opt: designation .

    $default  reduce using rule 163 (designation_opt)


State 129

  165 designation: designator_list . '='
  167 designator_list: designator_list . designator

    '['  shift, and go to state 124
    '.'  shift, and go to state 125
    '='  shift, and go to state 223

    designator  go to state 224


State 130

  166 designator_list: designator .

    $default  reduce using rule 166 (designator_list)


State 131

   12 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 225


State 132

   13 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 13 (postfix_expression)


State 133

   14 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 14 (postfix_expression)


State 134

   10 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    $default  reduce using rule 20 (argument_expression_list_opt)

    primary_expression            go to state 85
    constant                      go to state 86
    postfix_expression            go to state 87
    argument_expression_list      go to state 226
    argument_expression_list_opt  go to state 227
    unary_expression              go to state 88
    unary_operator                go to state 89
    cast_expression               go to state 90
    multiplicative_expression     go to state 91
    additive_expression           go to state 92
    shift_expression              go to state 93
    relational_expression         go to state 94
    equality_expression           go to state 95
    AND_expression                go to state 96
    exclusive_OR_expression       go to state 97
    inclusive_OR_expression       go to state 98
    logical_AND_expression        go to state 99
    logical_OR_expression         go to state 100
    conditional_expression        go to state 101
    assignment_expression         go to state 228


State 135

    9 postfix_expression: postfix_expression '[' . expression ']'

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 229


State 136

   11 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 230


State 137

   71 assignment_operator: ADD_ASGN .

    $default  reduce using rule 71 (assignment_operator)


State 138

   72 assignment_operator: SUB_ASGN .

    $default  reduce using rule 72 (assignment_operator)


State 139

   68 assignment_operator: MULT_ASGN .

    $default  reduce using rule 68 (assignment_operator)


State 140

   69 assignment_operator: DIV_ASGN .

    $default  reduce using rule 69 (assignment_operator)


State 141

   70 assignment_operator: MOD_ASGN .

    $default  reduce using rule 70 (assignment_operator)


State 142

   73 assignment_operator: LSHIFT_ASGN .

    $default  reduce using rule 73 (assignment_operator)


State 143

   74 assignment_operator: RSHIFT_ASGN .

    $default  reduce using rule 74 (assignment_operator)


State 144

   75 assignment_operator: AND_ASGN .

    $default  reduce using rule 75 (assignment_operator)


State 145

   77 assignment_operator: OR_ASGN .

    $default  reduce using rule 77 (assignment_operator)


State 146

   76 assignment_operator: XOR_ASGN .

    $default  reduce using rule 76 (assignment_operator)


State 147

   67 assignment_operator: '=' .

    $default  reduce using rule 67 (assignment_operator)


State 148

   66 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 231


State 149

   33 cast_expression: unary_expression .

    $default  reduce using rule 33 (cast_expression)


State 150

   24 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 24 (unary_expression)


State 151

   36 multiplicative_expression: multiplicative_expression MULT . cast_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression  go to state 85
    constant            go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 149
    unary_operator      go to state 89
    cast_expression     go to state 232


State 152

   37 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression  go to state 85
    constant            go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 149
    unary_operator      go to state 89
    cast_expression     go to state 233


State 153

   38 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression  go to state 85
    constant            go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 149
    unary_operator      go to state 89
    cast_expression     go to state 234


State 154

   40 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 235


State 155

   41 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 236


State 156

   44 shift_expression: shift_expression RSHIFT . additive_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 237


State 157

   43 shift_expression: shift_expression LSHIFT . additive_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 238


State 158

   46 relational_expression: relational_expression LT . shift_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 239


State 159

   47 relational_expression: relational_expression GT . shift_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 240


State 160

   48 relational_expression: relational_expression LEQ . shift_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 241


State 161

   49 relational_expression: relational_expression GEQ . shift_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 242


State 162

   51 equality_expression: equality_expression EQ . relational_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 243


State 163

   52 equality_expression: equality_expression NEQ . relational_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 244


State 164

   54 AND_expression: AND_expression BITWISE_AND . equality_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 245


State 165

   56 exclusive_OR_expression: exclusive_OR_expression XOR . AND_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 246


State 166

   58 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR . exclusive_OR_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 247


State 167

   60 logical_AND_expression: logical_AND_expression LOGICAL_AND . inclusive_OR_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 248


State 168

   62 logical_OR_expression: logical_OR_expression LOGICAL_OR . logical_AND_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 249


State 169

   64 conditional_expression: logical_OR_expression '?' . expression ':' conditional_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 250


State 170

  198 jump_statement: BREAK . ';'

    ';'  shift, and go to state 251


State 171

  199 jump_statement: RETURN . expression_opt ';'

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    expression_opt             go to state 252


State 172

  177 labeled_statement: CASE . constant_expression ':' statement

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 217
    constant_expression        go to state 253


State 173

  192 iteration_statement: FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement
  193                    | FOR . '(' declaration expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 254


State 174

  190 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 255


State 175

  196 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 256


State 176

  197 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 257


State 177

  187 selection_statement: IF . '(' expression ')' statement
  188                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 258


State 178

  191 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 259
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 179

  189 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 260


State 180

  178 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 261


State 181

    1 primary_expression: IDENTIFIER .
  176 labeled_statement: IDENTIFIER . ':' statement

    ':'  shift, and go to state 262

    $default  reduce using rule 1 (primary_expression)


State 182

   79 expression: expression . ',' assignment_expression
  194 expression_opt: expression .

    ','  shift, and go to state 212

    $default  reduce using rule 194 (expression_opt)


State 183

  184 block_item: declaration .

    $default  reduce using rule 184 (block_item)


State 184

  185 block_item: statement .

    $default  reduce using rule 185 (block_item)


State 185

  170 statement: labeled_statement .

    $default  reduce using rule 170 (statement)


State 186

  171 statement: compound_statement .

    $default  reduce using rule 171 (statement)


State 187

  181 block_item_list: block_item_list . block_item
  182 block_item_list_opt: block_item_list .

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    CONST           shift, and go to state 15
    DEFAULT         shift, and go to state 180
    STATIC          shift, and go to state 16
    REGISTER        shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    EXTERN          shift, and go to state 20
    INLINE          shift, and go to state 21
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    ';'       reduce using rule 195 (expression_opt)
    $default  reduce using rule 182 (block_item_list_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    declaration                go to state 183
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 184
    labeled_statement          go to state 185
    compound_statement         go to state 186
    block_item                 go to state 263
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 188

  179 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 264


State 189

  180 block_item_list: block_item .

    $default  reduce using rule 180 (block_item_list)


State 190

  172 statement: expression_statement .

    $default  reduce using rule 172 (statement)


State 191

  173 statement: selection_statement .

    $default  reduce using rule 173 (statement)


State 192

  174 statement: iteration_statement .

    $default  reduce using rule 174 (statement)


State 193

  186 expression_statement: expression_opt . ';'

    ';'  shift, and go to state 265


State 194

  175 statement: jump_statement .

    $default  reduce using rule 175 (statement)


State 195

  132 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 132 (direct_declarator)


State 196

  155 identifier_list: IDENTIFIER .

    $default  reduce using rule 155 (identifier_list)


State 197

  153 parameter_declaration: declaration_specifiers . declarator
  154                      | declaration_specifiers .

    MULT  shift, and go to state 34

    ')'       reduce using rule 154 (parameter_declaration)
    ','       reduce using rule 154 (parameter_declaration)
    $default  reduce using rule 130 (pointer_opt)

    declarator   go to state 266
    pointer_opt  go to state 39
    pointer      go to state 40


State 198

  138 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 267


State 199

  137 direct_declarator: direct_declarator '(' parameter_type_list . ')'

    ')'  shift, and go to state 268


State 200

  149 parameter_type_list: parameter_list .
  150                    | parameter_list . ',' ELLIPSIS
  152 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 269

    $default  reduce using rule 149 (parameter_type_list)


State 201

  151 parameter_list: parameter_declaration .

    $default  reduce using rule 151 (parameter_list)


State 202

  143 identifier_list_opt: identifier_list .
  156 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 270

    $default  reduce using rule 143 (identifier_list_opt)


State 203

  134 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list_opt assignment_expression ']'

    CONST     shift, and go to state 15
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 140 (type_qualifier_list_opt)

    type_qualifier           go to state 49
    type_qualifier_list_opt  go to state 271
    type_qualifier_list      go to state 51


State 204

  133 direct_declarator: direct_declarator '[' type_qualifier_list_opt . assignment_expression_opt ']'
  136                  | direct_declarator '[' type_qualifier_list_opt . MULT ']'

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 272
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    $default  reduce using rule 142 (assignment_expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 273
    assignment_expression_opt  go to state 274


State 205

  135 direct_declarator: direct_declarator '[' type_qualifier_list . STATIC assignment_expression ']'
  139 type_qualifier_list_opt: type_qualifier_list .
  148 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 15
    STATIC    shift, and go to state 275
    RESTRICT  shift, and go to state 18
    VOLATILE  shift, and go to state 19

    $default  reduce using rule 139 (type_qualifier_list_opt)

    type_qualifier  go to state 66


State 206

  123 enumerator: ENUMERATION_CONST $@1 ENUMERATION_CONST . ASGN constant_expression

    ASGN  shift, and go to state 276


State 207

  116 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' '}' .

    $default  reduce using rule 116 (enum_specifier)


State 208

  121 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 121 (enumerator_list)


State 209

   15 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   16                   | '(' type_name . ')' '{' initializer_list ',' '}'
   26 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 277


State 210

   15 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   16                   | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 278


State 211

    4 primary_expression: '(' expression ')' .

    $default  reduce using rule 4 (primary_expression)


State 212

   79 expression: expression ',' . assignment_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 279


State 213

  113 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 113 (specifier_qualifier_list_opt)


State 214

  111 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 111 (specifier_qualifier_list)


State 215

  112 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 112 (specifier_qualifier_list)


State 216

   15 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   16                   | '(' type_name ')' . '{' initializer_list ',' '}'
   34 cast_expression: '(' type_name ')' . cast_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 280

    primary_expression  go to state 85
    constant            go to state 86
    postfix_expression  go to state 87
    unary_expression    go to state 149
    unary_operator      go to state 89
    cast_expression     go to state 281


State 217

   80 constant_expression: conditional_expression .

    $default  reduce using rule 80 (constant_expression)


State 218

  168 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 282


State 219

  169 designator: '.' IDENTIFIER .

    $default  reduce using rule 169 (designator)


State 220

  159 initializer: '{' initializer_list '}' .

    $default  reduce using rule 159 (initializer)


State 221

  160 initializer: '{' initializer_list ',' . '}'
  162 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 124
    '.'  shift, and go to state 125
    '}'  shift, and go to state 283

    $default  reduce using rule 164 (designation_opt)

    designation_opt  go to state 284
    designation      go to state 128
    designator_list  go to state 129
    designator       go to state 130


State 222

  161 initializer_list: designation_opt initializer .

    $default  reduce using rule 161 (initializer_list)


State 223

  165 designation: designator_list '=' .

    $default  reduce using rule 165 (designation)


State 224

  167 designator_list: designator_list designator .

    $default  reduce using rule 167 (designator_list)


State 225

   12 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 226

   18 argument_expression_list: argument_expression_list . ',' assignment_expression
   19 argument_expression_list_opt: argument_expression_list .

    ','  shift, and go to state 285

    $default  reduce using rule 19 (argument_expression_list_opt)


State 227

   10 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 286


State 228

   17 argument_expression_list: assignment_expression .

    $default  reduce using rule 17 (argument_expression_list)


State 229

    9 postfix_expression: postfix_expression '[' expression . ']'
   79 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 287
    ','  shift, and go to state 212


State 230

   11 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 11 (postfix_expression)


State 231

   66 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 66 (assignment_expression)


State 232

   36 multiplicative_expression: multiplicative_expression MULT cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 233

   37 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 234

   38 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 235

   36 multiplicative_expression: multiplicative_expression . MULT cast_expression
   37                          | multiplicative_expression . DIVIDE cast_expression
   38                          | multiplicative_expression . MODULO cast_expression
   40 additive_expression: additive_expression PLUS multiplicative_expression .

    MULT    shift, and go to state 151
    DIVIDE  shift, and go to state 152
    MODULO  shift, and go to state 153

    $default  reduce using rule 40 (additive_expression)


State 236

   36 multiplicative_expression: multiplicative_expression . MULT cast_expression
   37                          | multiplicative_expression . DIVIDE cast_expression
   38                          | multiplicative_expression . MODULO cast_expression
   41 additive_expression: additive_expression MINUS multiplicative_expression .

    MULT    shift, and go to state 151
    DIVIDE  shift, and go to state 152
    MODULO  shift, and go to state 153

    $default  reduce using rule 41 (additive_expression)


State 237

   40 additive_expression: additive_expression . PLUS multiplicative_expression
   41                    | additive_expression . MINUS multiplicative_expression
   44 shift_expression: shift_expression RSHIFT additive_expression .

    PLUS   shift, and go to state 154
    MINUS  shift, and go to state 155

    $default  reduce using rule 44 (shift_expression)


State 238

   40 additive_expression: additive_expression . PLUS multiplicative_expression
   41                    | additive_expression . MINUS multiplicative_expression
   43 shift_expression: shift_expression LSHIFT additive_expression .

    PLUS   shift, and go to state 154
    MINUS  shift, and go to state 155

    $default  reduce using rule 43 (shift_expression)


State 239

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   46 relational_expression: relational_expression LT shift_expression .

    RSHIFT  shift, and go to state 156
    LSHIFT  shift, and go to state 157

    $default  reduce using rule 46 (relational_expression)


State 240

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   47 relational_expression: relational_expression GT shift_expression .

    RSHIFT  shift, and go to state 156
    LSHIFT  shift, and go to state 157

    $default  reduce using rule 47 (relational_expression)


State 241

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   48 relational_expression: relational_expression LEQ shift_expression .

    RSHIFT  shift, and go to state 156
    LSHIFT  shift, and go to state 157

    $default  reduce using rule 48 (relational_expression)


State 242

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   49 relational_expression: relational_expression GEQ shift_expression .

    RSHIFT  shift, and go to state 156
    LSHIFT  shift, and go to state 157

    $default  reduce using rule 49 (relational_expression)


State 243

   46 relational_expression: relational_expression . LT shift_expression
   47                      | relational_expression . GT shift_expression
   48                      | relational_expression . LEQ shift_expression
   49                      | relational_expression . GEQ shift_expression
   51 equality_expression: equality_expression EQ relational_expression .

    LT   shift, and go to state 158
    GT   shift, and go to state 159
    LEQ  shift, and go to state 160
    GEQ  shift, and go to state 161

    $default  reduce using rule 51 (equality_expression)


State 244

   46 relational_expression: relational_expression . LT shift_expression
   47                      | relational_expression . GT shift_expression
   48                      | relational_expression . LEQ shift_expression
   49                      | relational_expression . GEQ shift_expression
   52 equality_expression: equality_expression NEQ relational_expression .

    LT   shift, and go to state 158
    GT   shift, and go to state 159
    LEQ  shift, and go to state 160
    GEQ  shift, and go to state 161

    $default  reduce using rule 52 (equality_expression)


State 245

   51 equality_expression: equality_expression . EQ relational_expression
   52                    | equality_expression . NEQ relational_expression
   54 AND_expression: AND_expression BITWISE_AND equality_expression .

    EQ   shift, and go to state 162
    NEQ  shift, and go to state 163

    $default  reduce using rule 54 (AND_expression)


State 246

   54 AND_expression: AND_expression . BITWISE_AND equality_expression
   56 exclusive_OR_expression: exclusive_OR_expression XOR AND_expression .

    BITWISE_AND  shift, and go to state 164

    $default  reduce using rule 56 (exclusive_OR_expression)


State 247

   56 exclusive_OR_expression: exclusive_OR_expression . XOR AND_expression
   58 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression .

    XOR  shift, and go to state 165

    $default  reduce using rule 58 (inclusive_OR_expression)


State 248

   58 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   60 logical_AND_expression: logical_AND_expression LOGICAL_AND inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 166

    $default  reduce using rule 60 (logical_AND_expression)


State 249

   60 logical_AND_expression: logical_AND_expression . LOGICAL_AND inclusive_OR_expression
   62 logical_OR_expression: logical_OR_expression LOGICAL_OR logical_AND_expression .

    LOGICAL_AND  shift, and go to state 167

    $default  reduce using rule 62 (logical_OR_expression)


State 250

   64 conditional_expression: logical_OR_expression '?' expression . ':' conditional_expression
   79 expression: expression . ',' assignment_expression

    ','  shift, and go to state 212
    ':'  shift, and go to state 288


State 251

  198 jump_statement: BREAK ';' .

    $default  reduce using rule 198 (jump_statement)


State 252

  199 jump_statement: RETURN expression_opt . ';'

    ';'  shift, and go to state 289


State 253

  177 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 290


State 254

  192 iteration_statement: FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement
  193                    | FOR '(' . declaration expression_opt ';' expression_opt ')' statement

    SIZEOF          shift, and go to state 69
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    CONST           shift, and go to state 15
    STATIC          shift, and go to state 16
    REGISTER        shift, and go to state 17
    RESTRICT        shift, and go to state 18
    VOLATILE        shift, and go to state 19
    EXTERN          shift, and go to state 20
    INLINE          shift, and go to state 21
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    declaration                go to state 291
    declaration_specifiers     go to state 56
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_opt             go to state 292


State 255

  190 iteration_statement: WHILE '(' . expression ')' statement

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 293


State 256

  196 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 294


State 257

  197 jump_statement: CONTINUE ';' .

    $default  reduce using rule 197 (jump_statement)


State 258

  187 selection_statement: IF '(' . expression ')' statement
  188                    | IF '(' . expression ')' statement ELSE statement

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 295


State 259

  191 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 296


State 260

  189 selection_statement: SWITCH '(' . expression ')' statement

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 297


State 261

  178 labeled_statement: DEFAULT ':' . statement

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 298
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 262

  176 labeled_statement: IDENTIFIER ':' . statement

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 299
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 263

  181 block_item_list: block_item_list block_item .

    $default  reduce using rule 181 (block_item_list)


State 264

  179 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 179 (compound_statement)


State 265

  186 expression_statement: expression_opt ';' .

    $default  reduce using rule 186 (expression_statement)


State 266

  153 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 153 (parameter_declaration)


State 267

  138 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 138 (direct_declarator)


State 268

  137 direct_declarator: direct_declarator '(' parameter_type_list ')' .

    $default  reduce using rule 137 (direct_declarator)


State 269

  150 parameter_type_list: parameter_list ',' . ELLIPSIS
  152 parameter_list: parameter_list ',' . parameter_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    CONST       shift, and go to state 15
    STATIC      shift, and go to state 16
    REGISTER    shift, and go to state 17
    RESTRICT    shift, and go to state 18
    VOLATILE    shift, and go to state 19
    EXTERN      shift, and go to state 20
    INLINE      shift, and go to state 21
    ELLIPSIS    shift, and go to state 300

    declaration_specifiers   go to state 197
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 301


State 270

  156 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 302


State 271

  134 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt . assignment_expression ']'

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 303


State 272

   28 unary_operator: MULT .
  136 direct_declarator: direct_declarator '[' type_qualifier_list_opt MULT . ']'

    ']'  shift, and go to state 304

    $default  reduce using rule 28 (unary_operator)


State 273

  141 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 141 (assignment_expression_opt)


State 274

  133 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt . ']'

    ']'  shift, and go to state 305


State 275

  135 direct_declarator: direct_declarator '[' type_qualifier_list STATIC . assignment_expression ']'

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 306


State 276

  123 enumerator: ENUMERATION_CONST $@1 ENUMERATION_CONST ASGN . constant_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 217
    constant_expression        go to state 307


State 277

   15 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   16                   | '(' type_name ')' . '{' initializer_list ',' '}'
   26 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 280

    $default  reduce using rule 26 (unary_expression)


State 278

   15 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   16                   | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 280


State 279

   79 expression: expression ',' assignment_expression .

    $default  reduce using rule 79 (expression)


State 280

   15 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   16                   | '(' type_name ')' '{' . initializer_list ',' '}'

    '['  shift, and go to state 124
    '.'  shift, and go to state 125

    $default  reduce using rule 164 (designation_opt)

    initializer_list  go to state 308
    designation_opt   go to state 127
    designation       go to state 128
    designator_list   go to state 129
    designator        go to state 130


State 281

   34 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 34 (cast_expression)


State 282

  168 designator: '[' constant_expression ']' .

    $default  reduce using rule 168 (designator)


State 283

  160 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 160 (initializer)


State 284

  162 initializer_list: initializer_list ',' designation_opt . initializer

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 84

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 102
    initializer                go to state 309


State 285

   18 argument_expression_list: argument_expression_list ',' . assignment_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 310


State 286

   10 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 10 (postfix_expression)


State 287

    9 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 9 (postfix_expression)


State 288

   64 conditional_expression: logical_OR_expression '?' expression ':' . conditional_expression

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 149
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 311


State 289

  199 jump_statement: RETURN expression_opt ';' .

    $default  reduce using rule 199 (jump_statement)


State 290

  177 labeled_statement: CASE constant_expression ':' . statement

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 312
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 291

  193 iteration_statement: FOR '(' declaration . expression_opt ';' expression_opt ')' statement

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    expression_opt             go to state 313


State 292

  192 iteration_statement: FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 314


State 293

   79 expression: expression . ',' assignment_expression
  190 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 315
    ','  shift, and go to state 212


State 294

  196 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 196 (jump_statement)


State 295

   79 expression: expression . ',' assignment_expression
  187 selection_statement: IF '(' expression . ')' statement
  188                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 316
    ','  shift, and go to state 212


State 296

  191 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 317


State 297

   79 expression: expression . ',' assignment_expression
  189 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 318
    ','  shift, and go to state 212


State 298

  178 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 178 (labeled_statement)


State 299

  176 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 176 (labeled_statement)


State 300

  150 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 150 (parameter_type_list)


State 301

  152 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 152 (parameter_list)


State 302

  156 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 156 (identifier_list)


State 303

  134 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression . ']'

    ']'  shift, and go to state 319


State 304

  136 direct_declarator: direct_declarator '[' type_qualifier_list_opt MULT ']' .

    $default  reduce using rule 136 (direct_declarator)


State 305

  133 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']' .

    $default  reduce using rule 133 (direct_declarator)


State 306

  135 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression . ']'

    ']'  shift, and go to state 320


State 307

  123 enumerator: ENUMERATION_CONST $@1 ENUMERATION_CONST ASGN constant_expression .

    $default  reduce using rule 123 (enumerator)


State 308

   15 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   16                   | '(' type_name ')' '{' initializer_list . ',' '}'
  162 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 321
    ','  shift, and go to state 322


State 309

  162 initializer_list: initializer_list ',' designation_opt initializer .

    $default  reduce using rule 162 (initializer_list)


State 310

   18 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 311

   64 conditional_expression: logical_OR_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 64 (conditional_expression)


State 312

  177 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 177 (labeled_statement)


State 313

  193 iteration_statement: FOR '(' declaration expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 323


State 314

  192 iteration_statement: FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    expression_opt             go to state 324


State 315

  190 iteration_statement: WHILE '(' expression ')' . statement

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 325
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 316

  187 selection_statement: IF '(' expression ')' . statement
  188                    | IF '(' expression ')' . statement ELSE statement

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 326
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 317

  191 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 327


State 318

  189 selection_statement: SWITCH '(' expression ')' . statement

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 328
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 319

  134 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']' .

    $default  reduce using rule 134 (direct_declarator)


State 320

  135 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression ']' .

    $default  reduce using rule 135 (direct_declarator)


State 321

   15 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 15 (postfix_expression)


State 322

   16 postfix_expression: '(' type_name ')' '{' initializer_list ',' . '}'
  162 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 124
    '.'  shift, and go to state 125
    '}'  shift, and go to state 329

    $default  reduce using rule 164 (designation_opt)

    designation_opt  go to state 284
    designation      go to state 128
    designator_list  go to state 129
    designator       go to state 130


State 323

  193 iteration_statement: FOR '(' declaration expression_opt ';' . expression_opt ')' statement

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    expression_opt             go to state 330


State 324

  192 iteration_statement: FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 331


State 325

  190 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 190 (iteration_statement)


State 326

  187 selection_statement: IF '(' expression ')' statement .
  188                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 332

    ELSE      [reduce using rule 187 (selection_statement)]
    $default  reduce using rule 187 (selection_statement)


State 327

   79 expression: expression . ',' assignment_expression
  191 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 333
    ','  shift, and go to state 212


State 328

  189 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 189 (selection_statement)


State 329

   16 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 16 (postfix_expression)


State 330

  193 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 334


State 331

  192 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    SIZEOF          shift, and go to state 69
    IDENTIFIER      shift, and go to state 70
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    expression_opt             go to state 335


State 332

  188 selection_statement: IF '(' expression ')' statement ELSE . statement

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 336
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 333

  191 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 337


State 334

  193 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt ')' . statement

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 338
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 335

  192 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 339


State 336

  188 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 188 (selection_statement)


State 337

  191 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 191 (iteration_statement)


State 338

  193 iteration_statement: FOR '(' declaration expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 193 (iteration_statement)


State 339

  192 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    BREAK           shift, and go to state 170
    RETURN          shift, and go to state 171
    CASE            shift, and go to state 172
    FOR             shift, and go to state 173
    WHILE           shift, and go to state 174
    GOTO            shift, and go to state 175
    SIZEOF          shift, and go to state 69
    CONTINUE        shift, and go to state 176
    IF              shift, and go to state 177
    DO              shift, and go to state 178
    SWITCH          shift, and go to state 179
    DEFAULT         shift, and go to state 180
    IDENTIFIER      shift, and go to state 181
    INTEGER_CONST   shift, and go to state 71
    CHAR_CONST      shift, and go to state 72
    FLOAT_CONST     shift, and go to state 73
    STRING_LITERAL  shift, and go to state 74
    PLUS            shift, and go to state 75
    MINUS           shift, and go to state 76
    MULT            shift, and go to state 77
    INCREMENT       shift, and go to state 78
    DECREMENT       shift, and go to state 79
    BITWISE_AND     shift, and go to state 80
    BITWISE_NOT     shift, and go to state 81
    LOGICAL_NOT     shift, and go to state 82
    '('             shift, and go to state 83
    '{'             shift, and go to state 104

    $default  reduce using rule 195 (expression_opt)

    primary_expression         go to state 85
    constant                   go to state 86
    postfix_expression         go to state 87
    unary_expression           go to state 88
    unary_operator             go to state 89
    cast_expression            go to state 90
    multiplicative_expression  go to state 91
    additive_expression        go to state 92
    shift_expression           go to state 93
    relational_expression      go to state 94
    equality_expression        go to state 95
    AND_expression             go to state 96
    exclusive_OR_expression    go to state 97
    inclusive_OR_expression    go to state 98
    logical_AND_expression     go to state 99
    logical_OR_expression      go to state 100
    conditional_expression     go to state 101
    assignment_expression      go to state 118
    expression                 go to state 182
    statement                  go to state 340
    labeled_statement          go to state 185
    compound_statement         go to state 186
    expression_statement       go to state 190
    selection_statement        go to state 191
    iteration_statement        go to state 192
    expression_opt             go to state 193
    jump_statement             go to state 194


State 340

  192 iteration_statement: FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 192 (iteration_statement)

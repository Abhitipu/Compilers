Terminals unused in grammar

    TYPEDEF
    STRING_LITERAL
    ENUMERATION_CONST


Grammar

    0 $accept: translation_unit $end

    1 changetable: %empty

    2 constant: INTEGER_CONST
    3         | FLOAT_CONST
    4         | CHAR_CONST

    5 primary_expression: IDENTIFIER
    6                   | constant
    7                   | '(' expression ')'

    8 postfix_expression: primary_expression
    9                   | postfix_expression '[' expression ']'
   10                   | postfix_expression '(' argument_expression_list_opt ')'
   11                   | postfix_expression '.' IDENTIFIER
   12                   | postfix_expression ARROW IDENTIFIER
   13                   | postfix_expression INCREMENT
   14                   | postfix_expression DECREMENT
   15                   | '(' type_name ')' '{' initializer_list '}'
   16                   | '(' type_name ')' '{' initializer_list ',' '}'

   17 argument_expression_list: assignment_expression
   18                         | argument_expression_list ',' assignment_expression

   19 argument_expression_list_opt: argument_expression_list
   20                             | %empty

   21 unary_expression: postfix_expression
   22                 | INCREMENT unary_expression
   23                 | DECREMENT unary_expression
   24                 | unary_operator cast_expression
   25                 | SIZEOF unary_expression
   26                 | SIZEOF '(' type_name ')'

   27 unary_operator: BITWISE_AND
   28               | MULT
   29               | PLUS
   30               | MINUS
   31               | BITWISE_NOT
   32               | LOGICAL_NOT

   33 cast_expression: unary_expression
   34                | '(' type_name ')' cast_expression

   35 multiplicative_expression: cast_expression
   36                          | multiplicative_expression MULT cast_expression
   37                          | multiplicative_expression DIVIDE cast_expression
   38                          | multiplicative_expression MODULO cast_expression

   39 additive_expression: multiplicative_expression
   40                    | additive_expression PLUS multiplicative_expression
   41                    | additive_expression MINUS multiplicative_expression

   42 shift_expression: additive_expression
   43                 | shift_expression LSHIFT additive_expression
   44                 | shift_expression RSHIFT additive_expression

   45 relational_expression: shift_expression
   46                      | relational_expression LT shift_expression
   47                      | relational_expression GT shift_expression
   48                      | relational_expression LEQ shift_expression
   49                      | relational_expression GEQ shift_expression

   50 equality_expression: relational_expression
   51                    | equality_expression EQ relational_expression
   52                    | equality_expression NEQ relational_expression

   53 and_expression: equality_expression
   54               | and_expression BITWISE_AND equality_expression

   55 exclusive_or_expression: and_expression
   56                        | exclusive_or_expression XOR and_expression

   57 inclusive_or_expression: exclusive_or_expression
   58                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   59 logical_and_expression: inclusive_or_expression
   60                       | logical_and_expression LOGICAL_AND M inclusive_or_expression

   61 logical_or_expression: logical_and_expression
   62                      | logical_or_expression LOGICAL_OR M logical_and_expression

   63 conditional_expression: logical_or_expression
   64                       | logical_or_expression '?' expression ':' conditional_expression

   65 assignment_expression: conditional_expression
   66                      | unary_expression assignment_operator assignment_expression

   67 assignment_operator: ASGN
   68                    | MULT_ASGN
   69                    | DIV_ASGN
   70                    | MOD_ASGN
   71                    | ADD_ASGN
   72                    | SUB_ASGN
   73                    | LSHIFT_ASGN
   74                    | RSHIFT_ASGN
   75                    | AND_ASGN
   76                    | XOR_ASGN
   77                    | OR_ASGN

   78 expression: assignment_expression
   79           | expression ',' assignment_expression

   80 constant_expression: conditional_expression

   81 declaration: declaration_specifiers init_declarator_list_opt ';'

   82 init_declarator_list_opt: init_declarator_list
   83                         | %empty

   84 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   85                       | type_specifier declaration_specifiers_opt
   86                       | type_qualifier declaration_specifiers_opt
   87                       | function_specifier declaration_specifiers_opt

   88 declaration_specifiers_opt: declaration_specifiers
   89                           | %empty

   90 init_declarator_list: init_declarator
   91                     | init_declarator_list ',' init_declarator

   92 init_declarator: declarator
   93                | declarator ASGN initializer

   94 storage_class_specifier: EXTERN
   95                        | STATIC
   96                        | AUTO
   97                        | REGISTER

   98 type_specifier: VOID
   99               | CHAR
  100               | SHORT
  101               | INT
  102               | LONG
  103               | FLOAT
  104               | DOUBLE
  105               | SIGNED
  106               | UNSIGNED
  107               | _BOOL
  108               | _COMPLEX
  109               | _IMAGINARY
  110               | enum_specifier
  111               | struct_or_union_specifier

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  113                         | type_qualifier specifier_qualifier_list_opt

  114 specifier_qualifier_list_opt: specifier_qualifier_list
  115                             | %empty

  116 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'
  117                          | struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  118                          | struct_or_union IDENTIFIER

  119 struct_or_union: STRUCT
  120                | UNION

  121 struct_declaration_list: struct_declaration
  122                        | struct_declaration_list struct_declaration

  123 struct_declaration: specifier_qualifier_list ';'
  124                   | specifier_qualifier_list struct_declarator_list ';'

  125 struct_declarator_list: struct_declarator
  126                       | struct_declarator_list ',' struct_declarator

  127 struct_declarator: ':' constant_expression
  128                  | declarator ':' constant_expression
  129                  | declarator

  130 enum_specifier: ENUM identifier_opt '{' enumerator_list '}'
  131               | ENUM identifier_opt '{' enumerator_list ',' '}'
  132               | ENUM IDENTIFIER

  133 identifier_opt: IDENTIFIER
  134               | %empty

  135 enumerator_list: enumerator
  136                | enumerator_list ',' enumerator

  137 enumerator: IDENTIFIER
  138           | IDENTIFIER ASGN constant_expression

  139 type_qualifier: CONST
  140               | RESTRICT
  141               | VOLATILE

  142 function_specifier: INLINE

  143 declarator: pointer direct_declarator
  144           | direct_declarator

  145 direct_declarator: IDENTIFIER
  146                  | '(' declarator ')'
  147                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  148                  | direct_declarator '[' type_qualifier_list ']'
  149                  | direct_declarator '[' assignment_expression ']'
  150                  | direct_declarator '[' ']'
  151                  | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'
  152                  | direct_declarator '[' STATIC assignment_expression ']'
  153                  | direct_declarator '[' type_qualifier_list MULT ']'
  154                  | direct_declarator '[' MULT ']'
  155                  | direct_declarator '(' changetable parameter_type_list ')'
  156                  | direct_declarator '(' identifier_list ')'
  157                  | direct_declarator '(' changetable ')'

  158 type_qualifier_list_opt: type_qualifier_list
  159                        | %empty

  160 pointer: MULT type_qualifier_list_opt
  161        | MULT type_qualifier_list_opt pointer

  162 type_qualifier_list: type_qualifier
  163                    | type_qualifier_list type_qualifier

  164 parameter_type_list: parameter_list
  165                    | parameter_list ',' ELLIPSIS

  166 parameter_list: parameter_declaration
  167               | parameter_list ',' parameter_declaration

  168 parameter_declaration: declaration_specifiers declarator
  169                      | declaration_specifiers

  170 identifier_list: IDENTIFIER
  171                | identifier_list ',' IDENTIFIER

  172 type_name: specifier_qualifier_list

  173 initializer: assignment_expression
  174            | '{' initializer_list '}'
  175            | '{' initializer_list ',' '}'

  176 initializer_list: designation_opt initializer
  177                 | initializer_list ',' designation_opt initializer

  178 designation_opt: designation
  179                | %empty

  180 designation: designator_list ASGN

  181 designator_list: designator
  182                | designator_list designator

  183 designator: '[' constant_expression ']'
  184           | '.' IDENTIFIER

  185 statement: labeled_statement
  186          | compound_statement
  187          | expression_statement
  188          | selection_statement
  189          | iteration_statement
  190          | jump_statement

  191 loop_statement: labeled_statement
  192               | expression_statement
  193               | selection_statement
  194               | iteration_statement
  195               | jump_statement

  196 labeled_statement: IDENTIFIER ':' M statement
  197                  | CASE constant_expression ':' statement
  198                  | DEFAULT ':' statement

  199 compound_statement: '{' X changetable block_item_list_opt '}'

  200 block_item_list: block_item
  201                | block_item_list M block_item

  202 block_item_list_opt: block_item_list
  203                    | %empty

  204 block_item: declaration
  205           | statement

  206 expression_statement: ';'
  207                     | expression ';'

  208 selection_statement: IF '(' expression N ')' M statement N
  209                    | IF '(' expression N ')' M statement N ELSE M statement
  210                    | SWITCH '(' expression ')' statement

  211 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement
  212                    | WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}'
  213                    | DO D M loop_statement M WHILE '(' expression ')' ';'
  214                    | DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';'
  215                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  216                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  218                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

  219 jump_statement: GOTO IDENTIFIER ';'
  220               | CONTINUE ';'
  221               | BREAK ';'
  222               | RETURN expression ';'
  223               | RETURN ';'

  224 translation_unit: external_declaration
  225                 | translation_unit external_declaration

  226 external_declaration: function_definition
  227                     | declaration

  228 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}'

  229 declaration_list_opt: declaration_list
  230                     | %empty

  231 declaration_list: declaration
  232                 | declaration_list declaration

  233 M: %empty

  234 F: %empty

  235 W: %empty

  236 D: %empty

  237 X: %empty

  238 N: %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 7 10 15 16 26 34 146 155 156 157 208 209 210 211 212 213 214 215 216 217 218
    ')' (41) 7 10 15 16 26 34 146 155 156 157 208 209 210 211 212 213 214 215 216 217 218
    ',' (44) 16 18 79 91 126 131 136 165 167 171 175 177
    '.' (46) 11 184
    ':' (58) 64 127 128 196 197 198
    ';' (59) 81 123 124 206 207 213 214 219 220 221 222 223
    '?' (63) 64
    '[' (91) 9 147 148 149 150 151 152 153 154 183
    ']' (93) 9 147 148 149 150 151 152 153 154 183
    '{' (123) 15 16 116 117 130 131 174 175 199 212 214 217 218 228
    '}' (125) 15 16 116 117 130 131 174 175 199 212 214 217 218 228
    error (256)
    BREAK (258) 221
    RETURN (259) 222 223
    CASE (260) 197
    FOR (261) 215 216 217 218
    WHILE (262) 211 212 213 214
    GOTO (263) 219
    SIZEOF (264) 25 26
    CONTINUE (265) 220
    IF (266) 208 209
    DO (267) 213 214
    SWITCH (268) 210
    ELSE (269) 209
    FLOAT (270) 103
    SHORT (271) 100
    CHAR (272) 99
    _BOOL (273) 107
    _IMAGINARY (274) 109
    _COMPLEX (275) 108
    INT (276) 101
    DOUBLE (277) 104
    LONG (278) 102
    VOID (279) 98
    SIGNED (280) 105
    AUTO (281) 96
    UNSIGNED (282) 106
    ENUM (283) 130 131 132
    UNION (284) 120
    STRUCT (285) 119
    TYPEDEF (286)
    CONST (287) 139
    DEFAULT (288) 198
    STATIC (289) 95 151 152
    REGISTER (290) 97
    RESTRICT (291) 140
    VOLATILE (292) 141
    EXTERN (293) 94
    INLINE (294) 142
    IDENTIFIER <symp> (295) 5 11 12 117 118 132 133 137 138 145 170 171 184 196 219
    INTEGER_CONST <int_val> (296) 2
    CHAR_CONST <char_val> (297) 4
    FLOAT_CONST <float_val> (298) 3
    STRING_LITERAL <char_val> (299)
    PLUS (300) 29 40
    MINUS (301) 30 41
    MULT (302) 28 36 153 154 160 161
    DIVIDE (303) 37
    ARROW (304) 12
    INCREMENT (305) 13 22
    DECREMENT (306) 14 23
    RSHIFT (307) 44
    LSHIFT (308) 43
    LT (309) 46
    GT (310) 47
    LEQ (311) 48
    GEQ (312) 49
    EQ (313) 51
    NEQ (314) 52
    BITWISE_OR (315) 58
    LOGICAL_OR (316) 62
    BITWISE_AND (317) 27 54
    LOGICAL_AND (318) 60
    XOR (319) 56
    BITWISE_NOT (320) 31
    LOGICAL_NOT (321) 32
    ELLIPSIS (322) 165
    MODULO (323) 38
    ASGN (324) 67 93 138 180
    ENUMERATION_CONST (325)
    ADD_ASGN (326) 71
    SUB_ASGN (327) 72
    MULT_ASGN (328) 68
    DIV_ASGN (329) 69
    MOD_ASGN (330) 70
    LSHIFT_ASGN (331) 73
    RSHIFT_ASGN (332) 74
    AND_ASGN (333) 75
    OR_ASGN (334) 77
    XOR_ASGN (335) 76
    "then" (336)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    changetable (94)
        on left: 1
        on right: 155 157 199 211 212 215 216 217 218 228
    constant <expr> (95)
        on left: 2 3 4
        on right: 6
    primary_expression <expr> (96)
        on left: 5 6 7
        on right: 8
    postfix_expression <A> (97)
        on left: 8 9 10 11 12 13 14 15 16
        on right: 9 10 11 12 13 14 21
    argument_expression_list <num_params> (98)
        on left: 17 18
        on right: 18 19
    argument_expression_list_opt <num_params> (99)
        on left: 19 20
        on right: 10
    unary_expression <A> (100)
        on left: 21 22 23 24 25 26
        on right: 22 23 25 33 66
    unary_operator <unaryOp> (101)
        on left: 27 28 29 30 31 32
        on right: 24
    cast_expression <A> (102)
        on left: 33 34
        on right: 24 34 35 36 37 38
    multiplicative_expression <expr> (103)
        on left: 35 36 37 38
        on right: 36 37 38 39 40 41
    additive_expression <expr> (104)
        on left: 39 40 41
        on right: 40 41 42 43 44
    shift_expression <expr> (105)
        on left: 42 43 44
        on right: 43 44 45 46 47 48 49
    relational_expression <expr> (106)
        on left: 45 46 47 48 49
        on right: 46 47 48 49 50 51 52
    equality_expression <expr> (107)
        on left: 50 51 52
        on right: 51 52 53 54
    and_expression <expr> (108)
        on left: 53 54
        on right: 54 55 56
    exclusive_or_expression <expr> (109)
        on left: 55 56
        on right: 56 57 58
    inclusive_or_expression <expr> (110)
        on left: 57 58
        on right: 58 59 60
    logical_and_expression <expr> (111)
        on left: 59 60
        on right: 60 61 62
    logical_or_expression <expr> (112)
        on left: 61 62
        on right: 62 63 64
    conditional_expression <expr> (113)
        on left: 63 64
        on right: 64 65 80
    assignment_expression <expr> (114)
        on left: 65 66
        on right: 17 18 66 78 79 147 149 151 152 173
    assignment_operator (115)
        on left: 67 68 69 70 71 72 73 74 75 76 77
        on right: 66
    expression <expr> (116)
        on left: 78 79
        on right: 7 9 64 79 207 208 209 210 211 212 213 214 215 216 217 218 222
    constant_expression (117)
        on left: 80
        on right: 127 128 138 183 197
    declaration (118)
        on left: 81
        on right: 204 215 217 227 231 232
    init_declarator_list_opt (119)
        on left: 82 83
        on right: 81
    declaration_specifiers (120)
        on left: 84 85 86 87
        on right: 81 88 168 169 228
    declaration_specifiers_opt (121)
        on left: 88 89
        on right: 84 85 86 87
    init_declarator_list (122)
        on left: 90 91
        on right: 82 91
    init_declarator <symp> (123)
        on left: 92 93
        on right: 90 91
    storage_class_specifier (124)
        on left: 94 95 96 97
        on right: 84
    type_specifier (125)
        on left: 98 99 100 101 102 103 104 105 106 107 108 109 110 111
        on right: 85 112
    specifier_qualifier_list (126)
        on left: 112 113
        on right: 114 123 124 172
    specifier_qualifier_list_opt (127)
        on left: 114 115
        on right: 112 113
    struct_or_union_specifier (128)
        on left: 116 117 118
        on right: 111
    struct_or_union (129)
        on left: 119 120
        on right: 116 117 118
    struct_declaration_list (130)
        on left: 121 122
        on right: 116 117 122
    struct_declaration (131)
        on left: 123 124
        on right: 121 122
    struct_declarator_list (132)
        on left: 125 126
        on right: 124 126
    struct_declarator (133)
        on left: 127 128 129
        on right: 125 126
    enum_specifier (134)
        on left: 130 131 132
        on right: 110
    identifier_opt (135)
        on left: 133 134
        on right: 130 131
    enumerator_list (136)
        on left: 135 136
        on right: 130 131 136
    enumerator (137)
        on left: 137 138
        on right: 135 136
    type_qualifier (138)
        on left: 139 140 141
        on right: 86 113 162 163
    function_specifier (139)
        on left: 142
        on right: 87
    declarator <symp> (140)
        on left: 143 144
        on right: 92 93 128 129 146 168 228
    direct_declarator <symp> (141)
        on left: 145 146 147 148 149 150 151 152 153 154 155 156 157
        on right: 143 144 147 148 149 150 151 152 153 154 155 156 157
    type_qualifier_list_opt (142)
        on left: 158 159
        on right: 160 161
    pointer <sym_type> (143)
        on left: 160 161
        on right: 143 161
    type_qualifier_list (144)
        on left: 162 163
        on right: 147 148 151 153 158 163
    parameter_type_list (145)
        on left: 164 165
        on right: 155
    parameter_list (146)
        on left: 166 167
        on right: 164 165 167
    parameter_declaration (147)
        on left: 168 169
        on right: 166 167
    identifier_list (148)
        on left: 170 171
        on right: 156 171
    type_name (149)
        on left: 172
        on right: 15 16 26 34
    initializer <symp> (150)
        on left: 173 174 175
        on right: 93 176 177
    initializer_list (151)
        on left: 176 177
        on right: 15 16 174 175 177
    designation_opt (152)
        on left: 178 179
        on right: 176 177
    designation (153)
        on left: 180
        on right: 178
    designator_list (154)
        on left: 181 182
        on right: 180 182
    designator (155)
        on left: 183 184
        on right: 181 182
    statement <stat> (156)
        on left: 185 186 187 188 189 190
        on right: 196 197 198 205 208 209 210
    loop_statement <stat> (157)
        on left: 191 192 193 194 195
        on right: 211 213 215 216
    labeled_statement <stat> (158)
        on left: 196 197 198
        on right: 185 191
    compound_statement <stat> (159)
        on left: 199
        on right: 186
    block_item_list <stat> (160)
        on left: 200 201
        on right: 201 202
    block_item_list_opt <stat> (161)
        on left: 202 203
        on right: 199 212 214 217 218 228
    block_item <stat> (162)
        on left: 204 205
        on right: 200 201
    expression_statement <expr> (163)
        on left: 206 207
        on right: 187 192 215 216 217 218
    selection_statement <stat> (164)
        on left: 208 209 210
        on right: 188 193
    iteration_statement <stat> (165)
        on left: 211 212 213 214 215 216 217 218
        on right: 189 194
    jump_statement <stat> (166)
        on left: 219 220 221 222 223
        on right: 190 195
    translation_unit (167)
        on left: 224 225
        on right: 0 225
    external_declaration (168)
        on left: 226 227
        on right: 224 225
    function_definition (169)
        on left: 228
        on right: 226
    declaration_list_opt (170)
        on left: 229 230
        on right: 228
    declaration_list (171)
        on left: 231 232
        on right: 229 232
    M <instr_number> (172)
        on left: 233
        on right: 60 62 196 201 208 209 211 212 213 214 215 216 217 218
    F (173)
        on left: 234
        on right: 215 216 217 218
    W (174)
        on left: 235
        on right: 211 212
    D (175)
        on left: 236
        on right: 213 214
    X (176)
        on left: 237
        on right: 199 211 212 215 216 217 218
    N <stat> (177)
        on left: 238
        on right: 208 209 215 216 217 218


State 0

    0 $accept: . translation_unit $end

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    translation_unit           go to state 33
    external_declaration       go to state 34
    function_definition        go to state 35


State 1

  103 type_specifier: FLOAT .

    $default  reduce using rule 103 (type_specifier)


State 2

  100 type_specifier: SHORT .

    $default  reduce using rule 100 (type_specifier)


State 3

   99 type_specifier: CHAR .

    $default  reduce using rule 99 (type_specifier)


State 4

  107 type_specifier: _BOOL .

    $default  reduce using rule 107 (type_specifier)


State 5

  109 type_specifier: _IMAGINARY .

    $default  reduce using rule 109 (type_specifier)


State 6

  108 type_specifier: _COMPLEX .

    $default  reduce using rule 108 (type_specifier)


State 7

  101 type_specifier: INT .

    $default  reduce using rule 101 (type_specifier)


State 8

  104 type_specifier: DOUBLE .

    $default  reduce using rule 104 (type_specifier)


State 9

  102 type_specifier: LONG .

    $default  reduce using rule 102 (type_specifier)


State 10

   98 type_specifier: VOID .

    $default  reduce using rule 98 (type_specifier)


State 11

  105 type_specifier: SIGNED .

    $default  reduce using rule 105 (type_specifier)


State 12

   96 storage_class_specifier: AUTO .

    $default  reduce using rule 96 (storage_class_specifier)


State 13

  106 type_specifier: UNSIGNED .

    $default  reduce using rule 106 (type_specifier)


State 14

  130 enum_specifier: ENUM . identifier_opt '{' enumerator_list '}'
  131               | ENUM . identifier_opt '{' enumerator_list ',' '}'
  132               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 134 (identifier_opt)

    identifier_opt  go to state 37


State 15

  120 struct_or_union: UNION .

    $default  reduce using rule 120 (struct_or_union)


State 16

  119 struct_or_union: STRUCT .

    $default  reduce using rule 119 (struct_or_union)


State 17

  139 type_qualifier: CONST .

    $default  reduce using rule 139 (type_qualifier)


State 18

   95 storage_class_specifier: STATIC .

    $default  reduce using rule 95 (storage_class_specifier)


State 19

   97 storage_class_specifier: REGISTER .

    $default  reduce using rule 97 (storage_class_specifier)


State 20

  140 type_qualifier: RESTRICT .

    $default  reduce using rule 140 (type_qualifier)


State 21

  141 type_qualifier: VOLATILE .

    $default  reduce using rule 141 (type_qualifier)


State 22

   94 storage_class_specifier: EXTERN .

    $default  reduce using rule 94 (storage_class_specifier)


State 23

  142 function_specifier: INLINE .

    $default  reduce using rule 142 (function_specifier)


State 24

  227 external_declaration: declaration .

    $default  reduce using rule 227 (external_declaration)


State 25

   81 declaration: declaration_specifiers . init_declarator_list_opt ';'
  228 function_definition: declaration_specifiers . declarator declaration_list_opt changetable '{' block_item_list_opt '}'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 83 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 44
    direct_declarator         go to state 45
    pointer                   go to state 46


State 26

   84 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 89 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 48
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 27

   85 declaration_specifiers: type_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 89 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 49
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 28

  111 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 111 (type_specifier)


State 29

  116 struct_or_union_specifier: struct_or_union . '{' struct_declaration_list '}'
  117                          | struct_or_union . IDENTIFIER '{' struct_declaration_list '}'
  118                          | struct_or_union . IDENTIFIER

    IDENTIFIER  shift, and go to state 50
    '{'         shift, and go to state 51


State 30

  110 type_specifier: enum_specifier .

    $default  reduce using rule 110 (type_specifier)


State 31

   86 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 89 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 52
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 32

   87 declaration_specifiers: function_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 89 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 53
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 33

    0 $accept: translation_unit . $end
  225 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 54
    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    external_declaration       go to state 55
    function_definition        go to state 35


State 34

  224 translation_unit: external_declaration .

    $default  reduce using rule 224 (translation_unit)


State 35

  226 external_declaration: function_definition .

    $default  reduce using rule 226 (external_declaration)


State 36

  132 enum_specifier: ENUM IDENTIFIER .
  133 identifier_opt: IDENTIFIER .

    '{'       reduce using rule 133 (identifier_opt)
    $default  reduce using rule 132 (enum_specifier)


State 37

  130 enum_specifier: ENUM identifier_opt . '{' enumerator_list '}'
  131               | ENUM identifier_opt . '{' enumerator_list ',' '}'

    '{'  shift, and go to state 56


State 38

  145 direct_declarator: IDENTIFIER .

    $default  reduce using rule 145 (direct_declarator)


State 39

  160 pointer: MULT . type_qualifier_list_opt
  161        | MULT . type_qualifier_list_opt pointer

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 159 (type_qualifier_list_opt)

    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 58
    type_qualifier_list      go to state 59


State 40

  146 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    declarator         go to state 60
    direct_declarator  go to state 45
    pointer            go to state 46


State 41

   81 declaration: declaration_specifiers init_declarator_list_opt . ';'

    ';'  shift, and go to state 61


State 42

   82 init_declarator_list_opt: init_declarator_list .
   91 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 62

    $default  reduce using rule 82 (init_declarator_list_opt)


State 43

   90 init_declarator_list: init_declarator .

    $default  reduce using rule 90 (init_declarator_list)


State 44

   92 init_declarator: declarator .
   93                | declarator . ASGN initializer
  228 function_definition: declaration_specifiers declarator . declaration_list_opt changetable '{' block_item_list_opt '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ASGN        shift, and go to state 63

    '{'       reduce using rule 230 (declaration_list_opt)
    $default  reduce using rule 92 (init_declarator)

    declaration                go to state 64
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    declaration_list_opt       go to state 66
    declaration_list           go to state 67


State 45

  144 declarator: direct_declarator .
  147 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  148                  | direct_declarator . '[' type_qualifier_list ']'
  149                  | direct_declarator . '[' assignment_expression ']'
  150                  | direct_declarator . '[' ']'
  151                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  152                  | direct_declarator . '[' STATIC assignment_expression ']'
  153                  | direct_declarator . '[' type_qualifier_list MULT ']'
  154                  | direct_declarator . '[' MULT ']'
  155                  | direct_declarator . '(' changetable parameter_type_list ')'
  156                  | direct_declarator . '(' identifier_list ')'
  157                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 68
    '['  shift, and go to state 69

    $default  reduce using rule 144 (declarator)


State 46

  143 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 38
    '('         shift, and go to state 40

    direct_declarator  go to state 70


State 47

   88 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 88 (declaration_specifiers_opt)


State 48

   84 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 84 (declaration_specifiers)


State 49

   85 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 85 (declaration_specifiers)


State 50

  117 struct_or_union_specifier: struct_or_union IDENTIFIER . '{' struct_declaration_list '}'
  118                          | struct_or_union IDENTIFIER .

    '{'  shift, and go to state 71

    $default  reduce using rule 118 (struct_or_union_specifier)


State 51

  116 struct_or_union_specifier: struct_or_union '{' . struct_declaration_list '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 74
    struct_declaration         go to state 75
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 52

   86 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


State 53

   87 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 87 (declaration_specifiers)


State 54

    0 $accept: translation_unit $end .

    $default  accept


State 55

  225 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 225 (translation_unit)


State 56

  130 enum_specifier: ENUM identifier_opt '{' . enumerator_list '}'
  131               | ENUM identifier_opt '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 77

    enumerator_list  go to state 78
    enumerator       go to state 79


State 57

  162 type_qualifier_list: type_qualifier .

    $default  reduce using rule 162 (type_qualifier_list)


State 58

  160 pointer: MULT type_qualifier_list_opt .
  161        | MULT type_qualifier_list_opt . pointer

    MULT  shift, and go to state 39

    $default  reduce using rule 160 (pointer)

    pointer  go to state 80


State 59

  158 type_qualifier_list_opt: type_qualifier_list .
  163 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 158 (type_qualifier_list_opt)

    type_qualifier  go to state 81


State 60

  146 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 82


State 61

   81 declaration: declaration_specifiers init_declarator_list_opt ';' .

    $default  reduce using rule 81 (declaration)


State 62

   91 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    init_declarator    go to state 83
    declarator         go to state 84
    direct_declarator  go to state 45
    pointer            go to state 46


State 63

   93 init_declarator: declarator ASGN . initializer

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 99

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    initializer                go to state 118


State 64

  231 declaration_list: declaration .

    $default  reduce using rule 231 (declaration_list)


State 65

   81 declaration: declaration_specifiers . init_declarator_list_opt ';'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 83 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 84
    direct_declarator         go to state 45
    pointer                   go to state 46


State 66

  228 function_definition: declaration_specifiers declarator declaration_list_opt . changetable '{' block_item_list_opt '}'

    $default  reduce using rule 1 (changetable)

    changetable  go to state 119


State 67

  229 declaration_list_opt: declaration_list .
  232 declaration_list: declaration_list . declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 229 (declaration_list_opt)

    declaration                go to state 120
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32


State 68

  155 direct_declarator: direct_declarator '(' . changetable parameter_type_list ')'
  156                  | direct_declarator '(' . identifier_list ')'
  157                  | direct_declarator '(' . changetable ')'

    IDENTIFIER  shift, and go to state 121

    $default  reduce using rule 1 (changetable)

    changetable      go to state 122
    identifier_list  go to state 123


State 69

  147 direct_declarator: direct_declarator '[' . type_qualifier_list assignment_expression ']'
  148                  | direct_declarator '[' . type_qualifier_list ']'
  149                  | direct_declarator '[' . assignment_expression ']'
  150                  | direct_declarator '[' . ']'
  151                  | direct_declarator '[' . STATIC type_qualifier_list assignment_expression ']'
  152                  | direct_declarator '[' . STATIC assignment_expression ']'
  153                  | direct_declarator '[' . type_qualifier_list MULT ']'
  154                  | direct_declarator '[' . MULT ']'

    SIZEOF         shift, and go to state 85
    CONST          shift, and go to state 17
    STATIC         shift, and go to state 124
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 125
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ']'            shift, and go to state 126

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 127
    type_qualifier             go to state 57
    type_qualifier_list        go to state 128


State 70

  143 declarator: pointer direct_declarator .
  147 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  148                  | direct_declarator . '[' type_qualifier_list ']'
  149                  | direct_declarator . '[' assignment_expression ']'
  150                  | direct_declarator . '[' ']'
  151                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  152                  | direct_declarator . '[' STATIC assignment_expression ']'
  153                  | direct_declarator . '[' type_qualifier_list MULT ']'
  154                  | direct_declarator . '[' MULT ']'
  155                  | direct_declarator . '(' changetable parameter_type_list ')'
  156                  | direct_declarator . '(' identifier_list ')'
  157                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 68
    '['  shift, and go to state 69

    $default  reduce using rule 143 (declarator)


State 71

  117 struct_or_union_specifier: struct_or_union IDENTIFIER '{' . struct_declaration_list '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 129
    struct_declaration         go to state 75
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 72

  112 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    $default  reduce using rule 115 (specifier_qualifier_list_opt)

    type_specifier                go to state 72
    specifier_qualifier_list      go to state 130
    specifier_qualifier_list_opt  go to state 131
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 76


State 73

  123 struct_declaration: specifier_qualifier_list . ';'
  124                   | specifier_qualifier_list . struct_declarator_list ';'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40
    ':'         shift, and go to state 132
    ';'         shift, and go to state 133

    struct_declarator_list  go to state 134
    struct_declarator       go to state 135
    declarator              go to state 136
    direct_declarator       go to state 45
    pointer                 go to state 46


State 74

  116 struct_or_union_specifier: struct_or_union '{' struct_declaration_list . '}'
  122 struct_declaration_list: struct_declaration_list . struct_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    '}'         shift, and go to state 137

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 138
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 75

  121 struct_declaration_list: struct_declaration .

    $default  reduce using rule 121 (struct_declaration_list)


State 76

  113 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    $default  reduce using rule 115 (specifier_qualifier_list_opt)

    type_specifier                go to state 72
    specifier_qualifier_list      go to state 130
    specifier_qualifier_list_opt  go to state 139
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 76


State 77

  137 enumerator: IDENTIFIER .
  138           | IDENTIFIER . ASGN constant_expression

    ASGN  shift, and go to state 140

    $default  reduce using rule 137 (enumerator)


State 78

  130 enum_specifier: ENUM identifier_opt '{' enumerator_list . '}'
  131               | ENUM identifier_opt '{' enumerator_list . ',' '}'
  136 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 141
    ','  shift, and go to state 142


State 79

  135 enumerator_list: enumerator .

    $default  reduce using rule 135 (enumerator_list)


State 80

  161 pointer: MULT type_qualifier_list_opt pointer .

    $default  reduce using rule 161 (pointer)


State 81

  163 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 163 (type_qualifier_list)


State 82

  146 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 146 (direct_declarator)


State 83

   91 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 84

   92 init_declarator: declarator .
   93                | declarator . ASGN initializer

    ASGN  shift, and go to state 63

    $default  reduce using rule 92 (init_declarator)


State 85

   25 unary_expression: SIZEOF . unary_expression
   26                 | SIZEOF . '(' type_name ')'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 143

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 144
    unary_operator      go to state 104


State 86

    5 primary_expression: IDENTIFIER .

    $default  reduce using rule 5 (primary_expression)


State 87

    2 constant: INTEGER_CONST .

    $default  reduce using rule 2 (constant)


State 88

    4 constant: CHAR_CONST .

    $default  reduce using rule 4 (constant)


State 89

    3 constant: FLOAT_CONST .

    $default  reduce using rule 3 (constant)


State 90

   29 unary_operator: PLUS .

    $default  reduce using rule 29 (unary_operator)


State 91

   30 unary_operator: MINUS .

    $default  reduce using rule 30 (unary_operator)


State 92

   28 unary_operator: MULT .

    $default  reduce using rule 28 (unary_operator)


State 93

   22 unary_expression: INCREMENT . unary_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 145

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 146
    unary_operator      go to state 104


State 94

   23 unary_expression: DECREMENT . unary_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 145

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 147
    unary_operator      go to state 104


State 95

   27 unary_operator: BITWISE_AND .

    $default  reduce using rule 27 (unary_operator)


State 96

   31 unary_operator: BITWISE_NOT .

    $default  reduce using rule 31 (unary_operator)


State 97

   32 unary_operator: LOGICAL_NOT .

    $default  reduce using rule 32 (unary_operator)


State 98

    7 primary_expression: '(' . expression ')'
   15 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   16                   | '(' . type_name ')' '{' initializer_list ',' '}'
   34 cast_expression: '(' . type_name ')' cast_expression

    SIZEOF         shift, and go to state 85
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 149
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 150
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 151


State 99

  174 initializer: '{' . initializer_list '}'
  175            | '{' . initializer_list ',' '}'

    '['  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 179 (designation_opt)

    initializer_list  go to state 154
    designation_opt   go to state 155
    designation       go to state 156
    designator_list   go to state 157
    designator        go to state 158


State 100

    6 primary_expression: constant .

    $default  reduce using rule 6 (primary_expression)


State 101

    8 postfix_expression: primary_expression .

    $default  reduce using rule 8 (postfix_expression)


State 102

    9 postfix_expression: postfix_expression . '[' expression ']'
   10                   | postfix_expression . '(' argument_expression_list_opt ')'
   11                   | postfix_expression . '.' IDENTIFIER
   12                   | postfix_expression . ARROW IDENTIFIER
   13                   | postfix_expression . INCREMENT
   14                   | postfix_expression . DECREMENT
   21 unary_expression: postfix_expression .

    ARROW      shift, and go to state 159
    INCREMENT  shift, and go to state 160
    DECREMENT  shift, and go to state 161
    '('        shift, and go to state 162
    '['        shift, and go to state 163
    '.'        shift, and go to state 164

    $default  reduce using rule 21 (unary_expression)


State 103

   33 cast_expression: unary_expression .
   66 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASGN         shift, and go to state 165
    ADD_ASGN     shift, and go to state 166
    SUB_ASGN     shift, and go to state 167
    MULT_ASGN    shift, and go to state 168
    DIV_ASGN     shift, and go to state 169
    MOD_ASGN     shift, and go to state 170
    LSHIFT_ASGN  shift, and go to state 171
    RSHIFT_ASGN  shift, and go to state 172
    AND_ASGN     shift, and go to state 173
    OR_ASGN      shift, and go to state 174
    XOR_ASGN     shift, and go to state 175

    $default  reduce using rule 33 (cast_expression)

    assignment_operator  go to state 176


State 104

   24 unary_expression: unary_operator . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 178


State 105

   35 multiplicative_expression: cast_expression .

    $default  reduce using rule 35 (multiplicative_expression)


State 106

   36 multiplicative_expression: multiplicative_expression . MULT cast_expression
   37                          | multiplicative_expression . DIVIDE cast_expression
   38                          | multiplicative_expression . MODULO cast_expression
   39 additive_expression: multiplicative_expression .

    MULT    shift, and go to state 179
    DIVIDE  shift, and go to state 180
    MODULO  shift, and go to state 181

    $default  reduce using rule 39 (additive_expression)


State 107

   40 additive_expression: additive_expression . PLUS multiplicative_expression
   41                    | additive_expression . MINUS multiplicative_expression
   42 shift_expression: additive_expression .

    PLUS   shift, and go to state 182
    MINUS  shift, and go to state 183

    $default  reduce using rule 42 (shift_expression)


State 108

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   45 relational_expression: shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 45 (relational_expression)


State 109

   46 relational_expression: relational_expression . LT shift_expression
   47                      | relational_expression . GT shift_expression
   48                      | relational_expression . LEQ shift_expression
   49                      | relational_expression . GEQ shift_expression
   50 equality_expression: relational_expression .

    LT   shift, and go to state 186
    GT   shift, and go to state 187
    LEQ  shift, and go to state 188
    GEQ  shift, and go to state 189

    $default  reduce using rule 50 (equality_expression)


State 110

   51 equality_expression: equality_expression . EQ relational_expression
   52                    | equality_expression . NEQ relational_expression
   53 and_expression: equality_expression .

    EQ   shift, and go to state 190
    NEQ  shift, and go to state 191

    $default  reduce using rule 53 (and_expression)


State 111

   54 and_expression: and_expression . BITWISE_AND equality_expression
   55 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 192

    $default  reduce using rule 55 (exclusive_or_expression)


State 112

   56 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   57 inclusive_or_expression: exclusive_or_expression .

    XOR  shift, and go to state 193

    $default  reduce using rule 57 (inclusive_or_expression)


State 113

   58 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   59 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 194

    $default  reduce using rule 59 (logical_and_expression)


State 114

   60 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   61 logical_or_expression: logical_and_expression .

    LOGICAL_AND  shift, and go to state 195

    $default  reduce using rule 61 (logical_or_expression)


State 115

   62 logical_or_expression: logical_or_expression . LOGICAL_OR M logical_and_expression
   63 conditional_expression: logical_or_expression .
   64                       | logical_or_expression . '?' expression ':' conditional_expression

    LOGICAL_OR  shift, and go to state 196
    '?'         shift, and go to state 197

    $default  reduce using rule 63 (conditional_expression)


State 116

   65 assignment_expression: conditional_expression .

    $default  reduce using rule 65 (assignment_expression)


State 117

  173 initializer: assignment_expression .

    $default  reduce using rule 173 (initializer)


State 118

   93 init_declarator: declarator ASGN initializer .

    $default  reduce using rule 93 (init_declarator)


State 119

  228 function_definition: declaration_specifiers declarator declaration_list_opt changetable . '{' block_item_list_opt '}'

    '{'  shift, and go to state 198


State 120

  232 declaration_list: declaration_list declaration .

    $default  reduce using rule 232 (declaration_list)


State 121

  170 identifier_list: IDENTIFIER .

    $default  reduce using rule 170 (identifier_list)


State 122

  155 direct_declarator: direct_declarator '(' changetable . parameter_type_list ')'
  157                  | direct_declarator '(' changetable . ')'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ')'         shift, and go to state 199

    declaration_specifiers     go to state 200
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_type_list        go to state 201
    parameter_list             go to state 202
    parameter_declaration      go to state 203


State 123

  156 direct_declarator: direct_declarator '(' identifier_list . ')'
  171 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 204
    ','  shift, and go to state 205


State 124

  151 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list assignment_expression ']'
  152                  | direct_declarator '[' STATIC . assignment_expression ']'

    SIZEOF         shift, and go to state 85
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 206
    type_qualifier             go to state 57
    type_qualifier_list        go to state 207


State 125

   28 unary_operator: MULT .
  154 direct_declarator: direct_declarator '[' MULT . ']'

    ']'  shift, and go to state 208

    $default  reduce using rule 28 (unary_operator)


State 126

  150 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 150 (direct_declarator)


State 127

  149 direct_declarator: direct_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 209


State 128

  147 direct_declarator: direct_declarator '[' type_qualifier_list . assignment_expression ']'
  148                  | direct_declarator '[' type_qualifier_list . ']'
  153                  | direct_declarator '[' type_qualifier_list . MULT ']'
  163 type_qualifier_list: type_qualifier_list . type_qualifier

    SIZEOF         shift, and go to state 85
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 210
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ']'            shift, and go to state 211

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 212
    type_qualifier             go to state 81


State 129

  117 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list . '}'
  122 struct_declaration_list: struct_declaration_list . struct_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    '}'         shift, and go to state 213

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 138
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 130

  114 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 114 (specifier_qualifier_list_opt)


State 131

  112 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 112 (specifier_qualifier_list)


State 132

  127 struct_declarator: ':' . constant_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 215


State 133

  123 struct_declaration: specifier_qualifier_list ';' .

    $default  reduce using rule 123 (struct_declaration)


State 134

  124 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
  126 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 216
    ';'  shift, and go to state 217


State 135

  125 struct_declarator_list: struct_declarator .

    $default  reduce using rule 125 (struct_declarator_list)


State 136

  128 struct_declarator: declarator . ':' constant_expression
  129                  | declarator .

    ':'  shift, and go to state 218

    $default  reduce using rule 129 (struct_declarator)


State 137

  116 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' .

    $default  reduce using rule 116 (struct_or_union_specifier)


State 138

  122 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 122 (struct_declaration_list)


State 139

  113 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 113 (specifier_qualifier_list)


State 140

  138 enumerator: IDENTIFIER ASGN . constant_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 219


State 141

  130 enum_specifier: ENUM identifier_opt '{' enumerator_list '}' .

    $default  reduce using rule 130 (enum_specifier)


State 142

  131 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' . '}'
  136 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 77
    '}'         shift, and go to state 220

    enumerator  go to state 221


State 143

    7 primary_expression: '(' . expression ')'
   15 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   16                   | '(' . type_name ')' '{' initializer_list ',' '}'
   26 unary_expression: SIZEOF '(' . type_name ')'

    SIZEOF         shift, and go to state 85
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 149
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 150
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 222


State 144

   25 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 25 (unary_expression)


State 145

    7 primary_expression: '(' . expression ')'
   15 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   16                   | '(' . type_name ')' '{' initializer_list ',' '}'

    SIZEOF         shift, and go to state 85
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 149
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 150
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 223


State 146

   22 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 22 (unary_expression)


State 147

   23 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 148

   78 expression: assignment_expression .

    $default  reduce using rule 78 (expression)


State 149

    7 primary_expression: '(' expression . ')'
   79 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 224
    ','  shift, and go to state 225


State 150

  172 type_name: specifier_qualifier_list .

    $default  reduce using rule 172 (type_name)


State 151

   15 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   16                   | '(' type_name . ')' '{' initializer_list ',' '}'
   34 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 226


State 152

  183 designator: '[' . constant_expression ']'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 227


State 153

  184 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 228


State 154

  174 initializer: '{' initializer_list . '}'
  175            | '{' initializer_list . ',' '}'
  177 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 229
    ','  shift, and go to state 230


State 155

  176 initializer_list: designation_opt . initializer

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 99

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    initializer                go to state 231


State 156

  178 designation_opt: designation .

    $default  reduce using rule 178 (designation_opt)


State 157

  180 designation: designator_list . ASGN
  182 designator_list: designator_list . designator

    ASGN  shift, and go to state 232
    '['   shift, and go to state 152
    '.'   shift, and go to state 153

    designator  go to state 233


State 158

  181 designator_list: designator .

    $default  reduce using rule 181 (designator_list)


State 159

   12 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 234


State 160

   13 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 13 (postfix_expression)


State 161

   14 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 14 (postfix_expression)


State 162

   10 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    $default  reduce using rule 20 (argument_expression_list_opt)

    constant                      go to state 100
    primary_expression            go to state 101
    postfix_expression            go to state 102
    argument_expression_list      go to state 235
    argument_expression_list_opt  go to state 236
    unary_expression              go to state 103
    unary_operator                go to state 104
    cast_expression               go to state 105
    multiplicative_expression     go to state 106
    additive_expression           go to state 107
    shift_expression              go to state 108
    relational_expression         go to state 109
    equality_expression           go to state 110
    and_expression                go to state 111
    exclusive_or_expression       go to state 112
    inclusive_or_expression       go to state 113
    logical_and_expression        go to state 114
    logical_or_expression         go to state 115
    conditional_expression        go to state 116
    assignment_expression         go to state 237


State 163

    9 postfix_expression: postfix_expression '[' . expression ']'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 238


State 164

   11 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 239


State 165

   67 assignment_operator: ASGN .

    $default  reduce using rule 67 (assignment_operator)


State 166

   71 assignment_operator: ADD_ASGN .

    $default  reduce using rule 71 (assignment_operator)


State 167

   72 assignment_operator: SUB_ASGN .

    $default  reduce using rule 72 (assignment_operator)


State 168

   68 assignment_operator: MULT_ASGN .

    $default  reduce using rule 68 (assignment_operator)


State 169

   69 assignment_operator: DIV_ASGN .

    $default  reduce using rule 69 (assignment_operator)


State 170

   70 assignment_operator: MOD_ASGN .

    $default  reduce using rule 70 (assignment_operator)


State 171

   73 assignment_operator: LSHIFT_ASGN .

    $default  reduce using rule 73 (assignment_operator)


State 172

   74 assignment_operator: RSHIFT_ASGN .

    $default  reduce using rule 74 (assignment_operator)


State 173

   75 assignment_operator: AND_ASGN .

    $default  reduce using rule 75 (assignment_operator)


State 174

   77 assignment_operator: OR_ASGN .

    $default  reduce using rule 77 (assignment_operator)


State 175

   76 assignment_operator: XOR_ASGN .

    $default  reduce using rule 76 (assignment_operator)


State 176

   66 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 240


State 177

   33 cast_expression: unary_expression .

    $default  reduce using rule 33 (cast_expression)


State 178

   24 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 24 (unary_expression)


State 179

   36 multiplicative_expression: multiplicative_expression MULT . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 241


State 180

   37 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 242


State 181

   38 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 243


State 182

   40 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 244


State 183

   41 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 245


State 184

   44 shift_expression: shift_expression RSHIFT . additive_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 246


State 185

   43 shift_expression: shift_expression LSHIFT . additive_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 247


State 186

   46 relational_expression: relational_expression LT . shift_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 248


State 187

   47 relational_expression: relational_expression GT . shift_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 249


State 188

   48 relational_expression: relational_expression LEQ . shift_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 250


State 189

   49 relational_expression: relational_expression GEQ . shift_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 251


State 190

   51 equality_expression: equality_expression EQ . relational_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 252


State 191

   52 equality_expression: equality_expression NEQ . relational_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 253


State 192

   54 and_expression: and_expression BITWISE_AND . equality_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 254


State 193

   56 exclusive_or_expression: exclusive_or_expression XOR . and_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 255


State 194

   58 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 256


State 195

   60 logical_and_expression: logical_and_expression LOGICAL_AND . M inclusive_or_expression

    $default  reduce using rule 233 (M)

    M  go to state 257


State 196

   62 logical_or_expression: logical_or_expression LOGICAL_OR . M logical_and_expression

    $default  reduce using rule 233 (M)

    M  go to state 258


State 197

   64 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 259


State 198

  228 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 203 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 280
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 199

  157 direct_declarator: direct_declarator '(' changetable ')' .

    $default  reduce using rule 157 (direct_declarator)


State 200

  168 parameter_declaration: declaration_specifiers . declarator
  169                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 169 (parameter_declaration)

    declarator         go to state 286
    direct_declarator  go to state 45
    pointer            go to state 46


State 201

  155 direct_declarator: direct_declarator '(' changetable parameter_type_list . ')'

    ')'  shift, and go to state 287


State 202

  164 parameter_type_list: parameter_list .
  165                    | parameter_list . ',' ELLIPSIS
  167 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 288

    $default  reduce using rule 164 (parameter_type_list)


State 203

  166 parameter_list: parameter_declaration .

    $default  reduce using rule 166 (parameter_list)


State 204

  156 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 156 (direct_declarator)


State 205

  171 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 289


State 206

  152 direct_declarator: direct_declarator '[' STATIC assignment_expression . ']'

    ']'  shift, and go to state 290


State 207

  151 direct_declarator: direct_declarator '[' STATIC type_qualifier_list . assignment_expression ']'
  163 type_qualifier_list: type_qualifier_list . type_qualifier

    SIZEOF         shift, and go to state 85
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 291
    type_qualifier             go to state 81


State 208

  154 direct_declarator: direct_declarator '[' MULT ']' .

    $default  reduce using rule 154 (direct_declarator)


State 209

  149 direct_declarator: direct_declarator '[' assignment_expression ']' .

    $default  reduce using rule 149 (direct_declarator)


State 210

   28 unary_operator: MULT .
  153 direct_declarator: direct_declarator '[' type_qualifier_list MULT . ']'

    ']'  shift, and go to state 292

    $default  reduce using rule 28 (unary_operator)


State 211

  148 direct_declarator: direct_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 148 (direct_declarator)


State 212

  147 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 293


State 213

  117 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 117 (struct_or_union_specifier)


State 214

   80 constant_expression: conditional_expression .

    $default  reduce using rule 80 (constant_expression)


State 215

  127 struct_declarator: ':' constant_expression .

    $default  reduce using rule 127 (struct_declarator)


State 216

  126 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40
    ':'         shift, and go to state 132

    struct_declarator  go to state 294
    declarator         go to state 136
    direct_declarator  go to state 45
    pointer            go to state 46


State 217

  124 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 124 (struct_declaration)


State 218

  128 struct_declarator: declarator ':' . constant_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 295


State 219

  138 enumerator: IDENTIFIER ASGN constant_expression .

    $default  reduce using rule 138 (enumerator)


State 220

  131 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' '}' .

    $default  reduce using rule 131 (enum_specifier)


State 221

  136 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 136 (enumerator_list)


State 222

   15 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   16                   | '(' type_name . ')' '{' initializer_list ',' '}'
   26 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 296


State 223

   15 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   16                   | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 297


State 224

    7 primary_expression: '(' expression ')' .

    $default  reduce using rule 7 (primary_expression)


State 225

   79 expression: expression ',' . assignment_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 298


State 226

   15 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   16                   | '(' type_name ')' . '{' initializer_list ',' '}'
   34 cast_expression: '(' type_name ')' . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 299

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 300


State 227

  183 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 301


State 228

  184 designator: '.' IDENTIFIER .

    $default  reduce using rule 184 (designator)


State 229

  174 initializer: '{' initializer_list '}' .

    $default  reduce using rule 174 (initializer)


State 230

  175 initializer: '{' initializer_list ',' . '}'
  177 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 152
    '.'  shift, and go to state 153
    '}'  shift, and go to state 302

    $default  reduce using rule 179 (designation_opt)

    designation_opt  go to state 303
    designation      go to state 156
    designator_list  go to state 157
    designator       go to state 158


State 231

  176 initializer_list: designation_opt initializer .

    $default  reduce using rule 176 (initializer_list)


State 232

  180 designation: designator_list ASGN .

    $default  reduce using rule 180 (designation)


State 233

  182 designator_list: designator_list designator .

    $default  reduce using rule 182 (designator_list)


State 234

   12 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 235

   18 argument_expression_list: argument_expression_list . ',' assignment_expression
   19 argument_expression_list_opt: argument_expression_list .

    ','  shift, and go to state 304

    $default  reduce using rule 19 (argument_expression_list_opt)


State 236

   10 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 305


State 237

   17 argument_expression_list: assignment_expression .

    $default  reduce using rule 17 (argument_expression_list)


State 238

    9 postfix_expression: postfix_expression '[' expression . ']'
   79 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 306
    ','  shift, and go to state 225


State 239

   11 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 11 (postfix_expression)


State 240

   66 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 66 (assignment_expression)


State 241

   36 multiplicative_expression: multiplicative_expression MULT cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 242

   37 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 243

   38 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 244

   36 multiplicative_expression: multiplicative_expression . MULT cast_expression
   37                          | multiplicative_expression . DIVIDE cast_expression
   38                          | multiplicative_expression . MODULO cast_expression
   40 additive_expression: additive_expression PLUS multiplicative_expression .

    MULT    shift, and go to state 179
    DIVIDE  shift, and go to state 180
    MODULO  shift, and go to state 181

    $default  reduce using rule 40 (additive_expression)


State 245

   36 multiplicative_expression: multiplicative_expression . MULT cast_expression
   37                          | multiplicative_expression . DIVIDE cast_expression
   38                          | multiplicative_expression . MODULO cast_expression
   41 additive_expression: additive_expression MINUS multiplicative_expression .

    MULT    shift, and go to state 179
    DIVIDE  shift, and go to state 180
    MODULO  shift, and go to state 181

    $default  reduce using rule 41 (additive_expression)


State 246

   40 additive_expression: additive_expression . PLUS multiplicative_expression
   41                    | additive_expression . MINUS multiplicative_expression
   44 shift_expression: shift_expression RSHIFT additive_expression .

    PLUS   shift, and go to state 182
    MINUS  shift, and go to state 183

    $default  reduce using rule 44 (shift_expression)


State 247

   40 additive_expression: additive_expression . PLUS multiplicative_expression
   41                    | additive_expression . MINUS multiplicative_expression
   43 shift_expression: shift_expression LSHIFT additive_expression .

    PLUS   shift, and go to state 182
    MINUS  shift, and go to state 183

    $default  reduce using rule 43 (shift_expression)


State 248

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   46 relational_expression: relational_expression LT shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 46 (relational_expression)


State 249

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   47 relational_expression: relational_expression GT shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 47 (relational_expression)


State 250

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   48 relational_expression: relational_expression LEQ shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 48 (relational_expression)


State 251

   43 shift_expression: shift_expression . LSHIFT additive_expression
   44                 | shift_expression . RSHIFT additive_expression
   49 relational_expression: relational_expression GEQ shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 49 (relational_expression)


State 252

   46 relational_expression: relational_expression . LT shift_expression
   47                      | relational_expression . GT shift_expression
   48                      | relational_expression . LEQ shift_expression
   49                      | relational_expression . GEQ shift_expression
   51 equality_expression: equality_expression EQ relational_expression .

    LT   shift, and go to state 186
    GT   shift, and go to state 187
    LEQ  shift, and go to state 188
    GEQ  shift, and go to state 189

    $default  reduce using rule 51 (equality_expression)


State 253

   46 relational_expression: relational_expression . LT shift_expression
   47                      | relational_expression . GT shift_expression
   48                      | relational_expression . LEQ shift_expression
   49                      | relational_expression . GEQ shift_expression
   52 equality_expression: equality_expression NEQ relational_expression .

    LT   shift, and go to state 186
    GT   shift, and go to state 187
    LEQ  shift, and go to state 188
    GEQ  shift, and go to state 189

    $default  reduce using rule 52 (equality_expression)


State 254

   51 equality_expression: equality_expression . EQ relational_expression
   52                    | equality_expression . NEQ relational_expression
   54 and_expression: and_expression BITWISE_AND equality_expression .

    EQ   shift, and go to state 190
    NEQ  shift, and go to state 191

    $default  reduce using rule 54 (and_expression)


State 255

   54 and_expression: and_expression . BITWISE_AND equality_expression
   56 exclusive_or_expression: exclusive_or_expression XOR and_expression .

    BITWISE_AND  shift, and go to state 192

    $default  reduce using rule 56 (exclusive_or_expression)


State 256

   56 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   58 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    XOR  shift, and go to state 193

    $default  reduce using rule 58 (inclusive_or_expression)


State 257

   60 logical_and_expression: logical_and_expression LOGICAL_AND M . inclusive_or_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 307


State 258

   62 logical_or_expression: logical_or_expression LOGICAL_OR M . logical_and_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 308


State 259

   64 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
   79 expression: expression . ',' assignment_expression

    ','  shift, and go to state 225
    ':'  shift, and go to state 309


State 260

  221 jump_statement: BREAK . ';'

    ';'  shift, and go to state 310


State 261

  222 jump_statement: RETURN . expression ';'
  223               | RETURN . ';'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 311

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 312


State 262

  197 labeled_statement: CASE . constant_expression ':' statement

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 313


State 263

  215 iteration_statement: FOR . F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  216                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  217                    | FOR . F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  218                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 234 (F)

    F  go to state 314


State 264

  211 iteration_statement: WHILE . W '(' X changetable M expression ')' M loop_statement
  212                    | WHILE . W '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 235 (W)

    W  go to state 315


State 265

  219 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 316


State 266

  220 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 317


State 267

  208 selection_statement: IF . '(' expression N ')' M statement N
  209                    | IF . '(' expression N ')' M statement N ELSE M statement

    '('  shift, and go to state 318


State 268

  213 iteration_statement: DO . D M loop_statement M WHILE '(' expression ')' ';'
  214                    | DO . D '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';'

    $default  reduce using rule 236 (D)

    D  go to state 319


State 269

  210 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 320


State 270

  198 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 321


State 271

    5 primary_expression: IDENTIFIER .
  196 labeled_statement: IDENTIFIER . ':' M statement

    ':'  shift, and go to state 322

    $default  reduce using rule 5 (primary_expression)


State 272

  199 compound_statement: '{' . X changetable block_item_list_opt '}'

    $default  reduce using rule 237 (X)

    X  go to state 323


State 273

  206 expression_statement: ';' .

    $default  reduce using rule 206 (expression_statement)


State 274

   79 expression: expression . ',' assignment_expression
  207 expression_statement: expression . ';'

    ','  shift, and go to state 225
    ';'  shift, and go to state 324


State 275

  204 block_item: declaration .

    $default  reduce using rule 204 (block_item)


State 276

  205 block_item: statement .

    $default  reduce using rule 205 (block_item)


State 277

  185 statement: labeled_statement .

    $default  reduce using rule 185 (statement)


State 278

  186 statement: compound_statement .

    $default  reduce using rule 186 (statement)


State 279

  201 block_item_list: block_item_list . M block_item
  202 block_item_list_opt: block_item_list .

    '}'       reduce using rule 202 (block_item_list_opt)
    $default  reduce using rule 233 (M)

    M  go to state 325


State 280

  228 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt . '}'

    '}'  shift, and go to state 326


State 281

  200 block_item_list: block_item .

    $default  reduce using rule 200 (block_item_list)


State 282

  187 statement: expression_statement .

    $default  reduce using rule 187 (statement)


State 283

  188 statement: selection_statement .

    $default  reduce using rule 188 (statement)


State 284

  189 statement: iteration_statement .

    $default  reduce using rule 189 (statement)


State 285

  190 statement: jump_statement .

    $default  reduce using rule 190 (statement)


State 286

  168 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 168 (parameter_declaration)


State 287

  155 direct_declarator: direct_declarator '(' changetable parameter_type_list ')' .

    $default  reduce using rule 155 (direct_declarator)


State 288

  165 parameter_type_list: parameter_list ',' . ELLIPSIS
  167 parameter_list: parameter_list ',' . parameter_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ELLIPSIS    shift, and go to state 327

    declaration_specifiers     go to state 200
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_declaration      go to state 328


State 289

  171 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 171 (identifier_list)


State 290

  152 direct_declarator: direct_declarator '[' STATIC assignment_expression ']' .

    $default  reduce using rule 152 (direct_declarator)


State 291

  151 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 329


State 292

  153 direct_declarator: direct_declarator '[' type_qualifier_list MULT ']' .

    $default  reduce using rule 153 (direct_declarator)


State 293

  147 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 147 (direct_declarator)


State 294

  126 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 126 (struct_declarator_list)


State 295

  128 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 128 (struct_declarator)


State 296

   15 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   16                   | '(' type_name ')' . '{' initializer_list ',' '}'
   26 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 299

    $default  reduce using rule 26 (unary_expression)


State 297

   15 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   16                   | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 299


State 298

   79 expression: expression ',' assignment_expression .

    $default  reduce using rule 79 (expression)


State 299

   15 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   16                   | '(' type_name ')' '{' . initializer_list ',' '}'

    '['  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 179 (designation_opt)

    initializer_list  go to state 330
    designation_opt   go to state 155
    designation       go to state 156
    designator_list   go to state 157
    designator        go to state 158


State 300

   34 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 34 (cast_expression)


State 301

  183 designator: '[' constant_expression ']' .

    $default  reduce using rule 183 (designator)


State 302

  175 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 175 (initializer)


State 303

  177 initializer_list: initializer_list ',' designation_opt . initializer

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 99

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    initializer                go to state 331


State 304

   18 argument_expression_list: argument_expression_list ',' . assignment_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 332


State 305

   10 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 10 (postfix_expression)


State 306

    9 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 9 (postfix_expression)


State 307

   58 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   60 logical_and_expression: logical_and_expression LOGICAL_AND M inclusive_or_expression .

    BITWISE_OR  shift, and go to state 194

    $default  reduce using rule 60 (logical_and_expression)


State 308

   60 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   62 logical_or_expression: logical_or_expression LOGICAL_OR M logical_and_expression .

    LOGICAL_AND  shift, and go to state 195

    $default  reduce using rule 62 (logical_or_expression)


State 309

   64 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 333


State 310

  221 jump_statement: BREAK ';' .

    $default  reduce using rule 221 (jump_statement)


State 311

  223 jump_statement: RETURN ';' .

    $default  reduce using rule 223 (jump_statement)


State 312

   79 expression: expression . ',' assignment_expression
  222 jump_statement: RETURN expression . ';'

    ','  shift, and go to state 225
    ';'  shift, and go to state 334


State 313

  197 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 335


State 314

  215 iteration_statement: FOR F . '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  216                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  217                    | FOR F . '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  218                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    '('  shift, and go to state 336


State 315

  211 iteration_statement: WHILE W . '(' X changetable M expression ')' M loop_statement
  212                    | WHILE W . '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    '('  shift, and go to state 337


State 316

  219 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 338


State 317

  220 jump_statement: CONTINUE ';' .

    $default  reduce using rule 220 (jump_statement)


State 318

  208 selection_statement: IF '(' . expression N ')' M statement N
  209                    | IF '(' . expression N ')' M statement N ELSE M statement

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 339


State 319

  213 iteration_statement: DO D . M loop_statement M WHILE '(' expression ')' ';'
  214                    | DO D . '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';'

    '{'  shift, and go to state 340

    $default  reduce using rule 233 (M)

    M  go to state 341


State 320

  210 selection_statement: SWITCH '(' . expression ')' statement

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 342


State 321

  198 labeled_statement: DEFAULT ':' . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 343
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 322

  196 labeled_statement: IDENTIFIER ':' . M statement

    $default  reduce using rule 233 (M)

    M  go to state 344


State 323

  199 compound_statement: '{' X . changetable block_item_list_opt '}'

    $default  reduce using rule 1 (changetable)

    changetable  go to state 345


State 324

  207 expression_statement: expression ';' .

    $default  reduce using rule 207 (expression_statement)


State 325

  201 block_item_list: block_item_list M . block_item

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item                 go to state 346
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 326

  228 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}' .

    $default  reduce using rule 228 (function_definition)


State 327

  165 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 165 (parameter_type_list)


State 328

  167 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 167 (parameter_list)


State 329

  151 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 151 (direct_declarator)


State 330

   15 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   16                   | '(' type_name ')' '{' initializer_list . ',' '}'
  177 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 347
    ','  shift, and go to state 348


State 331

  177 initializer_list: initializer_list ',' designation_opt initializer .

    $default  reduce using rule 177 (initializer_list)


State 332

   18 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 333

   64 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 64 (conditional_expression)


State 334

  222 jump_statement: RETURN expression ';' .

    $default  reduce using rule 222 (jump_statement)


State 335

  197 labeled_statement: CASE constant_expression ':' . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 349
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 336

  215 iteration_statement: FOR F '(' . X changetable declaration M expression_statement M expression N ')' M loop_statement
  216                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' . X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  218                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 237 (X)

    X  go to state 350


State 337

  211 iteration_statement: WHILE W '(' . X changetable M expression ')' M loop_statement
  212                    | WHILE W '(' . X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 237 (X)

    X  go to state 351


State 338

  219 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 219 (jump_statement)


State 339

   79 expression: expression . ',' assignment_expression
  208 selection_statement: IF '(' expression . N ')' M statement N
  209                    | IF '(' expression . N ')' M statement N ELSE M statement

    ','  shift, and go to state 225

    $default  reduce using rule 238 (N)

    N  go to state 352


State 340

  214 iteration_statement: DO D '{' . M block_item_list_opt '}' M WHILE '(' expression ')' ';'

    $default  reduce using rule 233 (M)

    M  go to state 353


State 341

  213 iteration_statement: DO D M . loop_statement M WHILE '(' expression ')' ';'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    loop_statement             go to state 354
    labeled_statement          go to state 355
    expression_statement       go to state 356
    selection_statement        go to state 357
    iteration_statement        go to state 358
    jump_statement             go to state 359


State 342

   79 expression: expression . ',' assignment_expression
  210 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 360
    ','  shift, and go to state 225


State 343

  198 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 198 (labeled_statement)


State 344

  196 labeled_statement: IDENTIFIER ':' M . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 361
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 345

  199 compound_statement: '{' X changetable . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 203 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 362
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 346

  201 block_item_list: block_item_list M block_item .

    $default  reduce using rule 201 (block_item_list)


State 347

   15 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 15 (postfix_expression)


State 348

   16 postfix_expression: '(' type_name ')' '{' initializer_list ',' . '}'
  177 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 152
    '.'  shift, and go to state 153
    '}'  shift, and go to state 363

    $default  reduce using rule 179 (designation_opt)

    designation_opt  go to state 303
    designation      go to state 156
    designator_list  go to state 157
    designator       go to state 158


State 349

  197 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 197 (labeled_statement)


State 350

  215 iteration_statement: FOR F '(' X . changetable declaration M expression_statement M expression N ')' M loop_statement
  216                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' X . changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  218                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (changetable)

    changetable  go to state 364


State 351

  211 iteration_statement: WHILE W '(' X . changetable M expression ')' M loop_statement
  212                    | WHILE W '(' X . changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 1 (changetable)

    changetable  go to state 365


State 352

  208 selection_statement: IF '(' expression N . ')' M statement N
  209                    | IF '(' expression N . ')' M statement N ELSE M statement

    ')'  shift, and go to state 366


State 353

  214 iteration_statement: DO D '{' M . block_item_list_opt '}' M WHILE '(' expression ')' ';'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 203 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 367
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 354

  213 iteration_statement: DO D M loop_statement . M WHILE '(' expression ')' ';'

    $default  reduce using rule 233 (M)

    M  go to state 368


State 355

  191 loop_statement: labeled_statement .

    $default  reduce using rule 191 (loop_statement)


State 356

  192 loop_statement: expression_statement .

    $default  reduce using rule 192 (loop_statement)


State 357

  193 loop_statement: selection_statement .

    $default  reduce using rule 193 (loop_statement)


State 358

  194 loop_statement: iteration_statement .

    $default  reduce using rule 194 (loop_statement)


State 359

  195 loop_statement: jump_statement .

    $default  reduce using rule 195 (loop_statement)


State 360

  210 selection_statement: SWITCH '(' expression ')' . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 369
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 361

  196 labeled_statement: IDENTIFIER ':' M statement .

    $default  reduce using rule 196 (labeled_statement)


State 362

  199 compound_statement: '{' X changetable block_item_list_opt . '}'

    '}'  shift, and go to state 370


State 363

   16 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 16 (postfix_expression)


State 364

  215 iteration_statement: FOR F '(' X changetable . declaration M expression_statement M expression N ')' M loop_statement
  216                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' X changetable . declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  218                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 371
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    expression_statement       go to state 372


State 365

  211 iteration_statement: WHILE W '(' X changetable . M expression ')' M loop_statement
  212                    | WHILE W '(' X changetable . M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 233 (M)

    M  go to state 373


State 366

  208 selection_statement: IF '(' expression N ')' . M statement N
  209                    | IF '(' expression N ')' . M statement N ELSE M statement

    $default  reduce using rule 233 (M)

    M  go to state 374


State 367

  214 iteration_statement: DO D '{' M block_item_list_opt . '}' M WHILE '(' expression ')' ';'

    '}'  shift, and go to state 375


State 368

  213 iteration_statement: DO D M loop_statement M . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 376


State 369

  210 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 210 (selection_statement)


State 370

  199 compound_statement: '{' X changetable block_item_list_opt '}' .

    $default  reduce using rule 199 (compound_statement)


State 371

  215 iteration_statement: FOR F '(' X changetable declaration . M expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' X changetable declaration . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 233 (M)

    M  go to state 377


State 372

  216 iteration_statement: FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M loop_statement
  218                    | FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 233 (M)

    M  go to state 378


State 373

  211 iteration_statement: WHILE W '(' X changetable M . expression ')' M loop_statement
  212                    | WHILE W '(' X changetable M . expression ')' '{' M block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 379


State 374

  208 selection_statement: IF '(' expression N ')' M . statement N
  209                    | IF '(' expression N ')' M . statement N ELSE M statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 380
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 375

  214 iteration_statement: DO D '{' M block_item_list_opt '}' . M WHILE '(' expression ')' ';'

    $default  reduce using rule 233 (M)

    M  go to state 381


State 376

  213 iteration_statement: DO D M loop_statement M WHILE . '(' expression ')' ';'

    '('  shift, and go to state 382


State 377

  215 iteration_statement: FOR F '(' X changetable declaration M . expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' X changetable declaration M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    expression_statement       go to state 383


State 378

  216 iteration_statement: FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M loop_statement
  218                    | FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    expression_statement       go to state 384


State 379

   79 expression: expression . ',' assignment_expression
  211 iteration_statement: WHILE W '(' X changetable M expression . ')' M loop_statement
  212                    | WHILE W '(' X changetable M expression . ')' '{' M block_item_list_opt '}'

    ')'  shift, and go to state 385
    ','  shift, and go to state 225


State 380

  208 selection_statement: IF '(' expression N ')' M statement . N
  209                    | IF '(' expression N ')' M statement . N ELSE M statement

    $default  reduce using rule 238 (N)

    N  go to state 386


State 381

  214 iteration_statement: DO D '{' M block_item_list_opt '}' M . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 387


State 382

  213 iteration_statement: DO D M loop_statement M WHILE '(' . expression ')' ';'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 388


State 383

  215 iteration_statement: FOR F '(' X changetable declaration M expression_statement . M expression N ')' M loop_statement
  217                    | FOR F '(' X changetable declaration M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 233 (M)

    M  go to state 389


State 384

  216 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M loop_statement
  218                    | FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 233 (M)

    M  go to state 390


State 385

  211 iteration_statement: WHILE W '(' X changetable M expression ')' . M loop_statement
  212                    | WHILE W '(' X changetable M expression ')' . '{' M block_item_list_opt '}'

    '{'  shift, and go to state 391

    $default  reduce using rule 233 (M)

    M  go to state 392


State 386

  208 selection_statement: IF '(' expression N ')' M statement N .
  209                    | IF '(' expression N ')' M statement N . ELSE M statement

    ELSE  shift, and go to state 393

    $default  reduce using rule 208 (selection_statement)


State 387

  214 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE . '(' expression ')' ';'

    '('  shift, and go to state 394


State 388

   79 expression: expression . ',' assignment_expression
  213 iteration_statement: DO D M loop_statement M WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 395
    ','  shift, and go to state 225


State 389

  215 iteration_statement: FOR F '(' X changetable declaration M expression_statement M . expression N ')' M loop_statement
  217                    | FOR F '(' X changetable declaration M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 396


State 390

  216 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M loop_statement
  218                    | FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 397


State 391

  212 iteration_statement: WHILE W '(' X changetable M expression ')' '{' . M block_item_list_opt '}'

    $default  reduce using rule 233 (M)

    M  go to state 398


State 392

  211 iteration_statement: WHILE W '(' X changetable M expression ')' M . loop_statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    loop_statement             go to state 399
    labeled_statement          go to state 355
    expression_statement       go to state 356
    selection_statement        go to state 357
    iteration_statement        go to state 358
    jump_statement             go to state 359


State 393

  209 selection_statement: IF '(' expression N ')' M statement N ELSE . M statement

    $default  reduce using rule 233 (M)

    M  go to state 400


State 394

  214 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' . expression ')' ';'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 401


State 395

  213 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 402


State 396

   79 expression: expression . ',' assignment_expression
  215 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression . N ')' M loop_statement
  217                    | FOR F '(' X changetable declaration M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    ','  shift, and go to state 225

    $default  reduce using rule 238 (N)

    N  go to state 403


State 397

   79 expression: expression . ',' assignment_expression
  216 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M loop_statement
  218                    | FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    ','  shift, and go to state 225

    $default  reduce using rule 238 (N)

    N  go to state 404


State 398

  212 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 203 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 405
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 399

  211 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement .

    $default  reduce using rule 211 (iteration_statement)


State 400

  209 selection_statement: IF '(' expression N ')' M statement N ELSE M . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 406
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 401

   79 expression: expression . ',' assignment_expression
  214 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 407
    ','  shift, and go to state 225


State 402

  213 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' ';' .

    $default  reduce using rule 213 (iteration_statement)


State 403

  215 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N . ')' M loop_statement
  217                    | FOR F '(' X changetable declaration M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 408


State 404

  216 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M loop_statement
  218                    | FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 409


State 405

  212 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt . '}'

    '}'  shift, and go to state 410


State 406

  209 selection_statement: IF '(' expression N ')' M statement N ELSE M statement .

    $default  reduce using rule 209 (selection_statement)


State 407

  214 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 411


State 408

  215 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' . M loop_statement
  217                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 233 (M)

    M  go to state 412


State 409

  216 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M loop_statement
  218                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 233 (M)

    M  go to state 413


State 410

  212 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}' .

    $default  reduce using rule 212 (iteration_statement)


State 411

  214 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';' .

    $default  reduce using rule 214 (iteration_statement)


State 412

  215 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M . loop_statement
  217                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 414
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    loop_statement             go to state 415
    labeled_statement          go to state 355
    expression_statement       go to state 356
    selection_statement        go to state 357
    iteration_statement        go to state 358
    jump_statement             go to state 359


State 413

  216 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . loop_statement
  218                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 416
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    loop_statement             go to state 417
    labeled_statement          go to state 355
    expression_statement       go to state 356
    selection_statement        go to state 357
    iteration_statement        go to state 358
    jump_statement             go to state 359


State 414

  217 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 203 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 418
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 415

  215 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 215 (iteration_statement)


State 416

  218 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 203 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 419
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 417

  216 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 216 (iteration_statement)


State 418

  217 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 420


State 419

  218 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 421


State 420

  217 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 217 (iteration_statement)


State 421

  218 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 218 (iteration_statement)

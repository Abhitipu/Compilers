Terminals unused in grammar

    TYPEDEF
    STRING_LITERAL
    ENUMERATION_CONST


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 F: %empty

    3 W: %empty

    4 D: %empty

    5 X: %empty

    6 N: %empty

    7 changetable: %empty

    8 constant: INTEGER_CONST
    9         | FLOAT_CONST
   10         | CHAR_CONST

   11 primary_expression: IDENTIFIER
   12                   | constant
   13                   | '(' expression ')'

   14 postfix_expression: primary_expression
   15                   | postfix_expression '[' expression ']'
   16                   | postfix_expression '(' argument_expression_list_opt ')'
   17                   | postfix_expression '.' IDENTIFIER
   18                   | postfix_expression ARROW IDENTIFIER
   19                   | postfix_expression INCREMENT
   20                   | postfix_expression DECREMENT
   21                   | '(' type_name ')' '{' initializer_list '}'
   22                   | '(' type_name ')' '{' initializer_list ',' '}'

   23 argument_expression_list: assignment_expression
   24                         | argument_expression_list ',' assignment_expression

   25 argument_expression_list_opt: argument_expression_list
   26                             | %empty

   27 unary_expression: postfix_expression
   28                 | INCREMENT unary_expression
   29                 | DECREMENT unary_expression
   30                 | unary_operator cast_expression
   31                 | SIZEOF unary_expression
   32                 | SIZEOF '(' type_name ')'

   33 unary_operator: BITWISE_AND
   34               | MULT
   35               | PLUS
   36               | MINUS
   37               | BITWISE_NOT
   38               | LOGICAL_NOT

   39 cast_expression: unary_expression
   40                | '(' type_name ')' cast_expression

   41 multiplicative_expression: cast_expression
   42                          | multiplicative_expression MULT cast_expression
   43                          | multiplicative_expression DIVIDE cast_expression
   44                          | multiplicative_expression MODULO cast_expression

   45 additive_expression: multiplicative_expression
   46                    | additive_expression PLUS multiplicative_expression
   47                    | additive_expression MINUS multiplicative_expression

   48 shift_expression: additive_expression
   49                 | shift_expression LSHIFT additive_expression
   50                 | shift_expression RSHIFT additive_expression

   51 relational_expression: shift_expression
   52                      | relational_expression LT shift_expression
   53                      | relational_expression GT shift_expression
   54                      | relational_expression LEQ shift_expression
   55                      | relational_expression GEQ shift_expression

   56 equality_expression: relational_expression
   57                    | equality_expression EQ relational_expression
   58                    | equality_expression NEQ relational_expression

   59 and_expression: equality_expression
   60               | and_expression BITWISE_AND equality_expression

   61 exclusive_or_expression: and_expression
   62                        | exclusive_or_expression XOR and_expression

   63 inclusive_or_expression: exclusive_or_expression
   64                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   65 logical_and_expression: inclusive_or_expression
   66                       | logical_and_expression LOGICAL_AND M inclusive_or_expression

   67 logical_or_expression: logical_and_expression
   68                      | logical_or_expression LOGICAL_OR M logical_and_expression

   69 conditional_expression: logical_or_expression
   70                       | logical_or_expression N '?' M expression N ':' M conditional_expression

   71 assignment_expression: conditional_expression
   72                      | unary_expression assignment_operator assignment_expression

   73 assignment_operator: ASGN
   74                    | MULT_ASGN
   75                    | DIV_ASGN
   76                    | MOD_ASGN
   77                    | ADD_ASGN
   78                    | SUB_ASGN
   79                    | LSHIFT_ASGN
   80                    | RSHIFT_ASGN
   81                    | AND_ASGN
   82                    | XOR_ASGN
   83                    | OR_ASGN

   84 expression: assignment_expression
   85           | expression ',' assignment_expression

   86 constant_expression: conditional_expression

   87 declaration: declaration_specifiers init_declarator_list_opt ';'

   88 init_declarator_list_opt: init_declarator_list
   89                         | %empty

   90 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   91                       | type_specifier declaration_specifiers_opt
   92                       | type_qualifier declaration_specifiers_opt
   93                       | function_specifier declaration_specifiers_opt

   94 declaration_specifiers_opt: declaration_specifiers
   95                           | %empty

   96 init_declarator_list: init_declarator
   97                     | init_declarator_list ',' init_declarator

   98 init_declarator: declarator
   99                | declarator ASGN initializer

  100 storage_class_specifier: EXTERN
  101                        | STATIC
  102                        | AUTO
  103                        | REGISTER

  104 type_specifier: VOID
  105               | CHAR
  106               | SHORT
  107               | INT
  108               | LONG
  109               | FLOAT
  110               | DOUBLE
  111               | SIGNED
  112               | UNSIGNED
  113               | _BOOL
  114               | _COMPLEX
  115               | _IMAGINARY
  116               | enum_specifier
  117               | struct_or_union_specifier

  118 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  119                         | type_qualifier specifier_qualifier_list_opt

  120 specifier_qualifier_list_opt: specifier_qualifier_list
  121                             | %empty

  122 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'
  123                          | struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  124                          | struct_or_union IDENTIFIER

  125 struct_or_union: STRUCT
  126                | UNION

  127 struct_declaration_list: struct_declaration
  128                        | struct_declaration_list struct_declaration

  129 struct_declaration: specifier_qualifier_list ';'
  130                   | specifier_qualifier_list struct_declarator_list ';'

  131 struct_declarator_list: struct_declarator
  132                       | struct_declarator_list ',' struct_declarator

  133 struct_declarator: ':' constant_expression
  134                  | declarator ':' constant_expression
  135                  | declarator

  136 enum_specifier: ENUM identifier_opt '{' enumerator_list '}'
  137               | ENUM identifier_opt '{' enumerator_list ',' '}'
  138               | ENUM IDENTIFIER

  139 identifier_opt: IDENTIFIER
  140               | %empty

  141 enumerator_list: enumerator
  142                | enumerator_list ',' enumerator

  143 enumerator: IDENTIFIER
  144           | IDENTIFIER ASGN constant_expression

  145 type_qualifier: CONST
  146               | RESTRICT
  147               | VOLATILE

  148 function_specifier: INLINE

  149 declarator: pointer direct_declarator
  150           | direct_declarator

  151 direct_declarator: IDENTIFIER
  152                  | '(' declarator ')'
  153                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  154                  | direct_declarator '[' type_qualifier_list ']'
  155                  | direct_declarator '[' assignment_expression ']'
  156                  | direct_declarator '[' ']'
  157                  | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'
  158                  | direct_declarator '[' STATIC assignment_expression ']'
  159                  | direct_declarator '[' type_qualifier_list MULT ']'
  160                  | direct_declarator '[' MULT ']'
  161                  | direct_declarator '(' changetable parameter_type_list ')'
  162                  | direct_declarator '(' identifier_list ')'
  163                  | direct_declarator '(' changetable ')'

  164 type_qualifier_list_opt: type_qualifier_list
  165                        | %empty

  166 pointer: MULT type_qualifier_list_opt
  167        | MULT type_qualifier_list_opt pointer

  168 type_qualifier_list: type_qualifier
  169                    | type_qualifier_list type_qualifier

  170 parameter_type_list: parameter_list
  171                    | parameter_list ',' ELLIPSIS

  172 parameter_list: parameter_declaration
  173               | parameter_list ',' parameter_declaration

  174 parameter_declaration: declaration_specifiers declarator
  175                      | declaration_specifiers

  176 identifier_list: IDENTIFIER
  177                | identifier_list ',' IDENTIFIER

  178 type_name: specifier_qualifier_list

  179 initializer: assignment_expression
  180            | '{' initializer_list '}'
  181            | '{' initializer_list ',' '}'

  182 initializer_list: designation_opt initializer
  183                 | initializer_list ',' designation_opt initializer

  184 designation_opt: designation
  185                | %empty

  186 designation: designator_list ASGN

  187 designator_list: designator
  188                | designator_list designator

  189 designator: '[' constant_expression ']'
  190           | '.' IDENTIFIER

  191 statement: labeled_statement
  192          | compound_statement
  193          | expression_statement
  194          | selection_statement
  195          | iteration_statement
  196          | jump_statement

  197 loop_statement: labeled_statement
  198               | expression_statement
  199               | selection_statement
  200               | iteration_statement
  201               | jump_statement

  202 labeled_statement: IDENTIFIER ':' M statement
  203                  | CASE constant_expression ':' statement
  204                  | DEFAULT ':' statement

  205 compound_statement: '{' X changetable block_item_list_opt '}'

  206 block_item_list: block_item
  207                | block_item_list M block_item

  208 block_item_list_opt: block_item_list
  209                    | %empty

  210 block_item: declaration
  211           | statement

  212 expression_statement: ';'
  213                     | expression ';'

  214 selection_statement: IF '(' expression N ')' M statement N
  215                    | IF '(' expression N ')' M statement N ELSE M statement
  216                    | SWITCH '(' expression ')' statement

  217 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement
  218                    | WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}'
  219                    | DO D M loop_statement M WHILE '(' expression ')' ';'
  220                    | DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';'
  221                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  222                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  223                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  224                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

  225 jump_statement: GOTO IDENTIFIER ';'
  226               | CONTINUE ';'
  227               | BREAK ';'
  228               | RETURN expression ';'
  229               | RETURN ';'

  230 translation_unit: external_declaration
  231                 | translation_unit external_declaration

  232 external_declaration: function_definition
  233                     | declaration

  234 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}'

  235 declaration_list_opt: declaration_list
  236                     | %empty

  237 declaration_list: declaration
  238                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 13 16 21 22 32 40 152 161 162 163 214 215 216 217 218 219 220 221 222 223 224
    ')' (41) 13 16 21 22 32 40 152 161 162 163 214 215 216 217 218 219 220 221 222 223 224
    ',' (44) 22 24 85 97 132 137 142 171 173 177 181 183
    '.' (46) 17 190
    ':' (58) 70 133 134 202 203 204
    ';' (59) 87 129 130 212 213 219 220 225 226 227 228 229
    '?' (63) 70
    '[' (91) 15 153 154 155 156 157 158 159 160 189
    ']' (93) 15 153 154 155 156 157 158 159 160 189
    '{' (123) 21 22 122 123 136 137 180 181 205 218 220 223 224 234
    '}' (125) 21 22 122 123 136 137 180 181 205 218 220 223 224 234
    error (256)
    BREAK (258) 227
    RETURN (259) 228 229
    CASE (260) 203
    FOR (261) 221 222 223 224
    WHILE (262) 217 218 219 220
    GOTO (263) 225
    SIZEOF (264) 31 32
    CONTINUE (265) 226
    IF (266) 214 215
    DO (267) 219 220
    SWITCH (268) 216
    ELSE (269) 215
    FLOAT (270) 109
    SHORT (271) 106
    CHAR (272) 105
    _BOOL (273) 113
    _IMAGINARY (274) 115
    _COMPLEX (275) 114
    INT (276) 107
    DOUBLE (277) 110
    LONG (278) 108
    VOID (279) 104
    SIGNED (280) 111
    AUTO (281) 102
    UNSIGNED (282) 112
    ENUM (283) 136 137 138
    UNION (284) 126
    STRUCT (285) 125
    TYPEDEF (286)
    CONST (287) 145
    DEFAULT (288) 204
    STATIC (289) 101 157 158
    REGISTER (290) 103
    RESTRICT (291) 146
    VOLATILE (292) 147
    EXTERN (293) 100
    INLINE (294) 148
    IDENTIFIER <symp> (295) 11 17 18 123 124 138 139 143 144 151 176 177 190 202 225
    INTEGER_CONST <int_val> (296) 8
    CHAR_CONST <char_val> (297) 10
    FLOAT_CONST <float_val> (298) 9
    STRING_LITERAL <char_val> (299)
    PLUS (300) 35 46
    MINUS (301) 36 47
    MULT (302) 34 42 159 160 166 167
    DIVIDE (303) 43
    ARROW (304) 18
    INCREMENT (305) 19 28
    DECREMENT (306) 20 29
    RSHIFT (307) 50
    LSHIFT (308) 49
    LT (309) 52
    GT (310) 53
    LEQ (311) 54
    GEQ (312) 55
    EQ (313) 57
    NEQ (314) 58
    BITWISE_OR (315) 64
    LOGICAL_OR (316) 68
    BITWISE_AND (317) 33 60
    LOGICAL_AND (318) 66
    XOR (319) 62
    BITWISE_NOT (320) 37
    LOGICAL_NOT (321) 38
    ELLIPSIS (322) 171
    MODULO (323) 44
    ASGN (324) 73 99 144 186
    ENUMERATION_CONST (325)
    ADD_ASGN (326) 77
    SUB_ASGN (327) 78
    MULT_ASGN (328) 74
    DIV_ASGN (329) 75
    MOD_ASGN (330) 76
    LSHIFT_ASGN (331) 79
    RSHIFT_ASGN (332) 80
    AND_ASGN (333) 81
    OR_ASGN (334) 83
    XOR_ASGN (335) 82
    "then" (336)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    M <instr_number> (94)
        on left: 1
        on right: 66 68 70 202 207 214 215 217 218 219 220 221 222 223 224
    F (95)
        on left: 2
        on right: 221 222 223 224
    W (96)
        on left: 3
        on right: 217 218
    D (97)
        on left: 4
        on right: 219 220
    X (98)
        on left: 5
        on right: 205 217 218 221 222 223 224
    N <stat> (99)
        on left: 6
        on right: 70 214 215 221 222 223 224
    changetable (100)
        on left: 7
        on right: 161 163 205 217 218 221 222 223 224 234
    constant <expr> (101)
        on left: 8 9 10
        on right: 12
    primary_expression <expr> (102)
        on left: 11 12 13
        on right: 14
    postfix_expression <A> (103)
        on left: 14 15 16 17 18 19 20 21 22
        on right: 15 16 17 18 19 20 27
    argument_expression_list <num_params> (104)
        on left: 23 24
        on right: 24 25
    argument_expression_list_opt <num_params> (105)
        on left: 25 26
        on right: 16
    unary_expression <A> (106)
        on left: 27 28 29 30 31 32
        on right: 28 29 31 39 72
    unary_operator <unaryOp> (107)
        on left: 33 34 35 36 37 38
        on right: 30
    cast_expression <A> (108)
        on left: 39 40
        on right: 30 40 41 42 43 44
    multiplicative_expression <expr> (109)
        on left: 41 42 43 44
        on right: 42 43 44 45 46 47
    additive_expression <expr> (110)
        on left: 45 46 47
        on right: 46 47 48 49 50
    shift_expression <expr> (111)
        on left: 48 49 50
        on right: 49 50 51 52 53 54 55
    relational_expression <expr> (112)
        on left: 51 52 53 54 55
        on right: 52 53 54 55 56 57 58
    equality_expression <expr> (113)
        on left: 56 57 58
        on right: 57 58 59 60
    and_expression <expr> (114)
        on left: 59 60
        on right: 60 61 62
    exclusive_or_expression <expr> (115)
        on left: 61 62
        on right: 62 63 64
    inclusive_or_expression <expr> (116)
        on left: 63 64
        on right: 64 65 66
    logical_and_expression <expr> (117)
        on left: 65 66
        on right: 66 67 68
    logical_or_expression <expr> (118)
        on left: 67 68
        on right: 68 69 70
    conditional_expression <expr> (119)
        on left: 69 70
        on right: 70 71 86
    assignment_expression <expr> (120)
        on left: 71 72
        on right: 23 24 72 84 85 153 155 157 158 179
    assignment_operator (121)
        on left: 73 74 75 76 77 78 79 80 81 82 83
        on right: 72
    expression <expr> (122)
        on left: 84 85
        on right: 13 15 70 85 213 214 215 216 217 218 219 220 221 222 223 224 228
    constant_expression (123)
        on left: 86
        on right: 133 134 144 189 203
    declaration (124)
        on left: 87
        on right: 210 221 223 233 237 238
    init_declarator_list_opt (125)
        on left: 88 89
        on right: 87
    declaration_specifiers (126)
        on left: 90 91 92 93
        on right: 87 94 174 175 234
    declaration_specifiers_opt (127)
        on left: 94 95
        on right: 90 91 92 93
    init_declarator_list (128)
        on left: 96 97
        on right: 88 97
    init_declarator <symp> (129)
        on left: 98 99
        on right: 96 97
    storage_class_specifier (130)
        on left: 100 101 102 103
        on right: 90
    type_specifier (131)
        on left: 104 105 106 107 108 109 110 111 112 113 114 115 116 117
        on right: 91 118
    specifier_qualifier_list (132)
        on left: 118 119
        on right: 120 129 130 178
    specifier_qualifier_list_opt (133)
        on left: 120 121
        on right: 118 119
    struct_or_union_specifier (134)
        on left: 122 123 124
        on right: 117
    struct_or_union (135)
        on left: 125 126
        on right: 122 123 124
    struct_declaration_list (136)
        on left: 127 128
        on right: 122 123 128
    struct_declaration (137)
        on left: 129 130
        on right: 127 128
    struct_declarator_list (138)
        on left: 131 132
        on right: 130 132
    struct_declarator (139)
        on left: 133 134 135
        on right: 131 132
    enum_specifier (140)
        on left: 136 137 138
        on right: 116
    identifier_opt (141)
        on left: 139 140
        on right: 136 137
    enumerator_list (142)
        on left: 141 142
        on right: 136 137 142
    enumerator (143)
        on left: 143 144
        on right: 141 142
    type_qualifier (144)
        on left: 145 146 147
        on right: 92 119 168 169
    function_specifier (145)
        on left: 148
        on right: 93
    declarator <symp> (146)
        on left: 149 150
        on right: 98 99 134 135 152 174 234
    direct_declarator <symp> (147)
        on left: 151 152 153 154 155 156 157 158 159 160 161 162 163
        on right: 149 150 153 154 155 156 157 158 159 160 161 162 163
    type_qualifier_list_opt (148)
        on left: 164 165
        on right: 166 167
    pointer <sym_type> (149)
        on left: 166 167
        on right: 149 167
    type_qualifier_list (150)
        on left: 168 169
        on right: 153 154 157 159 164 169
    parameter_type_list (151)
        on left: 170 171
        on right: 161
    parameter_list (152)
        on left: 172 173
        on right: 170 171 173
    parameter_declaration (153)
        on left: 174 175
        on right: 172 173
    identifier_list (154)
        on left: 176 177
        on right: 162 177
    type_name (155)
        on left: 178
        on right: 21 22 32 40
    initializer <symp> (156)
        on left: 179 180 181
        on right: 99 182 183
    initializer_list (157)
        on left: 182 183
        on right: 21 22 180 181 183
    designation_opt (158)
        on left: 184 185
        on right: 182 183
    designation (159)
        on left: 186
        on right: 184
    designator_list (160)
        on left: 187 188
        on right: 186 188
    designator (161)
        on left: 189 190
        on right: 187 188
    statement <stat> (162)
        on left: 191 192 193 194 195 196
        on right: 202 203 204 211 214 215 216
    loop_statement <stat> (163)
        on left: 197 198 199 200 201
        on right: 217 219 221 222
    labeled_statement <stat> (164)
        on left: 202 203 204
        on right: 191 197
    compound_statement <stat> (165)
        on left: 205
        on right: 192
    block_item_list <stat> (166)
        on left: 206 207
        on right: 207 208
    block_item_list_opt <stat> (167)
        on left: 208 209
        on right: 205 218 220 223 224 234
    block_item <stat> (168)
        on left: 210 211
        on right: 206 207
    expression_statement <expr> (169)
        on left: 212 213
        on right: 193 198 221 222 223 224
    selection_statement <stat> (170)
        on left: 214 215 216
        on right: 194 199
    iteration_statement <stat> (171)
        on left: 217 218 219 220 221 222 223 224
        on right: 195 200
    jump_statement <stat> (172)
        on left: 225 226 227 228 229
        on right: 196 201
    translation_unit (173)
        on left: 230 231
        on right: 0 231
    external_declaration (174)
        on left: 232 233
        on right: 230 231
    function_definition (175)
        on left: 234
        on right: 232
    declaration_list_opt (176)
        on left: 235 236
        on right: 234
    declaration_list (177)
        on left: 237 238
        on right: 235 238


State 0

    0 $accept: . translation_unit $end

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    translation_unit           go to state 33
    external_declaration       go to state 34
    function_definition        go to state 35


State 1

  109 type_specifier: FLOAT .

    $default  reduce using rule 109 (type_specifier)


State 2

  106 type_specifier: SHORT .

    $default  reduce using rule 106 (type_specifier)


State 3

  105 type_specifier: CHAR .

    $default  reduce using rule 105 (type_specifier)


State 4

  113 type_specifier: _BOOL .

    $default  reduce using rule 113 (type_specifier)


State 5

  115 type_specifier: _IMAGINARY .

    $default  reduce using rule 115 (type_specifier)


State 6

  114 type_specifier: _COMPLEX .

    $default  reduce using rule 114 (type_specifier)


State 7

  107 type_specifier: INT .

    $default  reduce using rule 107 (type_specifier)


State 8

  110 type_specifier: DOUBLE .

    $default  reduce using rule 110 (type_specifier)


State 9

  108 type_specifier: LONG .

    $default  reduce using rule 108 (type_specifier)


State 10

  104 type_specifier: VOID .

    $default  reduce using rule 104 (type_specifier)


State 11

  111 type_specifier: SIGNED .

    $default  reduce using rule 111 (type_specifier)


State 12

  102 storage_class_specifier: AUTO .

    $default  reduce using rule 102 (storage_class_specifier)


State 13

  112 type_specifier: UNSIGNED .

    $default  reduce using rule 112 (type_specifier)


State 14

  136 enum_specifier: ENUM . identifier_opt '{' enumerator_list '}'
  137               | ENUM . identifier_opt '{' enumerator_list ',' '}'
  138               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 140 (identifier_opt)

    identifier_opt  go to state 37


State 15

  126 struct_or_union: UNION .

    $default  reduce using rule 126 (struct_or_union)


State 16

  125 struct_or_union: STRUCT .

    $default  reduce using rule 125 (struct_or_union)


State 17

  145 type_qualifier: CONST .

    $default  reduce using rule 145 (type_qualifier)


State 18

  101 storage_class_specifier: STATIC .

    $default  reduce using rule 101 (storage_class_specifier)


State 19

  103 storage_class_specifier: REGISTER .

    $default  reduce using rule 103 (storage_class_specifier)


State 20

  146 type_qualifier: RESTRICT .

    $default  reduce using rule 146 (type_qualifier)


State 21

  147 type_qualifier: VOLATILE .

    $default  reduce using rule 147 (type_qualifier)


State 22

  100 storage_class_specifier: EXTERN .

    $default  reduce using rule 100 (storage_class_specifier)


State 23

  148 function_specifier: INLINE .

    $default  reduce using rule 148 (function_specifier)


State 24

  233 external_declaration: declaration .

    $default  reduce using rule 233 (external_declaration)


State 25

   87 declaration: declaration_specifiers . init_declarator_list_opt ';'
  234 function_definition: declaration_specifiers . declarator declaration_list_opt changetable '{' block_item_list_opt '}'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 89 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 44
    direct_declarator         go to state 45
    pointer                   go to state 46


State 26

   90 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 95 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 48
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 27

   91 declaration_specifiers: type_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 95 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 49
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 28

  117 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 117 (type_specifier)


State 29

  122 struct_or_union_specifier: struct_or_union . '{' struct_declaration_list '}'
  123                          | struct_or_union . IDENTIFIER '{' struct_declaration_list '}'
  124                          | struct_or_union . IDENTIFIER

    IDENTIFIER  shift, and go to state 50
    '{'         shift, and go to state 51


State 30

  116 type_specifier: enum_specifier .

    $default  reduce using rule 116 (type_specifier)


State 31

   92 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 95 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 52
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 32

   93 declaration_specifiers: function_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 95 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 53
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 33

    0 $accept: translation_unit . $end
  231 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 54
    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    external_declaration       go to state 55
    function_definition        go to state 35


State 34

  230 translation_unit: external_declaration .

    $default  reduce using rule 230 (translation_unit)


State 35

  232 external_declaration: function_definition .

    $default  reduce using rule 232 (external_declaration)


State 36

  138 enum_specifier: ENUM IDENTIFIER .
  139 identifier_opt: IDENTIFIER .

    '{'       reduce using rule 139 (identifier_opt)
    $default  reduce using rule 138 (enum_specifier)


State 37

  136 enum_specifier: ENUM identifier_opt . '{' enumerator_list '}'
  137               | ENUM identifier_opt . '{' enumerator_list ',' '}'

    '{'  shift, and go to state 56


State 38

  151 direct_declarator: IDENTIFIER .

    $default  reduce using rule 151 (direct_declarator)


State 39

  166 pointer: MULT . type_qualifier_list_opt
  167        | MULT . type_qualifier_list_opt pointer

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 165 (type_qualifier_list_opt)

    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 58
    type_qualifier_list      go to state 59


State 40

  152 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    declarator         go to state 60
    direct_declarator  go to state 45
    pointer            go to state 46


State 41

   87 declaration: declaration_specifiers init_declarator_list_opt . ';'

    ';'  shift, and go to state 61


State 42

   88 init_declarator_list_opt: init_declarator_list .
   97 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 62

    $default  reduce using rule 88 (init_declarator_list_opt)


State 43

   96 init_declarator_list: init_declarator .

    $default  reduce using rule 96 (init_declarator_list)


State 44

   98 init_declarator: declarator .
   99                | declarator . ASGN initializer
  234 function_definition: declaration_specifiers declarator . declaration_list_opt changetable '{' block_item_list_opt '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ASGN        shift, and go to state 63

    '{'       reduce using rule 236 (declaration_list_opt)
    $default  reduce using rule 98 (init_declarator)

    declaration                go to state 64
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    declaration_list_opt       go to state 66
    declaration_list           go to state 67


State 45

  150 declarator: direct_declarator .
  153 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  154                  | direct_declarator . '[' type_qualifier_list ']'
  155                  | direct_declarator . '[' assignment_expression ']'
  156                  | direct_declarator . '[' ']'
  157                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  158                  | direct_declarator . '[' STATIC assignment_expression ']'
  159                  | direct_declarator . '[' type_qualifier_list MULT ']'
  160                  | direct_declarator . '[' MULT ']'
  161                  | direct_declarator . '(' changetable parameter_type_list ')'
  162                  | direct_declarator . '(' identifier_list ')'
  163                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 68
    '['  shift, and go to state 69

    $default  reduce using rule 150 (declarator)


State 46

  149 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 38
    '('         shift, and go to state 40

    direct_declarator  go to state 70


State 47

   94 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 94 (declaration_specifiers_opt)


State 48

   90 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 90 (declaration_specifiers)


State 49

   91 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 91 (declaration_specifiers)


State 50

  123 struct_or_union_specifier: struct_or_union IDENTIFIER . '{' struct_declaration_list '}'
  124                          | struct_or_union IDENTIFIER .

    '{'  shift, and go to state 71

    $default  reduce using rule 124 (struct_or_union_specifier)


State 51

  122 struct_or_union_specifier: struct_or_union '{' . struct_declaration_list '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 74
    struct_declaration         go to state 75
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 52

   92 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 92 (declaration_specifiers)


State 53

   93 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 93 (declaration_specifiers)


State 54

    0 $accept: translation_unit $end .

    $default  accept


State 55

  231 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 231 (translation_unit)


State 56

  136 enum_specifier: ENUM identifier_opt '{' . enumerator_list '}'
  137               | ENUM identifier_opt '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 77

    enumerator_list  go to state 78
    enumerator       go to state 79


State 57

  168 type_qualifier_list: type_qualifier .

    $default  reduce using rule 168 (type_qualifier_list)


State 58

  166 pointer: MULT type_qualifier_list_opt .
  167        | MULT type_qualifier_list_opt . pointer

    MULT  shift, and go to state 39

    $default  reduce using rule 166 (pointer)

    pointer  go to state 80


State 59

  164 type_qualifier_list_opt: type_qualifier_list .
  169 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 164 (type_qualifier_list_opt)

    type_qualifier  go to state 81


State 60

  152 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 82


State 61

   87 declaration: declaration_specifiers init_declarator_list_opt ';' .

    $default  reduce using rule 87 (declaration)


State 62

   97 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    init_declarator    go to state 83
    declarator         go to state 84
    direct_declarator  go to state 45
    pointer            go to state 46


State 63

   99 init_declarator: declarator ASGN . initializer

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 99

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    initializer                go to state 118


State 64

  237 declaration_list: declaration .

    $default  reduce using rule 237 (declaration_list)


State 65

   87 declaration: declaration_specifiers . init_declarator_list_opt ';'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 89 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 84
    direct_declarator         go to state 45
    pointer                   go to state 46


State 66

  234 function_definition: declaration_specifiers declarator declaration_list_opt . changetable '{' block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 119


State 67

  235 declaration_list_opt: declaration_list .
  238 declaration_list: declaration_list . declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 235 (declaration_list_opt)

    declaration                go to state 120
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32


State 68

  161 direct_declarator: direct_declarator '(' . changetable parameter_type_list ')'
  162                  | direct_declarator '(' . identifier_list ')'
  163                  | direct_declarator '(' . changetable ')'

    IDENTIFIER  shift, and go to state 121

    $default  reduce using rule 7 (changetable)

    changetable      go to state 122
    identifier_list  go to state 123


State 69

  153 direct_declarator: direct_declarator '[' . type_qualifier_list assignment_expression ']'
  154                  | direct_declarator '[' . type_qualifier_list ']'
  155                  | direct_declarator '[' . assignment_expression ']'
  156                  | direct_declarator '[' . ']'
  157                  | direct_declarator '[' . STATIC type_qualifier_list assignment_expression ']'
  158                  | direct_declarator '[' . STATIC assignment_expression ']'
  159                  | direct_declarator '[' . type_qualifier_list MULT ']'
  160                  | direct_declarator '[' . MULT ']'

    SIZEOF         shift, and go to state 85
    CONST          shift, and go to state 17
    STATIC         shift, and go to state 124
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 125
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ']'            shift, and go to state 126

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 127
    type_qualifier             go to state 57
    type_qualifier_list        go to state 128


State 70

  149 declarator: pointer direct_declarator .
  153 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  154                  | direct_declarator . '[' type_qualifier_list ']'
  155                  | direct_declarator . '[' assignment_expression ']'
  156                  | direct_declarator . '[' ']'
  157                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  158                  | direct_declarator . '[' STATIC assignment_expression ']'
  159                  | direct_declarator . '[' type_qualifier_list MULT ']'
  160                  | direct_declarator . '[' MULT ']'
  161                  | direct_declarator . '(' changetable parameter_type_list ')'
  162                  | direct_declarator . '(' identifier_list ')'
  163                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 68
    '['  shift, and go to state 69

    $default  reduce using rule 149 (declarator)


State 71

  123 struct_or_union_specifier: struct_or_union IDENTIFIER '{' . struct_declaration_list '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 129
    struct_declaration         go to state 75
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 72

  118 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    $default  reduce using rule 121 (specifier_qualifier_list_opt)

    type_specifier                go to state 72
    specifier_qualifier_list      go to state 130
    specifier_qualifier_list_opt  go to state 131
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 76


State 73

  129 struct_declaration: specifier_qualifier_list . ';'
  130                   | specifier_qualifier_list . struct_declarator_list ';'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40
    ':'         shift, and go to state 132
    ';'         shift, and go to state 133

    struct_declarator_list  go to state 134
    struct_declarator       go to state 135
    declarator              go to state 136
    direct_declarator       go to state 45
    pointer                 go to state 46


State 74

  122 struct_or_union_specifier: struct_or_union '{' struct_declaration_list . '}'
  128 struct_declaration_list: struct_declaration_list . struct_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    '}'         shift, and go to state 137

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 138
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 75

  127 struct_declaration_list: struct_declaration .

    $default  reduce using rule 127 (struct_declaration_list)


State 76

  119 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    $default  reduce using rule 121 (specifier_qualifier_list_opt)

    type_specifier                go to state 72
    specifier_qualifier_list      go to state 130
    specifier_qualifier_list_opt  go to state 139
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 76


State 77

  143 enumerator: IDENTIFIER .
  144           | IDENTIFIER . ASGN constant_expression

    ASGN  shift, and go to state 140

    $default  reduce using rule 143 (enumerator)


State 78

  136 enum_specifier: ENUM identifier_opt '{' enumerator_list . '}'
  137               | ENUM identifier_opt '{' enumerator_list . ',' '}'
  142 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 141
    ','  shift, and go to state 142


State 79

  141 enumerator_list: enumerator .

    $default  reduce using rule 141 (enumerator_list)


State 80

  167 pointer: MULT type_qualifier_list_opt pointer .

    $default  reduce using rule 167 (pointer)


State 81

  169 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 169 (type_qualifier_list)


State 82

  152 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 152 (direct_declarator)


State 83

   97 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 97 (init_declarator_list)


State 84

   98 init_declarator: declarator .
   99                | declarator . ASGN initializer

    ASGN  shift, and go to state 63

    $default  reduce using rule 98 (init_declarator)


State 85

   31 unary_expression: SIZEOF . unary_expression
   32                 | SIZEOF . '(' type_name ')'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 143

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 144
    unary_operator      go to state 104


State 86

   11 primary_expression: IDENTIFIER .

    $default  reduce using rule 11 (primary_expression)


State 87

    8 constant: INTEGER_CONST .

    $default  reduce using rule 8 (constant)


State 88

   10 constant: CHAR_CONST .

    $default  reduce using rule 10 (constant)


State 89

    9 constant: FLOAT_CONST .

    $default  reduce using rule 9 (constant)


State 90

   35 unary_operator: PLUS .

    $default  reduce using rule 35 (unary_operator)


State 91

   36 unary_operator: MINUS .

    $default  reduce using rule 36 (unary_operator)


State 92

   34 unary_operator: MULT .

    $default  reduce using rule 34 (unary_operator)


State 93

   28 unary_expression: INCREMENT . unary_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 145

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 146
    unary_operator      go to state 104


State 94

   29 unary_expression: DECREMENT . unary_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 145

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 147
    unary_operator      go to state 104


State 95

   33 unary_operator: BITWISE_AND .

    $default  reduce using rule 33 (unary_operator)


State 96

   37 unary_operator: BITWISE_NOT .

    $default  reduce using rule 37 (unary_operator)


State 97

   38 unary_operator: LOGICAL_NOT .

    $default  reduce using rule 38 (unary_operator)


State 98

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list ',' '}'
   40 cast_expression: '(' . type_name ')' cast_expression

    SIZEOF         shift, and go to state 85
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 149
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 150
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 151


State 99

  180 initializer: '{' . initializer_list '}'
  181            | '{' . initializer_list ',' '}'

    '['  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 185 (designation_opt)

    initializer_list  go to state 154
    designation_opt   go to state 155
    designation       go to state 156
    designator_list   go to state 157
    designator        go to state 158


State 100

   12 primary_expression: constant .

    $default  reduce using rule 12 (primary_expression)


State 101

   14 postfix_expression: primary_expression .

    $default  reduce using rule 14 (postfix_expression)


State 102

   15 postfix_expression: postfix_expression . '[' expression ']'
   16                   | postfix_expression . '(' argument_expression_list_opt ')'
   17                   | postfix_expression . '.' IDENTIFIER
   18                   | postfix_expression . ARROW IDENTIFIER
   19                   | postfix_expression . INCREMENT
   20                   | postfix_expression . DECREMENT
   27 unary_expression: postfix_expression .

    ARROW      shift, and go to state 159
    INCREMENT  shift, and go to state 160
    DECREMENT  shift, and go to state 161
    '('        shift, and go to state 162
    '['        shift, and go to state 163
    '.'        shift, and go to state 164

    $default  reduce using rule 27 (unary_expression)


State 103

   39 cast_expression: unary_expression .
   72 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASGN         shift, and go to state 165
    ADD_ASGN     shift, and go to state 166
    SUB_ASGN     shift, and go to state 167
    MULT_ASGN    shift, and go to state 168
    DIV_ASGN     shift, and go to state 169
    MOD_ASGN     shift, and go to state 170
    LSHIFT_ASGN  shift, and go to state 171
    RSHIFT_ASGN  shift, and go to state 172
    AND_ASGN     shift, and go to state 173
    OR_ASGN      shift, and go to state 174
    XOR_ASGN     shift, and go to state 175

    $default  reduce using rule 39 (cast_expression)

    assignment_operator  go to state 176


State 104

   30 unary_expression: unary_operator . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 178


State 105

   41 multiplicative_expression: cast_expression .

    $default  reduce using rule 41 (multiplicative_expression)


State 106

   42 multiplicative_expression: multiplicative_expression . MULT cast_expression
   43                          | multiplicative_expression . DIVIDE cast_expression
   44                          | multiplicative_expression . MODULO cast_expression
   45 additive_expression: multiplicative_expression .

    MULT    shift, and go to state 179
    DIVIDE  shift, and go to state 180
    MODULO  shift, and go to state 181

    $default  reduce using rule 45 (additive_expression)


State 107

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   48 shift_expression: additive_expression .

    PLUS   shift, and go to state 182
    MINUS  shift, and go to state 183

    $default  reduce using rule 48 (shift_expression)


State 108

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   51 relational_expression: shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 51 (relational_expression)


State 109

   52 relational_expression: relational_expression . LT shift_expression
   53                      | relational_expression . GT shift_expression
   54                      | relational_expression . LEQ shift_expression
   55                      | relational_expression . GEQ shift_expression
   56 equality_expression: relational_expression .

    LT   shift, and go to state 186
    GT   shift, and go to state 187
    LEQ  shift, and go to state 188
    GEQ  shift, and go to state 189

    $default  reduce using rule 56 (equality_expression)


State 110

   57 equality_expression: equality_expression . EQ relational_expression
   58                    | equality_expression . NEQ relational_expression
   59 and_expression: equality_expression .

    EQ   shift, and go to state 190
    NEQ  shift, and go to state 191

    $default  reduce using rule 59 (and_expression)


State 111

   60 and_expression: and_expression . BITWISE_AND equality_expression
   61 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 192

    $default  reduce using rule 61 (exclusive_or_expression)


State 112

   62 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   63 inclusive_or_expression: exclusive_or_expression .

    XOR  shift, and go to state 193

    $default  reduce using rule 63 (inclusive_or_expression)


State 113

   64 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   65 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 194

    $default  reduce using rule 65 (logical_and_expression)


State 114

   66 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   67 logical_or_expression: logical_and_expression .

    LOGICAL_AND  shift, and go to state 195

    $default  reduce using rule 67 (logical_or_expression)


State 115

   68 logical_or_expression: logical_or_expression . LOGICAL_OR M logical_and_expression
   69 conditional_expression: logical_or_expression .
   70                       | logical_or_expression . N '?' M expression N ':' M conditional_expression

    LOGICAL_OR  shift, and go to state 196

    '?'       reduce using rule 6 (N)
    $default  reduce using rule 69 (conditional_expression)

    N  go to state 197


State 116

   71 assignment_expression: conditional_expression .

    $default  reduce using rule 71 (assignment_expression)


State 117

  179 initializer: assignment_expression .

    $default  reduce using rule 179 (initializer)


State 118

   99 init_declarator: declarator ASGN initializer .

    $default  reduce using rule 99 (init_declarator)


State 119

  234 function_definition: declaration_specifiers declarator declaration_list_opt changetable . '{' block_item_list_opt '}'

    '{'  shift, and go to state 198


State 120

  238 declaration_list: declaration_list declaration .

    $default  reduce using rule 238 (declaration_list)


State 121

  176 identifier_list: IDENTIFIER .

    $default  reduce using rule 176 (identifier_list)


State 122

  161 direct_declarator: direct_declarator '(' changetable . parameter_type_list ')'
  163                  | direct_declarator '(' changetable . ')'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ')'         shift, and go to state 199

    declaration_specifiers     go to state 200
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_type_list        go to state 201
    parameter_list             go to state 202
    parameter_declaration      go to state 203


State 123

  162 direct_declarator: direct_declarator '(' identifier_list . ')'
  177 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 204
    ','  shift, and go to state 205


State 124

  157 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list assignment_expression ']'
  158                  | direct_declarator '[' STATIC . assignment_expression ']'

    SIZEOF         shift, and go to state 85
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 206
    type_qualifier             go to state 57
    type_qualifier_list        go to state 207


State 125

   34 unary_operator: MULT .
  160 direct_declarator: direct_declarator '[' MULT . ']'

    ']'  shift, and go to state 208

    $default  reduce using rule 34 (unary_operator)


State 126

  156 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 156 (direct_declarator)


State 127

  155 direct_declarator: direct_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 209


State 128

  153 direct_declarator: direct_declarator '[' type_qualifier_list . assignment_expression ']'
  154                  | direct_declarator '[' type_qualifier_list . ']'
  159                  | direct_declarator '[' type_qualifier_list . MULT ']'
  169 type_qualifier_list: type_qualifier_list . type_qualifier

    SIZEOF         shift, and go to state 85
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 210
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ']'            shift, and go to state 211

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 212
    type_qualifier             go to state 81


State 129

  123 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list . '}'
  128 struct_declaration_list: struct_declaration_list . struct_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    '}'         shift, and go to state 213

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 138
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 130

  120 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 120 (specifier_qualifier_list_opt)


State 131

  118 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 118 (specifier_qualifier_list)


State 132

  133 struct_declarator: ':' . constant_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 215


State 133

  129 struct_declaration: specifier_qualifier_list ';' .

    $default  reduce using rule 129 (struct_declaration)


State 134

  130 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
  132 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 216
    ';'  shift, and go to state 217


State 135

  131 struct_declarator_list: struct_declarator .

    $default  reduce using rule 131 (struct_declarator_list)


State 136

  134 struct_declarator: declarator . ':' constant_expression
  135                  | declarator .

    ':'  shift, and go to state 218

    $default  reduce using rule 135 (struct_declarator)


State 137

  122 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' .

    $default  reduce using rule 122 (struct_or_union_specifier)


State 138

  128 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 128 (struct_declaration_list)


State 139

  119 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 119 (specifier_qualifier_list)


State 140

  144 enumerator: IDENTIFIER ASGN . constant_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 219


State 141

  136 enum_specifier: ENUM identifier_opt '{' enumerator_list '}' .

    $default  reduce using rule 136 (enum_specifier)


State 142

  137 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' . '}'
  142 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 77
    '}'         shift, and go to state 220

    enumerator  go to state 221


State 143

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list ',' '}'
   32 unary_expression: SIZEOF '(' . type_name ')'

    SIZEOF         shift, and go to state 85
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 149
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 150
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 222


State 144

   31 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 31 (unary_expression)


State 145

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list ',' '}'

    SIZEOF         shift, and go to state 85
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 149
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 150
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 223


State 146

   28 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 28 (unary_expression)


State 147

   29 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 29 (unary_expression)


State 148

   84 expression: assignment_expression .

    $default  reduce using rule 84 (expression)


State 149

   13 primary_expression: '(' expression . ')'
   85 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 224
    ','  shift, and go to state 225


State 150

  178 type_name: specifier_qualifier_list .

    $default  reduce using rule 178 (type_name)


State 151

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list ',' '}'
   40 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 226


State 152

  189 designator: '[' . constant_expression ']'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 227


State 153

  190 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 228


State 154

  180 initializer: '{' initializer_list . '}'
  181            | '{' initializer_list . ',' '}'
  183 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 229
    ','  shift, and go to state 230


State 155

  182 initializer_list: designation_opt . initializer

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 99

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    initializer                go to state 231


State 156

  184 designation_opt: designation .

    $default  reduce using rule 184 (designation_opt)


State 157

  186 designation: designator_list . ASGN
  188 designator_list: designator_list . designator

    ASGN  shift, and go to state 232
    '['   shift, and go to state 152
    '.'   shift, and go to state 153

    designator  go to state 233


State 158

  187 designator_list: designator .

    $default  reduce using rule 187 (designator_list)


State 159

   18 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 234


State 160

   19 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 19 (postfix_expression)


State 161

   20 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 20 (postfix_expression)


State 162

   16 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    $default  reduce using rule 26 (argument_expression_list_opt)

    constant                      go to state 100
    primary_expression            go to state 101
    postfix_expression            go to state 102
    argument_expression_list      go to state 235
    argument_expression_list_opt  go to state 236
    unary_expression              go to state 103
    unary_operator                go to state 104
    cast_expression               go to state 105
    multiplicative_expression     go to state 106
    additive_expression           go to state 107
    shift_expression              go to state 108
    relational_expression         go to state 109
    equality_expression           go to state 110
    and_expression                go to state 111
    exclusive_or_expression       go to state 112
    inclusive_or_expression       go to state 113
    logical_and_expression        go to state 114
    logical_or_expression         go to state 115
    conditional_expression        go to state 116
    assignment_expression         go to state 237


State 163

   15 postfix_expression: postfix_expression '[' . expression ']'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 238


State 164

   17 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 239


State 165

   73 assignment_operator: ASGN .

    $default  reduce using rule 73 (assignment_operator)


State 166

   77 assignment_operator: ADD_ASGN .

    $default  reduce using rule 77 (assignment_operator)


State 167

   78 assignment_operator: SUB_ASGN .

    $default  reduce using rule 78 (assignment_operator)


State 168

   74 assignment_operator: MULT_ASGN .

    $default  reduce using rule 74 (assignment_operator)


State 169

   75 assignment_operator: DIV_ASGN .

    $default  reduce using rule 75 (assignment_operator)


State 170

   76 assignment_operator: MOD_ASGN .

    $default  reduce using rule 76 (assignment_operator)


State 171

   79 assignment_operator: LSHIFT_ASGN .

    $default  reduce using rule 79 (assignment_operator)


State 172

   80 assignment_operator: RSHIFT_ASGN .

    $default  reduce using rule 80 (assignment_operator)


State 173

   81 assignment_operator: AND_ASGN .

    $default  reduce using rule 81 (assignment_operator)


State 174

   83 assignment_operator: OR_ASGN .

    $default  reduce using rule 83 (assignment_operator)


State 175

   82 assignment_operator: XOR_ASGN .

    $default  reduce using rule 82 (assignment_operator)


State 176

   72 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 240


State 177

   39 cast_expression: unary_expression .

    $default  reduce using rule 39 (cast_expression)


State 178

   30 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 30 (unary_expression)


State 179

   42 multiplicative_expression: multiplicative_expression MULT . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 241


State 180

   43 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 242


State 181

   44 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 243


State 182

   46 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 244


State 183

   47 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 245


State 184

   50 shift_expression: shift_expression RSHIFT . additive_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 246


State 185

   49 shift_expression: shift_expression LSHIFT . additive_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 247


State 186

   52 relational_expression: relational_expression LT . shift_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 248


State 187

   53 relational_expression: relational_expression GT . shift_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 249


State 188

   54 relational_expression: relational_expression LEQ . shift_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 250


State 189

   55 relational_expression: relational_expression GEQ . shift_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 251


State 190

   57 equality_expression: equality_expression EQ . relational_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 252


State 191

   58 equality_expression: equality_expression NEQ . relational_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 253


State 192

   60 and_expression: and_expression BITWISE_AND . equality_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 254


State 193

   62 exclusive_or_expression: exclusive_or_expression XOR . and_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 255


State 194

   64 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 256


State 195

   66 logical_and_expression: logical_and_expression LOGICAL_AND . M inclusive_or_expression

    $default  reduce using rule 1 (M)

    M  go to state 257


State 196

   68 logical_or_expression: logical_or_expression LOGICAL_OR . M logical_and_expression

    $default  reduce using rule 1 (M)

    M  go to state 258


State 197

   70 conditional_expression: logical_or_expression N . '?' M expression N ':' M conditional_expression

    '?'  shift, and go to state 259


State 198

  234 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 209 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 280
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 199

  163 direct_declarator: direct_declarator '(' changetable ')' .

    $default  reduce using rule 163 (direct_declarator)


State 200

  174 parameter_declaration: declaration_specifiers . declarator
  175                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 175 (parameter_declaration)

    declarator         go to state 286
    direct_declarator  go to state 45
    pointer            go to state 46


State 201

  161 direct_declarator: direct_declarator '(' changetable parameter_type_list . ')'

    ')'  shift, and go to state 287


State 202

  170 parameter_type_list: parameter_list .
  171                    | parameter_list . ',' ELLIPSIS
  173 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 288

    $default  reduce using rule 170 (parameter_type_list)


State 203

  172 parameter_list: parameter_declaration .

    $default  reduce using rule 172 (parameter_list)


State 204

  162 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 162 (direct_declarator)


State 205

  177 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 289


State 206

  158 direct_declarator: direct_declarator '[' STATIC assignment_expression . ']'

    ']'  shift, and go to state 290


State 207

  157 direct_declarator: direct_declarator '[' STATIC type_qualifier_list . assignment_expression ']'
  169 type_qualifier_list: type_qualifier_list . type_qualifier

    SIZEOF         shift, and go to state 85
    CONST          shift, and go to state 17
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 291
    type_qualifier             go to state 81


State 208

  160 direct_declarator: direct_declarator '[' MULT ']' .

    $default  reduce using rule 160 (direct_declarator)


State 209

  155 direct_declarator: direct_declarator '[' assignment_expression ']' .

    $default  reduce using rule 155 (direct_declarator)


State 210

   34 unary_operator: MULT .
  159 direct_declarator: direct_declarator '[' type_qualifier_list MULT . ']'

    ']'  shift, and go to state 292

    $default  reduce using rule 34 (unary_operator)


State 211

  154 direct_declarator: direct_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 154 (direct_declarator)


State 212

  153 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 293


State 213

  123 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 123 (struct_or_union_specifier)


State 214

   86 constant_expression: conditional_expression .

    $default  reduce using rule 86 (constant_expression)


State 215

  133 struct_declarator: ':' constant_expression .

    $default  reduce using rule 133 (struct_declarator)


State 216

  132 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40
    ':'         shift, and go to state 132

    struct_declarator  go to state 294
    declarator         go to state 136
    direct_declarator  go to state 45
    pointer            go to state 46


State 217

  130 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 130 (struct_declaration)


State 218

  134 struct_declarator: declarator ':' . constant_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 295


State 219

  144 enumerator: IDENTIFIER ASGN constant_expression .

    $default  reduce using rule 144 (enumerator)


State 220

  137 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' '}' .

    $default  reduce using rule 137 (enum_specifier)


State 221

  142 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 142 (enumerator_list)


State 222

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list ',' '}'
   32 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 296


State 223

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 297


State 224

   13 primary_expression: '(' expression ')' .

    $default  reduce using rule 13 (primary_expression)


State 225

   85 expression: expression ',' . assignment_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 298


State 226

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list ',' '}'
   40 cast_expression: '(' type_name ')' . cast_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 299

    constant            go to state 100
    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 177
    unary_operator      go to state 104
    cast_expression     go to state 300


State 227

  189 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 301


State 228

  190 designator: '.' IDENTIFIER .

    $default  reduce using rule 190 (designator)


State 229

  180 initializer: '{' initializer_list '}' .

    $default  reduce using rule 180 (initializer)


State 230

  181 initializer: '{' initializer_list ',' . '}'
  183 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 152
    '.'  shift, and go to state 153
    '}'  shift, and go to state 302

    $default  reduce using rule 185 (designation_opt)

    designation_opt  go to state 303
    designation      go to state 156
    designator_list  go to state 157
    designator       go to state 158


State 231

  182 initializer_list: designation_opt initializer .

    $default  reduce using rule 182 (initializer_list)


State 232

  186 designation: designator_list ASGN .

    $default  reduce using rule 186 (designation)


State 233

  188 designator_list: designator_list designator .

    $default  reduce using rule 188 (designator_list)


State 234

   18 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 18 (postfix_expression)


State 235

   24 argument_expression_list: argument_expression_list . ',' assignment_expression
   25 argument_expression_list_opt: argument_expression_list .

    ','  shift, and go to state 304

    $default  reduce using rule 25 (argument_expression_list_opt)


State 236

   16 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 305


State 237

   23 argument_expression_list: assignment_expression .

    $default  reduce using rule 23 (argument_expression_list)


State 238

   15 postfix_expression: postfix_expression '[' expression . ']'
   85 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 306
    ','  shift, and go to state 225


State 239

   17 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 17 (postfix_expression)


State 240

   72 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 72 (assignment_expression)


State 241

   42 multiplicative_expression: multiplicative_expression MULT cast_expression .

    $default  reduce using rule 42 (multiplicative_expression)


State 242

   43 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 43 (multiplicative_expression)


State 243

   44 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 44 (multiplicative_expression)


State 244

   42 multiplicative_expression: multiplicative_expression . MULT cast_expression
   43                          | multiplicative_expression . DIVIDE cast_expression
   44                          | multiplicative_expression . MODULO cast_expression
   46 additive_expression: additive_expression PLUS multiplicative_expression .

    MULT    shift, and go to state 179
    DIVIDE  shift, and go to state 180
    MODULO  shift, and go to state 181

    $default  reduce using rule 46 (additive_expression)


State 245

   42 multiplicative_expression: multiplicative_expression . MULT cast_expression
   43                          | multiplicative_expression . DIVIDE cast_expression
   44                          | multiplicative_expression . MODULO cast_expression
   47 additive_expression: additive_expression MINUS multiplicative_expression .

    MULT    shift, and go to state 179
    DIVIDE  shift, and go to state 180
    MODULO  shift, and go to state 181

    $default  reduce using rule 47 (additive_expression)


State 246

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   50 shift_expression: shift_expression RSHIFT additive_expression .

    PLUS   shift, and go to state 182
    MINUS  shift, and go to state 183

    $default  reduce using rule 50 (shift_expression)


State 247

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   49 shift_expression: shift_expression LSHIFT additive_expression .

    PLUS   shift, and go to state 182
    MINUS  shift, and go to state 183

    $default  reduce using rule 49 (shift_expression)


State 248

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   52 relational_expression: relational_expression LT shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 52 (relational_expression)


State 249

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   53 relational_expression: relational_expression GT shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 53 (relational_expression)


State 250

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   54 relational_expression: relational_expression LEQ shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 54 (relational_expression)


State 251

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   55 relational_expression: relational_expression GEQ shift_expression .

    RSHIFT  shift, and go to state 184
    LSHIFT  shift, and go to state 185

    $default  reduce using rule 55 (relational_expression)


State 252

   52 relational_expression: relational_expression . LT shift_expression
   53                      | relational_expression . GT shift_expression
   54                      | relational_expression . LEQ shift_expression
   55                      | relational_expression . GEQ shift_expression
   57 equality_expression: equality_expression EQ relational_expression .

    LT   shift, and go to state 186
    GT   shift, and go to state 187
    LEQ  shift, and go to state 188
    GEQ  shift, and go to state 189

    $default  reduce using rule 57 (equality_expression)


State 253

   52 relational_expression: relational_expression . LT shift_expression
   53                      | relational_expression . GT shift_expression
   54                      | relational_expression . LEQ shift_expression
   55                      | relational_expression . GEQ shift_expression
   58 equality_expression: equality_expression NEQ relational_expression .

    LT   shift, and go to state 186
    GT   shift, and go to state 187
    LEQ  shift, and go to state 188
    GEQ  shift, and go to state 189

    $default  reduce using rule 58 (equality_expression)


State 254

   57 equality_expression: equality_expression . EQ relational_expression
   58                    | equality_expression . NEQ relational_expression
   60 and_expression: and_expression BITWISE_AND equality_expression .

    EQ   shift, and go to state 190
    NEQ  shift, and go to state 191

    $default  reduce using rule 60 (and_expression)


State 255

   60 and_expression: and_expression . BITWISE_AND equality_expression
   62 exclusive_or_expression: exclusive_or_expression XOR and_expression .

    BITWISE_AND  shift, and go to state 192

    $default  reduce using rule 62 (exclusive_or_expression)


State 256

   62 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   64 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    XOR  shift, and go to state 193

    $default  reduce using rule 64 (inclusive_or_expression)


State 257

   66 logical_and_expression: logical_and_expression LOGICAL_AND M . inclusive_or_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 307


State 258

   68 logical_or_expression: logical_or_expression LOGICAL_OR M . logical_and_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 308


State 259

   70 conditional_expression: logical_or_expression N '?' . M expression N ':' M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 309


State 260

  227 jump_statement: BREAK . ';'

    ';'  shift, and go to state 310


State 261

  228 jump_statement: RETURN . expression ';'
  229               | RETURN . ';'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 311

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 312


State 262

  203 labeled_statement: CASE . constant_expression ':' statement

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 214
    constant_expression        go to state 313


State 263

  221 iteration_statement: FOR . F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  222                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  223                    | FOR . F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  224                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 2 (F)

    F  go to state 314


State 264

  217 iteration_statement: WHILE . W '(' X changetable M expression ')' M loop_statement
  218                    | WHILE . W '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 3 (W)

    W  go to state 315


State 265

  225 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 316


State 266

  226 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 317


State 267

  214 selection_statement: IF . '(' expression N ')' M statement N
  215                    | IF . '(' expression N ')' M statement N ELSE M statement

    '('  shift, and go to state 318


State 268

  219 iteration_statement: DO . D M loop_statement M WHILE '(' expression ')' ';'
  220                    | DO . D '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';'

    $default  reduce using rule 4 (D)

    D  go to state 319


State 269

  216 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 320


State 270

  204 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 321


State 271

   11 primary_expression: IDENTIFIER .
  202 labeled_statement: IDENTIFIER . ':' M statement

    ':'  shift, and go to state 322

    $default  reduce using rule 11 (primary_expression)


State 272

  205 compound_statement: '{' . X changetable block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 323


State 273

  212 expression_statement: ';' .

    $default  reduce using rule 212 (expression_statement)


State 274

   85 expression: expression . ',' assignment_expression
  213 expression_statement: expression . ';'

    ','  shift, and go to state 225
    ';'  shift, and go to state 324


State 275

  210 block_item: declaration .

    $default  reduce using rule 210 (block_item)


State 276

  211 block_item: statement .

    $default  reduce using rule 211 (block_item)


State 277

  191 statement: labeled_statement .

    $default  reduce using rule 191 (statement)


State 278

  192 statement: compound_statement .

    $default  reduce using rule 192 (statement)


State 279

  207 block_item_list: block_item_list . M block_item
  208 block_item_list_opt: block_item_list .

    '}'       reduce using rule 208 (block_item_list_opt)
    $default  reduce using rule 1 (M)

    M  go to state 325


State 280

  234 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt . '}'

    '}'  shift, and go to state 326


State 281

  206 block_item_list: block_item .

    $default  reduce using rule 206 (block_item_list)


State 282

  193 statement: expression_statement .

    $default  reduce using rule 193 (statement)


State 283

  194 statement: selection_statement .

    $default  reduce using rule 194 (statement)


State 284

  195 statement: iteration_statement .

    $default  reduce using rule 195 (statement)


State 285

  196 statement: jump_statement .

    $default  reduce using rule 196 (statement)


State 286

  174 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 174 (parameter_declaration)


State 287

  161 direct_declarator: direct_declarator '(' changetable parameter_type_list ')' .

    $default  reduce using rule 161 (direct_declarator)


State 288

  171 parameter_type_list: parameter_list ',' . ELLIPSIS
  173 parameter_list: parameter_list ',' . parameter_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ELLIPSIS    shift, and go to state 327

    declaration_specifiers     go to state 200
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_declaration      go to state 328


State 289

  177 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 177 (identifier_list)


State 290

  158 direct_declarator: direct_declarator '[' STATIC assignment_expression ']' .

    $default  reduce using rule 158 (direct_declarator)


State 291

  157 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 329


State 292

  159 direct_declarator: direct_declarator '[' type_qualifier_list MULT ']' .

    $default  reduce using rule 159 (direct_declarator)


State 293

  153 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 153 (direct_declarator)


State 294

  132 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 132 (struct_declarator_list)


State 295

  134 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 134 (struct_declarator)


State 296

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list ',' '}'
   32 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 299

    $default  reduce using rule 32 (unary_expression)


State 297

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 299


State 298

   85 expression: expression ',' assignment_expression .

    $default  reduce using rule 85 (expression)


State 299

   21 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   22                   | '(' type_name ')' '{' . initializer_list ',' '}'

    '['  shift, and go to state 152
    '.'  shift, and go to state 153

    $default  reduce using rule 185 (designation_opt)

    initializer_list  go to state 330
    designation_opt   go to state 155
    designation       go to state 156
    designator_list   go to state 157
    designator        go to state 158


State 300

   40 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 40 (cast_expression)


State 301

  189 designator: '[' constant_expression ']' .

    $default  reduce using rule 189 (designator)


State 302

  181 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 181 (initializer)


State 303

  183 initializer_list: initializer_list ',' designation_opt . initializer

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 99

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    initializer                go to state 331


State 304

   24 argument_expression_list: argument_expression_list ',' . assignment_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 332


State 305

   16 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 16 (postfix_expression)


State 306

   15 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 15 (postfix_expression)


State 307

   64 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   66 logical_and_expression: logical_and_expression LOGICAL_AND M inclusive_or_expression .

    BITWISE_OR  shift, and go to state 194

    $default  reduce using rule 66 (logical_and_expression)


State 308

   66 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   68 logical_or_expression: logical_or_expression LOGICAL_OR M logical_and_expression .

    LOGICAL_AND  shift, and go to state 195

    $default  reduce using rule 68 (logical_or_expression)


State 309

   70 conditional_expression: logical_or_expression N '?' M . expression N ':' M conditional_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 333


State 310

  227 jump_statement: BREAK ';' .

    $default  reduce using rule 227 (jump_statement)


State 311

  229 jump_statement: RETURN ';' .

    $default  reduce using rule 229 (jump_statement)


State 312

   85 expression: expression . ',' assignment_expression
  228 jump_statement: RETURN expression . ';'

    ','  shift, and go to state 225
    ';'  shift, and go to state 334


State 313

  203 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 335


State 314

  221 iteration_statement: FOR F . '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  222                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  223                    | FOR F . '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  224                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    '('  shift, and go to state 336


State 315

  217 iteration_statement: WHILE W . '(' X changetable M expression ')' M loop_statement
  218                    | WHILE W . '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    '('  shift, and go to state 337


State 316

  225 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 338


State 317

  226 jump_statement: CONTINUE ';' .

    $default  reduce using rule 226 (jump_statement)


State 318

  214 selection_statement: IF '(' . expression N ')' M statement N
  215                    | IF '(' . expression N ')' M statement N ELSE M statement

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 339


State 319

  219 iteration_statement: DO D . M loop_statement M WHILE '(' expression ')' ';'
  220                    | DO D . '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';'

    '{'  shift, and go to state 340

    $default  reduce using rule 1 (M)

    M  go to state 341


State 320

  216 selection_statement: SWITCH '(' . expression ')' statement

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 342


State 321

  204 labeled_statement: DEFAULT ':' . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 343
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 322

  202 labeled_statement: IDENTIFIER ':' . M statement

    $default  reduce using rule 1 (M)

    M  go to state 344


State 323

  205 compound_statement: '{' X . changetable block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 345


State 324

  213 expression_statement: expression ';' .

    $default  reduce using rule 213 (expression_statement)


State 325

  207 block_item_list: block_item_list M . block_item

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item                 go to state 346
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 326

  234 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}' .

    $default  reduce using rule 234 (function_definition)


State 327

  171 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 171 (parameter_type_list)


State 328

  173 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 173 (parameter_list)


State 329

  157 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 157 (direct_declarator)


State 330

   21 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   22                   | '(' type_name ')' '{' initializer_list . ',' '}'
  183 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 347
    ','  shift, and go to state 348


State 331

  183 initializer_list: initializer_list ',' designation_opt initializer .

    $default  reduce using rule 183 (initializer_list)


State 332

   24 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 24 (argument_expression_list)


State 333

   70 conditional_expression: logical_or_expression N '?' M expression . N ':' M conditional_expression
   85 expression: expression . ',' assignment_expression

    ','  shift, and go to state 225

    $default  reduce using rule 6 (N)

    N  go to state 349


State 334

  228 jump_statement: RETURN expression ';' .

    $default  reduce using rule 228 (jump_statement)


State 335

  203 labeled_statement: CASE constant_expression ':' . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 350
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 336

  221 iteration_statement: FOR F '(' . X changetable declaration M expression_statement M expression N ')' M loop_statement
  222                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  223                    | FOR F '(' . X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  224                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 351


State 337

  217 iteration_statement: WHILE W '(' . X changetable M expression ')' M loop_statement
  218                    | WHILE W '(' . X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 352


State 338

  225 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 225 (jump_statement)


State 339

   85 expression: expression . ',' assignment_expression
  214 selection_statement: IF '(' expression . N ')' M statement N
  215                    | IF '(' expression . N ')' M statement N ELSE M statement

    ','  shift, and go to state 225

    $default  reduce using rule 6 (N)

    N  go to state 353


State 340

  220 iteration_statement: DO D '{' . M block_item_list_opt '}' M WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 354


State 341

  219 iteration_statement: DO D M . loop_statement M WHILE '(' expression ')' ';'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    loop_statement             go to state 355
    labeled_statement          go to state 356
    expression_statement       go to state 357
    selection_statement        go to state 358
    iteration_statement        go to state 359
    jump_statement             go to state 360


State 342

   85 expression: expression . ',' assignment_expression
  216 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 361
    ','  shift, and go to state 225


State 343

  204 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 204 (labeled_statement)


State 344

  202 labeled_statement: IDENTIFIER ':' M . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 362
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 345

  205 compound_statement: '{' X changetable . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 209 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 363
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 346

  207 block_item_list: block_item_list M block_item .

    $default  reduce using rule 207 (block_item_list)


State 347

   21 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 21 (postfix_expression)


State 348

   22 postfix_expression: '(' type_name ')' '{' initializer_list ',' . '}'
  183 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 152
    '.'  shift, and go to state 153
    '}'  shift, and go to state 364

    $default  reduce using rule 185 (designation_opt)

    designation_opt  go to state 303
    designation      go to state 156
    designator_list  go to state 157
    designator       go to state 158


State 349

   70 conditional_expression: logical_or_expression N '?' M expression N . ':' M conditional_expression

    ':'  shift, and go to state 365


State 350

  203 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 203 (labeled_statement)


State 351

  221 iteration_statement: FOR F '(' X . changetable declaration M expression_statement M expression N ')' M loop_statement
  222                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M loop_statement
  223                    | FOR F '(' X . changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  224                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 366


State 352

  217 iteration_statement: WHILE W '(' X . changetable M expression ')' M loop_statement
  218                    | WHILE W '(' X . changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 367


State 353

  214 selection_statement: IF '(' expression N . ')' M statement N
  215                    | IF '(' expression N . ')' M statement N ELSE M statement

    ')'  shift, and go to state 368


State 354

  220 iteration_statement: DO D '{' M . block_item_list_opt '}' M WHILE '(' expression ')' ';'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 209 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 369
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 355

  219 iteration_statement: DO D M loop_statement . M WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 370


State 356

  197 loop_statement: labeled_statement .

    $default  reduce using rule 197 (loop_statement)


State 357

  198 loop_statement: expression_statement .

    $default  reduce using rule 198 (loop_statement)


State 358

  199 loop_statement: selection_statement .

    $default  reduce using rule 199 (loop_statement)


State 359

  200 loop_statement: iteration_statement .

    $default  reduce using rule 200 (loop_statement)


State 360

  201 loop_statement: jump_statement .

    $default  reduce using rule 201 (loop_statement)


State 361

  216 selection_statement: SWITCH '(' expression ')' . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 371
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 362

  202 labeled_statement: IDENTIFIER ':' M statement .

    $default  reduce using rule 202 (labeled_statement)


State 363

  205 compound_statement: '{' X changetable block_item_list_opt . '}'

    '}'  shift, and go to state 372


State 364

   22 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 22 (postfix_expression)


State 365

   70 conditional_expression: logical_or_expression N '?' M expression N ':' . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 373


State 366

  221 iteration_statement: FOR F '(' X changetable . declaration M expression_statement M expression N ')' M loop_statement
  222                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M loop_statement
  223                    | FOR F '(' X changetable . declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  224                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 374
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    expression_statement       go to state 375


State 367

  217 iteration_statement: WHILE W '(' X changetable . M expression ')' M loop_statement
  218                    | WHILE W '(' X changetable . M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 376


State 368

  214 selection_statement: IF '(' expression N ')' . M statement N
  215                    | IF '(' expression N ')' . M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 377


State 369

  220 iteration_statement: DO D '{' M block_item_list_opt . '}' M WHILE '(' expression ')' ';'

    '}'  shift, and go to state 378


State 370

  219 iteration_statement: DO D M loop_statement M . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 379


State 371

  216 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 216 (selection_statement)


State 372

  205 compound_statement: '{' X changetable block_item_list_opt '}' .

    $default  reduce using rule 205 (compound_statement)


State 373

   70 conditional_expression: logical_or_expression N '?' M expression N ':' M . conditional_expression

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 177
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 380


State 374

  221 iteration_statement: FOR F '(' X changetable declaration . M expression_statement M expression N ')' M loop_statement
  223                    | FOR F '(' X changetable declaration . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 381


State 375

  222 iteration_statement: FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M loop_statement
  224                    | FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 382


State 376

  217 iteration_statement: WHILE W '(' X changetable M . expression ')' M loop_statement
  218                    | WHILE W '(' X changetable M . expression ')' '{' M block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 383


State 377

  214 selection_statement: IF '(' expression N ')' M . statement N
  215                    | IF '(' expression N ')' M . statement N ELSE M statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 384
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 378

  220 iteration_statement: DO D '{' M block_item_list_opt '}' . M WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 385


State 379

  219 iteration_statement: DO D M loop_statement M WHILE . '(' expression ')' ';'

    '('  shift, and go to state 386


State 380

   70 conditional_expression: logical_or_expression N '?' M expression N ':' M conditional_expression .

    $default  reduce using rule 70 (conditional_expression)


State 381

  221 iteration_statement: FOR F '(' X changetable declaration M . expression_statement M expression N ')' M loop_statement
  223                    | FOR F '(' X changetable declaration M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    expression_statement       go to state 387


State 382

  222 iteration_statement: FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M loop_statement
  224                    | FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    expression_statement       go to state 388


State 383

   85 expression: expression . ',' assignment_expression
  217 iteration_statement: WHILE W '(' X changetable M expression . ')' M loop_statement
  218                    | WHILE W '(' X changetable M expression . ')' '{' M block_item_list_opt '}'

    ')'  shift, and go to state 389
    ','  shift, and go to state 225


State 384

  214 selection_statement: IF '(' expression N ')' M statement . N
  215                    | IF '(' expression N ')' M statement . N ELSE M statement

    $default  reduce using rule 6 (N)

    N  go to state 390


State 385

  220 iteration_statement: DO D '{' M block_item_list_opt '}' M . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 391


State 386

  219 iteration_statement: DO D M loop_statement M WHILE '(' . expression ')' ';'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 392


State 387

  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement . M expression N ')' M loop_statement
  223                    | FOR F '(' X changetable declaration M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 393


State 388

  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M loop_statement
  224                    | FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 394


State 389

  217 iteration_statement: WHILE W '(' X changetable M expression ')' . M loop_statement
  218                    | WHILE W '(' X changetable M expression ')' . '{' M block_item_list_opt '}'

    '{'  shift, and go to state 395

    $default  reduce using rule 1 (M)

    M  go to state 396


State 390

  214 selection_statement: IF '(' expression N ')' M statement N .
  215                    | IF '(' expression N ')' M statement N . ELSE M statement

    ELSE  shift, and go to state 397

    $default  reduce using rule 214 (selection_statement)


State 391

  220 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE . '(' expression ')' ';'

    '('  shift, and go to state 398


State 392

   85 expression: expression . ',' assignment_expression
  219 iteration_statement: DO D M loop_statement M WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 399
    ','  shift, and go to state 225


State 393

  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement M . expression N ')' M loop_statement
  223                    | FOR F '(' X changetable declaration M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 400


State 394

  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M loop_statement
  224                    | FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 401


State 395

  218 iteration_statement: WHILE W '(' X changetable M expression ')' '{' . M block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 402


State 396

  217 iteration_statement: WHILE W '(' X changetable M expression ')' M . loop_statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    loop_statement             go to state 403
    labeled_statement          go to state 356
    expression_statement       go to state 357
    selection_statement        go to state 358
    iteration_statement        go to state 359
    jump_statement             go to state 360


State 397

  215 selection_statement: IF '(' expression N ')' M statement N ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 404


State 398

  220 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' . expression ')' ';'

    SIZEOF         shift, and go to state 85
    IDENTIFIER     shift, and go to state 86
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 405


State 399

  219 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 406


State 400

   85 expression: expression . ',' assignment_expression
  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression . N ')' M loop_statement
  223                    | FOR F '(' X changetable declaration M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    ','  shift, and go to state 225

    $default  reduce using rule 6 (N)

    N  go to state 407


State 401

   85 expression: expression . ',' assignment_expression
  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M loop_statement
  224                    | FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    ','  shift, and go to state 225

    $default  reduce using rule 6 (N)

    N  go to state 408


State 402

  218 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 209 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 409
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 403

  217 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement .

    $default  reduce using rule 217 (iteration_statement)


State 404

  215 selection_statement: IF '(' expression N ')' M statement N ELSE M . statement

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    statement                  go to state 410
    labeled_statement          go to state 277
    compound_statement         go to state 278
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 405

   85 expression: expression . ',' assignment_expression
  220 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 411
    ','  shift, and go to state 225


State 406

  219 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' ';' .

    $default  reduce using rule 219 (iteration_statement)


State 407

  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N . ')' M loop_statement
  223                    | FOR F '(' X changetable declaration M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 412


State 408

  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M loop_statement
  224                    | FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 413


State 409

  218 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt . '}'

    '}'  shift, and go to state 414


State 410

  215 selection_statement: IF '(' expression N ')' M statement N ELSE M statement .

    $default  reduce using rule 215 (selection_statement)


State 411

  220 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 415


State 412

  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' . M loop_statement
  223                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 416


State 413

  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M loop_statement
  224                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 417


State 414

  218 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}' .

    $default  reduce using rule 218 (iteration_statement)


State 415

  220 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';' .

    $default  reduce using rule 220 (iteration_statement)


State 416

  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M . loop_statement
  223                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 418
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    loop_statement             go to state 419
    labeled_statement          go to state 356
    expression_statement       go to state 357
    selection_statement        go to state 358
    iteration_statement        go to state 359
    jump_statement             go to state 360


State 417

  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . loop_statement
  224                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    DEFAULT        shift, and go to state 270
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 420
    ';'            shift, and go to state 273

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    loop_statement             go to state 421
    labeled_statement          go to state 356
    expression_statement       go to state 357
    selection_statement        go to state 358
    iteration_statement        go to state 359
    jump_statement             go to state 360


State 418

  223 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 209 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 422
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 419

  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 221 (iteration_statement)


State 420

  224 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK          shift, and go to state 260
    RETURN         shift, and go to state 261
    CASE           shift, and go to state 262
    FOR            shift, and go to state 263
    WHILE          shift, and go to state 264
    GOTO           shift, and go to state 265
    SIZEOF         shift, and go to state 85
    CONTINUE       shift, and go to state 266
    IF             shift, and go to state 267
    DO             shift, and go to state 268
    SWITCH         shift, and go to state 269
    FLOAT          shift, and go to state 1
    SHORT          shift, and go to state 2
    CHAR           shift, and go to state 3
    _BOOL          shift, and go to state 4
    _IMAGINARY     shift, and go to state 5
    _COMPLEX       shift, and go to state 6
    INT            shift, and go to state 7
    DOUBLE         shift, and go to state 8
    LONG           shift, and go to state 9
    VOID           shift, and go to state 10
    SIGNED         shift, and go to state 11
    AUTO           shift, and go to state 12
    UNSIGNED       shift, and go to state 13
    ENUM           shift, and go to state 14
    UNION          shift, and go to state 15
    STRUCT         shift, and go to state 16
    CONST          shift, and go to state 17
    DEFAULT        shift, and go to state 270
    STATIC         shift, and go to state 18
    REGISTER       shift, and go to state 19
    RESTRICT       shift, and go to state 20
    VOLATILE       shift, and go to state 21
    EXTERN         shift, and go to state 22
    INLINE         shift, and go to state 23
    IDENTIFIER     shift, and go to state 271
    INTEGER_CONST  shift, and go to state 87
    CHAR_CONST     shift, and go to state 88
    FLOAT_CONST    shift, and go to state 89
    PLUS           shift, and go to state 90
    MINUS          shift, and go to state 91
    MULT           shift, and go to state 92
    INCREMENT      shift, and go to state 93
    DECREMENT      shift, and go to state 94
    BITWISE_AND    shift, and go to state 95
    BITWISE_NOT    shift, and go to state 96
    LOGICAL_NOT    shift, and go to state 97
    '('            shift, and go to state 98
    '{'            shift, and go to state 272
    ';'            shift, and go to state 273

    $default  reduce using rule 209 (block_item_list_opt)

    constant                   go to state 100
    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_or_expression    go to state 112
    inclusive_or_expression    go to state 113
    logical_and_expression     go to state 114
    logical_or_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 148
    expression                 go to state 274
    declaration                go to state 275
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 276
    labeled_statement          go to state 277
    compound_statement         go to state 278
    block_item_list            go to state 279
    block_item_list_opt        go to state 423
    block_item                 go to state 281
    expression_statement       go to state 282
    selection_statement        go to state 283
    iteration_statement        go to state 284
    jump_statement             go to state 285


State 421

  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 222 (iteration_statement)


State 422

  223 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 424


State 423

  224 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 425


State 424

  223 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 223 (iteration_statement)


State 425

  224 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 224 (iteration_statement)

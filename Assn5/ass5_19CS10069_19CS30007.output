Terminals unused in grammar

    TYPEDEF
    ENUMERATION_CONST


Grammar

    0 $accept: translation_unit $end

    1 M: %empty

    2 F: %empty

    3 W: %empty

    4 D: %empty

    5 X: %empty

    6 N: %empty

    7 changetable: %empty

    8 primary_expression: IDENTIFIER
    9                   | INTEGER_CONST
   10                   | FLOAT_CONST
   11                   | CHAR_CONST
   12                   | STRING_LITERAL
   13                   | '(' expression ')'

   14 postfix_expression: primary_expression
   15                   | postfix_expression '[' expression ']'
   16                   | postfix_expression '(' argument_expression_list_opt ')'
   17                   | postfix_expression '.' IDENTIFIER
   18                   | postfix_expression ARROW IDENTIFIER
   19                   | postfix_expression INCREMENT
   20                   | postfix_expression DECREMENT
   21                   | '(' type_name ')' '{' initializer_list '}'
   22                   | '(' type_name ')' '{' initializer_list ',' '}'

   23 argument_expression_list: assignment_expression
   24                         | argument_expression_list ',' assignment_expression

   25 argument_expression_list_opt: argument_expression_list
   26                             | %empty

   27 unary_expression: postfix_expression
   28                 | INCREMENT unary_expression
   29                 | DECREMENT unary_expression
   30                 | unary_operator cast_expression
   31                 | SIZEOF unary_expression
   32                 | SIZEOF '(' type_name ')'

   33 unary_operator: BITWISE_AND
   34               | MULT
   35               | PLUS
   36               | MINUS
   37               | BITWISE_NOT
   38               | LOGICAL_NOT

   39 cast_expression: unary_expression
   40                | '(' type_name ')' cast_expression

   41 multiplicative_expression: cast_expression
   42                          | multiplicative_expression MULT cast_expression
   43                          | multiplicative_expression DIVIDE cast_expression
   44                          | multiplicative_expression MODULO cast_expression

   45 additive_expression: multiplicative_expression
   46                    | additive_expression PLUS multiplicative_expression
   47                    | additive_expression MINUS multiplicative_expression

   48 shift_expression: additive_expression
   49                 | shift_expression LSHIFT additive_expression
   50                 | shift_expression RSHIFT additive_expression

   51 relational_expression: shift_expression
   52                      | relational_expression LT shift_expression
   53                      | relational_expression GT shift_expression
   54                      | relational_expression LEQ shift_expression
   55                      | relational_expression GEQ shift_expression

   56 equality_expression: relational_expression
   57                    | equality_expression EQ relational_expression
   58                    | equality_expression NEQ relational_expression

   59 and_expression: equality_expression
   60               | and_expression BITWISE_AND equality_expression

   61 exclusive_OR_expression: and_expression
   62                        | exclusive_OR_expression XOR and_expression

   63 inclusive_OR_expression: exclusive_OR_expression
   64                        | inclusive_OR_expression BITWISE_OR exclusive_OR_expression

   65 logical_AND_expression: inclusive_OR_expression
   66                       | logical_AND_expression LOGICAL_AND M inclusive_OR_expression

   67 logical_OR_expression: logical_AND_expression
   68                      | logical_OR_expression LOGICAL_OR M logical_AND_expression

   69 conditional_expression: logical_OR_expression
   70                       | logical_OR_expression N '?' M expression N ':' M conditional_expression

   71 assignment_expression: conditional_expression
   72                      | unary_expression assignment_operator assignment_expression

   73 assignment_operator: ASGN
   74                    | MULT_ASGN
   75                    | DIV_ASGN
   76                    | MOD_ASGN
   77                    | ADD_ASGN
   78                    | SUB_ASGN
   79                    | LSHIFT_ASGN
   80                    | RSHIFT_ASGN
   81                    | AND_ASGN
   82                    | XOR_ASGN
   83                    | OR_ASGN

   84 expression: assignment_expression
   85           | expression ',' assignment_expression

   86 constant_expression: conditional_expression

   87 declaration: declaration_specifiers init_declarator_list_opt ';'

   88 init_declarator_list_opt: init_declarator_list
   89                         | %empty

   90 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   91                       | type_specifier declaration_specifiers_opt
   92                       | type_qualifier declaration_specifiers_opt
   93                       | function_specifier declaration_specifiers_opt

   94 declaration_specifiers_opt: declaration_specifiers
   95                           | %empty

   96 init_declarator_list: init_declarator
   97                     | init_declarator_list ',' init_declarator

   98 init_declarator: declarator
   99                | declarator ASGN initializer

  100 storage_class_specifier: EXTERN
  101                        | STATIC
  102                        | AUTO
  103                        | REGISTER

  104 type_specifier: VOID
  105               | CHAR
  106               | SHORT
  107               | INT
  108               | LONG
  109               | FLOAT
  110               | DOUBLE
  111               | SIGNED
  112               | UNSIGNED
  113               | _BOOL
  114               | _COMPLEX
  115               | _IMAGINARY
  116               | enum_specifier
  117               | struct_or_union_specifier

  118 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  119                         | type_qualifier specifier_qualifier_list_opt

  120 specifier_qualifier_list_opt: specifier_qualifier_list
  121                             | %empty

  122 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'
  123                          | struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  124                          | struct_or_union IDENTIFIER

  125 struct_or_union: STRUCT
  126                | UNION

  127 struct_declaration_list: struct_declaration
  128                        | struct_declaration_list struct_declaration

  129 struct_declaration: specifier_qualifier_list ';'
  130                   | specifier_qualifier_list struct_declarator_list ';'

  131 struct_declarator_list: struct_declarator
  132                       | struct_declarator_list ',' struct_declarator

  133 struct_declarator: ':' constant_expression
  134                  | declarator ':' constant_expression
  135                  | declarator

  136 enum_specifier: ENUM identifier_opt '{' enumerator_list '}'
  137               | ENUM identifier_opt '{' enumerator_list ',' '}'
  138               | ENUM IDENTIFIER

  139 identifier_opt: IDENTIFIER
  140               | %empty

  141 enumerator_list: enumerator
  142                | enumerator_list ',' enumerator

  143 enumerator: IDENTIFIER
  144           | IDENTIFIER ASGN constant_expression

  145 type_qualifier: CONST
  146               | RESTRICT
  147               | VOLATILE

  148 function_specifier: INLINE

  149 declarator: pointer direct_declarator
  150           | direct_declarator

  151 direct_declarator: IDENTIFIER
  152                  | '(' declarator ')'
  153                  | direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']'
  154                  | direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']'
  155                  | direct_declarator '[' type_qualifier_list STATIC assignment_expression ']'
  156                  | direct_declarator '[' type_qualifier_list_opt MULT ']'
  157                  | direct_declarator '(' changetable parameter_type_list ')'
  158                  | direct_declarator '(' identifier_list ')'
  159                  | direct_declarator '(' changetable ')'

  160 type_qualifier_list_opt: type_qualifier_list
  161                        | %empty

  162 assignment_expression_opt: assignment_expression
  163                          | %empty

  164 pointer: MULT type_qualifier_list_opt
  165        | MULT type_qualifier_list_opt pointer

  166 type_qualifier_list: type_qualifier
  167                    | type_qualifier_list type_qualifier

  168 parameter_type_list: parameter_list
  169                    | parameter_list ',' ELLIPSIS

  170 parameter_list: parameter_declaration
  171               | parameter_list ',' parameter_declaration

  172 parameter_declaration: declaration_specifiers declarator
  173                      | declaration_specifiers

  174 identifier_list: IDENTIFIER
  175                | identifier_list ',' IDENTIFIER

  176 type_name: specifier_qualifier_list

  177 initializer: assignment_expression
  178            | '{' initializer_list '}'
  179            | '{' initializer_list ',' '}'

  180 initializer_list: designation_opt initializer
  181                 | initializer_list ',' designation_opt initializer

  182 designation_opt: designation
  183                | %empty

  184 designation: designator_list ASGN

  185 designator_list: designator
  186                | designator_list designator

  187 designator: '[' constant_expression ']'
  188           | '.' IDENTIFIER

  189 statement: labeled_statement
  190          | compound_statement
  191          | expression_statement
  192          | selection_statement
  193          | iteration_statement
  194          | jump_statement

  195 loop_statement: labeled_statement
  196               | expression_statement
  197               | selection_statement
  198               | iteration_statement
  199               | jump_statement

  200 labeled_statement: IDENTIFIER ':' M statement
  201                  | CASE constant_expression ':' statement
  202                  | DEFAULT ':' statement

  203 compound_statement: '{' X changetable block_item_list_opt '}'

  204 block_item_list: block_item
  205                | block_item_list M block_item

  206 block_item_list_opt: block_item_list
  207                    | %empty

  208 block_item: declaration
  209           | statement

  210 expression_statement: ';'
  211                     | expression ';'

  212 selection_statement: IF '(' expression N ')' M statement N
  213                    | IF '(' expression N ')' M statement N ELSE M statement
  214                    | SWITCH '(' expression ')' statement

  215 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement
  216                    | WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}'
  217                    | DO D M loop_statement M WHILE '(' expression ')' ';'
  218                    | DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';'
  219                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  220                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  221                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  222                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

  223 jump_statement: GOTO IDENTIFIER ';'
  224               | CONTINUE ';'
  225               | BREAK ';'
  226               | RETURN expression ';'
  227               | RETURN ';'

  228 translation_unit: external_declaration
  229                 | translation_unit external_declaration

  230 external_declaration: function_definition
  231                     | declaration

  232 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement

  233 declaration_list_opt: declaration_list
  234                     | %empty

  235 declaration_list: declaration
  236                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 13 16 21 22 32 40 152 157 158 159 212 213 214 215 216 217 218 219 220 221 222
    ')' (41) 13 16 21 22 32 40 152 157 158 159 212 213 214 215 216 217 218 219 220 221 222
    ',' (44) 22 24 85 97 132 137 142 169 171 175 179 181
    '.' (46) 17 188
    ':' (58) 70 133 134 200 201 202
    ';' (59) 87 129 130 210 211 217 218 223 224 225 226 227
    '?' (63) 70
    '[' (91) 15 153 154 155 156 187
    ']' (93) 15 153 154 155 156 187
    '{' (123) 21 22 122 123 136 137 178 179 203 216 218 221 222
    '}' (125) 21 22 122 123 136 137 178 179 203 216 218 221 222
    error (256)
    BREAK (258) 225
    RETURN (259) 226 227
    CASE (260) 201
    FOR (261) 219 220 221 222
    WHILE (262) 215 216 217 218
    GOTO (263) 223
    SIZEOF (264) 31 32
    CONTINUE (265) 224
    IF (266) 212 213
    DO (267) 217 218
    SWITCH (268) 214
    ELSE (269) 213
    FLOAT (270) 109
    SHORT (271) 106
    CHAR (272) 105
    _BOOL (273) 113
    _IMAGINARY (274) 115
    _COMPLEX (275) 114
    INT (276) 107
    DOUBLE (277) 110
    LONG (278) 108
    VOID (279) 104
    SIGNED (280) 111
    AUTO (281) 102
    UNSIGNED (282) 112
    ENUM (283) 136 137 138
    UNION (284) 126
    STRUCT (285) 125
    TYPEDEF (286)
    CONST (287) 145
    DEFAULT (288) 202
    STATIC (289) 101 154 155
    REGISTER (290) 103
    RESTRICT (291) 146
    VOLATILE (292) 147
    EXTERN (293) 100
    INLINE (294) 148
    IDENTIFIER <symp> (295) 8 17 18 123 124 138 139 143 144 151 174 175 188 200 223
    INTEGER_CONST <int_val> (296) 9
    CHAR_CONST <char_val> (297) 11
    FLOAT_CONST <char_val> (298) 10
    STRING_LITERAL <char_val> (299) 12
    PLUS (300) 35 46
    MINUS (301) 36 47
    MULT (302) 34 42 156 164 165
    DIVIDE (303) 43
    ARROW (304) 18
    INCREMENT (305) 19 28
    DECREMENT (306) 20 29
    RSHIFT (307) 50
    LSHIFT (308) 49
    LT (309) 52
    GT (310) 53
    LEQ (311) 54
    GEQ (312) 55
    EQ (313) 57
    NEQ (314) 58
    BITWISE_OR (315) 64
    LOGICAL_OR (316) 68
    BITWISE_AND (317) 33 60
    LOGICAL_AND (318) 66
    XOR (319) 62
    BITWISE_NOT (320) 37
    LOGICAL_NOT (321) 38
    ELLIPSIS (322) 169
    MODULO (323) 44
    ASGN (324) 73 99 144 184
    ENUMERATION_CONST (325)
    ADD_ASGN (326) 77
    SUB_ASGN (327) 78
    MULT_ASGN (328) 74
    DIV_ASGN (329) 75
    MOD_ASGN (330) 76
    LSHIFT_ASGN (331) 79
    RSHIFT_ASGN (332) 80
    AND_ASGN (333) 81
    OR_ASGN (334) 83
    XOR_ASGN (335) 82
    "then" (336)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    M <instr_number> (94)
        on left: 1
        on right: 66 68 70 200 205 212 213 215 216 217 218 219 220 221 222
    F (95)
        on left: 2
        on right: 219 220 221 222
    W (96)
        on left: 3
        on right: 215 216
    D (97)
        on left: 4
        on right: 217 218
    X (98)
        on left: 5
        on right: 203 215 216 219 220 221 222
    N <stat> (99)
        on left: 6
        on right: 70 212 213 219 220 221 222
    changetable (100)
        on left: 7
        on right: 157 159 203 215 216 219 220 221 222
    primary_expression <expr> (101)
        on left: 8 9 10 11 12 13
        on right: 14
    postfix_expression <A> (102)
        on left: 14 15 16 17 18 19 20 21 22
        on right: 15 16 17 18 19 20 27
    argument_expression_list <num_params> (103)
        on left: 23 24
        on right: 24 25
    argument_expression_list_opt <num_params> (104)
        on left: 25 26
        on right: 16
    unary_expression <A> (105)
        on left: 27 28 29 30 31 32
        on right: 28 29 31 39 72
    unary_operator <unaryOp> (106)
        on left: 33 34 35 36 37 38
        on right: 30
    cast_expression <A> (107)
        on left: 39 40
        on right: 30 40 41 42 43 44
    multiplicative_expression <expr> (108)
        on left: 41 42 43 44
        on right: 42 43 44 45 46 47
    additive_expression <expr> (109)
        on left: 45 46 47
        on right: 46 47 48 49 50
    shift_expression <expr> (110)
        on left: 48 49 50
        on right: 49 50 51 52 53 54 55
    relational_expression <expr> (111)
        on left: 51 52 53 54 55
        on right: 52 53 54 55 56 57 58
    equality_expression <expr> (112)
        on left: 56 57 58
        on right: 57 58 59 60
    and_expression <expr> (113)
        on left: 59 60
        on right: 60 61 62
    exclusive_OR_expression <expr> (114)
        on left: 61 62
        on right: 62 63 64
    inclusive_OR_expression <expr> (115)
        on left: 63 64
        on right: 64 65 66
    logical_AND_expression <expr> (116)
        on left: 65 66
        on right: 66 67 68
    logical_OR_expression <expr> (117)
        on left: 67 68
        on right: 68 69 70
    conditional_expression <expr> (118)
        on left: 69 70
        on right: 70 71 86
    assignment_expression <expr> (119)
        on left: 71 72
        on right: 23 24 72 84 85 154 155 162 177
    assignment_operator (120)
        on left: 73 74 75 76 77 78 79 80 81 82 83
        on right: 72
    expression <expr> (121)
        on left: 84 85
        on right: 13 15 70 85 211 212 213 214 215 216 217 218 219 220 221 222 226
    constant_expression (122)
        on left: 86
        on right: 133 134 144 187 201
    declaration (123)
        on left: 87
        on right: 208 219 221 231 235 236
    init_declarator_list_opt (124)
        on left: 88 89
        on right: 87
    declaration_specifiers (125)
        on left: 90 91 92 93
        on right: 87 94 172 173 232
    declaration_specifiers_opt (126)
        on left: 94 95
        on right: 90 91 92 93
    init_declarator_list (127)
        on left: 96 97
        on right: 88 97
    init_declarator <symp> (128)
        on left: 98 99
        on right: 96 97
    storage_class_specifier (129)
        on left: 100 101 102 103
        on right: 90
    type_specifier (130)
        on left: 104 105 106 107 108 109 110 111 112 113 114 115 116 117
        on right: 91 118
    specifier_qualifier_list (131)
        on left: 118 119
        on right: 120 129 130 176
    specifier_qualifier_list_opt (132)
        on left: 120 121
        on right: 118 119
    struct_or_union_specifier (133)
        on left: 122 123 124
        on right: 117
    struct_or_union (134)
        on left: 125 126
        on right: 122 123 124
    struct_declaration_list (135)
        on left: 127 128
        on right: 122 123 128
    struct_declaration (136)
        on left: 129 130
        on right: 127 128
    struct_declarator_list (137)
        on left: 131 132
        on right: 130 132
    struct_declarator (138)
        on left: 133 134 135
        on right: 131 132
    enum_specifier (139)
        on left: 136 137 138
        on right: 116
    identifier_opt (140)
        on left: 139 140
        on right: 136 137
    enumerator_list (141)
        on left: 141 142
        on right: 136 137 142
    enumerator (142)
        on left: 143 144
        on right: 141 142
    type_qualifier (143)
        on left: 145 146 147
        on right: 92 119 166 167
    function_specifier (144)
        on left: 148
        on right: 93
    declarator <symp> (145)
        on left: 149 150
        on right: 98 99 134 135 152 172 232
    direct_declarator <symp> (146)
        on left: 151 152 153 154 155 156 157 158 159
        on right: 149 150 153 154 155 156 157 158 159
    type_qualifier_list_opt (147)
        on left: 160 161
        on right: 153 154 156 164 165
    assignment_expression_opt (148)
        on left: 162 163
        on right: 153
    pointer <sym_type> (149)
        on left: 164 165
        on right: 149 165
    type_qualifier_list (150)
        on left: 166 167
        on right: 155 160 167
    parameter_type_list (151)
        on left: 168 169
        on right: 157
    parameter_list (152)
        on left: 170 171
        on right: 168 169 171
    parameter_declaration (153)
        on left: 172 173
        on right: 170 171
    identifier_list (154)
        on left: 174 175
        on right: 158 175
    type_name (155)
        on left: 176
        on right: 21 22 32 40
    initializer <symp> (156)
        on left: 177 178 179
        on right: 99 180 181
    initializer_list (157)
        on left: 180 181
        on right: 21 22 178 179 181
    designation_opt (158)
        on left: 182 183
        on right: 180 181
    designation (159)
        on left: 184
        on right: 182
    designator_list (160)
        on left: 185 186
        on right: 184 186
    designator (161)
        on left: 187 188
        on right: 185 186
    statement <stat> (162)
        on left: 189 190 191 192 193 194
        on right: 200 201 202 209 212 213 214
    loop_statement <stat> (163)
        on left: 195 196 197 198 199
        on right: 215 217 219 220
    labeled_statement <stat> (164)
        on left: 200 201 202
        on right: 189 195
    compound_statement <stat> (165)
        on left: 203
        on right: 190 232
    block_item_list <stat> (166)
        on left: 204 205
        on right: 205 206
    block_item_list_opt <stat> (167)
        on left: 206 207
        on right: 203 216 218 221 222
    block_item <stat> (168)
        on left: 208 209
        on right: 204 205
    expression_statement <expr> (169)
        on left: 210 211
        on right: 191 196 219 220 221 222
    selection_statement <stat> (170)
        on left: 212 213 214
        on right: 192 197
    iteration_statement <stat> (171)
        on left: 215 216 217 218 219 220 221 222
        on right: 193 198
    jump_statement <stat> (172)
        on left: 223 224 225 226 227
        on right: 194 199
    translation_unit (173)
        on left: 228 229
        on right: 0 229
    external_declaration (174)
        on left: 230 231
        on right: 228 229
    function_definition (175)
        on left: 232
        on right: 230
    declaration_list_opt (176)
        on left: 233 234
        on right: 232
    declaration_list (177)
        on left: 235 236
        on right: 233 236


State 0

    0 $accept: . translation_unit $end

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    translation_unit           go to state 33
    external_declaration       go to state 34
    function_definition        go to state 35


State 1

  109 type_specifier: FLOAT .

    $default  reduce using rule 109 (type_specifier)


State 2

  106 type_specifier: SHORT .

    $default  reduce using rule 106 (type_specifier)


State 3

  105 type_specifier: CHAR .

    $default  reduce using rule 105 (type_specifier)


State 4

  113 type_specifier: _BOOL .

    $default  reduce using rule 113 (type_specifier)


State 5

  115 type_specifier: _IMAGINARY .

    $default  reduce using rule 115 (type_specifier)


State 6

  114 type_specifier: _COMPLEX .

    $default  reduce using rule 114 (type_specifier)


State 7

  107 type_specifier: INT .

    $default  reduce using rule 107 (type_specifier)


State 8

  110 type_specifier: DOUBLE .

    $default  reduce using rule 110 (type_specifier)


State 9

  108 type_specifier: LONG .

    $default  reduce using rule 108 (type_specifier)


State 10

  104 type_specifier: VOID .

    $default  reduce using rule 104 (type_specifier)


State 11

  111 type_specifier: SIGNED .

    $default  reduce using rule 111 (type_specifier)


State 12

  102 storage_class_specifier: AUTO .

    $default  reduce using rule 102 (storage_class_specifier)


State 13

  112 type_specifier: UNSIGNED .

    $default  reduce using rule 112 (type_specifier)


State 14

  136 enum_specifier: ENUM . identifier_opt '{' enumerator_list '}'
  137               | ENUM . identifier_opt '{' enumerator_list ',' '}'
  138               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 140 (identifier_opt)

    identifier_opt  go to state 37


State 15

  126 struct_or_union: UNION .

    $default  reduce using rule 126 (struct_or_union)


State 16

  125 struct_or_union: STRUCT .

    $default  reduce using rule 125 (struct_or_union)


State 17

  145 type_qualifier: CONST .

    $default  reduce using rule 145 (type_qualifier)


State 18

  101 storage_class_specifier: STATIC .

    $default  reduce using rule 101 (storage_class_specifier)


State 19

  103 storage_class_specifier: REGISTER .

    $default  reduce using rule 103 (storage_class_specifier)


State 20

  146 type_qualifier: RESTRICT .

    $default  reduce using rule 146 (type_qualifier)


State 21

  147 type_qualifier: VOLATILE .

    $default  reduce using rule 147 (type_qualifier)


State 22

  100 storage_class_specifier: EXTERN .

    $default  reduce using rule 100 (storage_class_specifier)


State 23

  148 function_specifier: INLINE .

    $default  reduce using rule 148 (function_specifier)


State 24

  231 external_declaration: declaration .

    $default  reduce using rule 231 (external_declaration)


State 25

   87 declaration: declaration_specifiers . init_declarator_list_opt ';'
  232 function_definition: declaration_specifiers . declarator declaration_list_opt compound_statement

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 89 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 44
    direct_declarator         go to state 45
    pointer                   go to state 46


State 26

   90 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 95 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 48
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 27

   91 declaration_specifiers: type_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 95 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 49
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 28

  117 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 117 (type_specifier)


State 29

  122 struct_or_union_specifier: struct_or_union . '{' struct_declaration_list '}'
  123                          | struct_or_union . IDENTIFIER '{' struct_declaration_list '}'
  124                          | struct_or_union . IDENTIFIER

    IDENTIFIER  shift, and go to state 50
    '{'         shift, and go to state 51


State 30

  116 type_specifier: enum_specifier .

    $default  reduce using rule 116 (type_specifier)


State 31

   92 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 95 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 52
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 32

   93 declaration_specifiers: function_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 95 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 53
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 33

    0 $accept: translation_unit . $end
  229 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 54
    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    external_declaration       go to state 55
    function_definition        go to state 35


State 34

  228 translation_unit: external_declaration .

    $default  reduce using rule 228 (translation_unit)


State 35

  230 external_declaration: function_definition .

    $default  reduce using rule 230 (external_declaration)


State 36

  138 enum_specifier: ENUM IDENTIFIER .
  139 identifier_opt: IDENTIFIER .

    '{'       reduce using rule 139 (identifier_opt)
    $default  reduce using rule 138 (enum_specifier)


State 37

  136 enum_specifier: ENUM identifier_opt . '{' enumerator_list '}'
  137               | ENUM identifier_opt . '{' enumerator_list ',' '}'

    '{'  shift, and go to state 56


State 38

  151 direct_declarator: IDENTIFIER .

    $default  reduce using rule 151 (direct_declarator)


State 39

  164 pointer: MULT . type_qualifier_list_opt
  165        | MULT . type_qualifier_list_opt pointer

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 161 (type_qualifier_list_opt)

    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 58
    type_qualifier_list      go to state 59


State 40

  152 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    declarator         go to state 60
    direct_declarator  go to state 45
    pointer            go to state 46


State 41

   87 declaration: declaration_specifiers init_declarator_list_opt . ';'

    ';'  shift, and go to state 61


State 42

   88 init_declarator_list_opt: init_declarator_list .
   97 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 62

    $default  reduce using rule 88 (init_declarator_list_opt)


State 43

   96 init_declarator_list: init_declarator .

    $default  reduce using rule 96 (init_declarator_list)


State 44

   98 init_declarator: declarator .
   99                | declarator . ASGN initializer
  232 function_definition: declaration_specifiers declarator . declaration_list_opt compound_statement

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ASGN        shift, and go to state 63

    '{'       reduce using rule 234 (declaration_list_opt)
    $default  reduce using rule 98 (init_declarator)

    declaration                go to state 64
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    declaration_list_opt       go to state 66
    declaration_list           go to state 67


State 45

  150 declarator: direct_declarator .
  153 direct_declarator: direct_declarator . '[' type_qualifier_list_opt assignment_expression_opt ']'
  154                  | direct_declarator . '[' STATIC type_qualifier_list_opt assignment_expression ']'
  155                  | direct_declarator . '[' type_qualifier_list STATIC assignment_expression ']'
  156                  | direct_declarator . '[' type_qualifier_list_opt MULT ']'
  157                  | direct_declarator . '(' changetable parameter_type_list ')'
  158                  | direct_declarator . '(' identifier_list ')'
  159                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 68
    '['  shift, and go to state 69

    $default  reduce using rule 150 (declarator)


State 46

  149 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 38
    '('         shift, and go to state 40

    direct_declarator  go to state 70


State 47

   94 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 94 (declaration_specifiers_opt)


State 48

   90 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 90 (declaration_specifiers)


State 49

   91 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 91 (declaration_specifiers)


State 50

  123 struct_or_union_specifier: struct_or_union IDENTIFIER . '{' struct_declaration_list '}'
  124                          | struct_or_union IDENTIFIER .

    '{'  shift, and go to state 71

    $default  reduce using rule 124 (struct_or_union_specifier)


State 51

  122 struct_or_union_specifier: struct_or_union '{' . struct_declaration_list '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 74
    struct_declaration         go to state 75
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 52

   92 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 92 (declaration_specifiers)


State 53

   93 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 93 (declaration_specifiers)


State 54

    0 $accept: translation_unit $end .

    $default  accept


State 55

  229 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 229 (translation_unit)


State 56

  136 enum_specifier: ENUM identifier_opt '{' . enumerator_list '}'
  137               | ENUM identifier_opt '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 77

    enumerator_list  go to state 78
    enumerator       go to state 79


State 57

  166 type_qualifier_list: type_qualifier .

    $default  reduce using rule 166 (type_qualifier_list)


State 58

  164 pointer: MULT type_qualifier_list_opt .
  165        | MULT type_qualifier_list_opt . pointer

    MULT  shift, and go to state 39

    $default  reduce using rule 164 (pointer)

    pointer  go to state 80


State 59

  160 type_qualifier_list_opt: type_qualifier_list .
  167 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 160 (type_qualifier_list_opt)

    type_qualifier  go to state 81


State 60

  152 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 82


State 61

   87 declaration: declaration_specifiers init_declarator_list_opt ';' .

    $default  reduce using rule 87 (declaration)


State 62

   97 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    init_declarator    go to state 83
    declarator         go to state 84
    direct_declarator  go to state 45
    pointer            go to state 46


State 63

   99 init_declarator: declarator ASGN . initializer

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 100

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    initializer                go to state 118


State 64

  235 declaration_list: declaration .

    $default  reduce using rule 235 (declaration_list)


State 65

   87 declaration: declaration_specifiers . init_declarator_list_opt ';'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 89 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 84
    direct_declarator         go to state 45
    pointer                   go to state 46


State 66

  232 function_definition: declaration_specifiers declarator declaration_list_opt . compound_statement

    '{'  shift, and go to state 119

    compound_statement  go to state 120


State 67

  233 declaration_list_opt: declaration_list .
  236 declaration_list: declaration_list . declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 233 (declaration_list_opt)

    declaration                go to state 121
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32


State 68

  157 direct_declarator: direct_declarator '(' . changetable parameter_type_list ')'
  158                  | direct_declarator '(' . identifier_list ')'
  159                  | direct_declarator '(' . changetable ')'

    IDENTIFIER  shift, and go to state 122

    $default  reduce using rule 7 (changetable)

    changetable      go to state 123
    identifier_list  go to state 124


State 69

  153 direct_declarator: direct_declarator '[' . type_qualifier_list_opt assignment_expression_opt ']'
  154                  | direct_declarator '[' . STATIC type_qualifier_list_opt assignment_expression ']'
  155                  | direct_declarator '[' . type_qualifier_list STATIC assignment_expression ']'
  156                  | direct_declarator '[' . type_qualifier_list_opt MULT ']'

    CONST     shift, and go to state 17
    STATIC    shift, and go to state 125
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 161 (type_qualifier_list_opt)

    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 126
    type_qualifier_list      go to state 127


State 70

  149 declarator: pointer direct_declarator .
  153 direct_declarator: direct_declarator . '[' type_qualifier_list_opt assignment_expression_opt ']'
  154                  | direct_declarator . '[' STATIC type_qualifier_list_opt assignment_expression ']'
  155                  | direct_declarator . '[' type_qualifier_list STATIC assignment_expression ']'
  156                  | direct_declarator . '[' type_qualifier_list_opt MULT ']'
  157                  | direct_declarator . '(' changetable parameter_type_list ')'
  158                  | direct_declarator . '(' identifier_list ')'
  159                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 68
    '['  shift, and go to state 69

    $default  reduce using rule 149 (declarator)


State 71

  123 struct_or_union_specifier: struct_or_union IDENTIFIER '{' . struct_declaration_list '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 128
    struct_declaration         go to state 75
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 72

  118 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    $default  reduce using rule 121 (specifier_qualifier_list_opt)

    type_specifier                go to state 72
    specifier_qualifier_list      go to state 129
    specifier_qualifier_list_opt  go to state 130
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 76


State 73

  129 struct_declaration: specifier_qualifier_list . ';'
  130                   | specifier_qualifier_list . struct_declarator_list ';'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40
    ':'         shift, and go to state 131
    ';'         shift, and go to state 132

    struct_declarator_list  go to state 133
    struct_declarator       go to state 134
    declarator              go to state 135
    direct_declarator       go to state 45
    pointer                 go to state 46


State 74

  122 struct_or_union_specifier: struct_or_union '{' struct_declaration_list . '}'
  128 struct_declaration_list: struct_declaration_list . struct_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    '}'         shift, and go to state 136

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 137
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 75

  127 struct_declaration_list: struct_declaration .

    $default  reduce using rule 127 (struct_declaration_list)


State 76

  119 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    $default  reduce using rule 121 (specifier_qualifier_list_opt)

    type_specifier                go to state 72
    specifier_qualifier_list      go to state 129
    specifier_qualifier_list_opt  go to state 138
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 76


State 77

  143 enumerator: IDENTIFIER .
  144           | IDENTIFIER . ASGN constant_expression

    ASGN  shift, and go to state 139

    $default  reduce using rule 143 (enumerator)


State 78

  136 enum_specifier: ENUM identifier_opt '{' enumerator_list . '}'
  137               | ENUM identifier_opt '{' enumerator_list . ',' '}'
  142 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 140
    ','  shift, and go to state 141


State 79

  141 enumerator_list: enumerator .

    $default  reduce using rule 141 (enumerator_list)


State 80

  165 pointer: MULT type_qualifier_list_opt pointer .

    $default  reduce using rule 165 (pointer)


State 81

  167 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 167 (type_qualifier_list)


State 82

  152 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 152 (direct_declarator)


State 83

   97 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 97 (init_declarator_list)


State 84

   98 init_declarator: declarator .
   99                | declarator . ASGN initializer

    ASGN  shift, and go to state 63

    $default  reduce using rule 98 (init_declarator)


State 85

   31 unary_expression: SIZEOF . unary_expression
   32                 | SIZEOF . '(' type_name ')'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 142

    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 143
    unary_operator      go to state 104


State 86

    8 primary_expression: IDENTIFIER .

    $default  reduce using rule 8 (primary_expression)


State 87

    9 primary_expression: INTEGER_CONST .

    $default  reduce using rule 9 (primary_expression)


State 88

   11 primary_expression: CHAR_CONST .

    $default  reduce using rule 11 (primary_expression)


State 89

   10 primary_expression: FLOAT_CONST .

    $default  reduce using rule 10 (primary_expression)


State 90

   12 primary_expression: STRING_LITERAL .

    $default  reduce using rule 12 (primary_expression)


State 91

   35 unary_operator: PLUS .

    $default  reduce using rule 35 (unary_operator)


State 92

   36 unary_operator: MINUS .

    $default  reduce using rule 36 (unary_operator)


State 93

   34 unary_operator: MULT .

    $default  reduce using rule 34 (unary_operator)


State 94

   28 unary_expression: INCREMENT . unary_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 144

    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 145
    unary_operator      go to state 104


State 95

   29 unary_expression: DECREMENT . unary_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 144

    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 146
    unary_operator      go to state 104


State 96

   33 unary_operator: BITWISE_AND .

    $default  reduce using rule 33 (unary_operator)


State 97

   37 unary_operator: BITWISE_NOT .

    $default  reduce using rule 37 (unary_operator)


State 98

   38 unary_operator: LOGICAL_NOT .

    $default  reduce using rule 38 (unary_operator)


State 99

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list ',' '}'
   40 cast_expression: '(' . type_name ')' cast_expression

    SIZEOF          shift, and go to state 85
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 148
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 149
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 150


State 100

  178 initializer: '{' . initializer_list '}'
  179            | '{' . initializer_list ',' '}'

    '['  shift, and go to state 151
    '.'  shift, and go to state 152

    $default  reduce using rule 183 (designation_opt)

    initializer_list  go to state 153
    designation_opt   go to state 154
    designation       go to state 155
    designator_list   go to state 156
    designator        go to state 157


State 101

   14 postfix_expression: primary_expression .

    $default  reduce using rule 14 (postfix_expression)


State 102

   15 postfix_expression: postfix_expression . '[' expression ']'
   16                   | postfix_expression . '(' argument_expression_list_opt ')'
   17                   | postfix_expression . '.' IDENTIFIER
   18                   | postfix_expression . ARROW IDENTIFIER
   19                   | postfix_expression . INCREMENT
   20                   | postfix_expression . DECREMENT
   27 unary_expression: postfix_expression .

    ARROW      shift, and go to state 158
    INCREMENT  shift, and go to state 159
    DECREMENT  shift, and go to state 160
    '('        shift, and go to state 161
    '['        shift, and go to state 162
    '.'        shift, and go to state 163

    $default  reduce using rule 27 (unary_expression)


State 103

   39 cast_expression: unary_expression .
   72 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASGN         shift, and go to state 164
    ADD_ASGN     shift, and go to state 165
    SUB_ASGN     shift, and go to state 166
    MULT_ASGN    shift, and go to state 167
    DIV_ASGN     shift, and go to state 168
    MOD_ASGN     shift, and go to state 169
    LSHIFT_ASGN  shift, and go to state 170
    RSHIFT_ASGN  shift, and go to state 171
    AND_ASGN     shift, and go to state 172
    OR_ASGN      shift, and go to state 173
    XOR_ASGN     shift, and go to state 174

    $default  reduce using rule 39 (cast_expression)

    assignment_operator  go to state 175


State 104

   30 unary_expression: unary_operator . cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 176
    unary_operator      go to state 104
    cast_expression     go to state 177


State 105

   41 multiplicative_expression: cast_expression .

    $default  reduce using rule 41 (multiplicative_expression)


State 106

   42 multiplicative_expression: multiplicative_expression . MULT cast_expression
   43                          | multiplicative_expression . DIVIDE cast_expression
   44                          | multiplicative_expression . MODULO cast_expression
   45 additive_expression: multiplicative_expression .

    MULT    shift, and go to state 178
    DIVIDE  shift, and go to state 179
    MODULO  shift, and go to state 180

    $default  reduce using rule 45 (additive_expression)


State 107

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   48 shift_expression: additive_expression .

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182

    $default  reduce using rule 48 (shift_expression)


State 108

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   51 relational_expression: shift_expression .

    RSHIFT  shift, and go to state 183
    LSHIFT  shift, and go to state 184

    $default  reduce using rule 51 (relational_expression)


State 109

   52 relational_expression: relational_expression . LT shift_expression
   53                      | relational_expression . GT shift_expression
   54                      | relational_expression . LEQ shift_expression
   55                      | relational_expression . GEQ shift_expression
   56 equality_expression: relational_expression .

    LT   shift, and go to state 185
    GT   shift, and go to state 186
    LEQ  shift, and go to state 187
    GEQ  shift, and go to state 188

    $default  reduce using rule 56 (equality_expression)


State 110

   57 equality_expression: equality_expression . EQ relational_expression
   58                    | equality_expression . NEQ relational_expression
   59 and_expression: equality_expression .

    EQ   shift, and go to state 189
    NEQ  shift, and go to state 190

    $default  reduce using rule 59 (and_expression)


State 111

   60 and_expression: and_expression . BITWISE_AND equality_expression
   61 exclusive_OR_expression: and_expression .

    BITWISE_AND  shift, and go to state 191

    $default  reduce using rule 61 (exclusive_OR_expression)


State 112

   62 exclusive_OR_expression: exclusive_OR_expression . XOR and_expression
   63 inclusive_OR_expression: exclusive_OR_expression .

    XOR  shift, and go to state 192

    $default  reduce using rule 63 (inclusive_OR_expression)


State 113

   64 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   65 logical_AND_expression: inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 193

    $default  reduce using rule 65 (logical_AND_expression)


State 114

   66 logical_AND_expression: logical_AND_expression . LOGICAL_AND M inclusive_OR_expression
   67 logical_OR_expression: logical_AND_expression .

    LOGICAL_AND  shift, and go to state 194

    $default  reduce using rule 67 (logical_OR_expression)


State 115

   68 logical_OR_expression: logical_OR_expression . LOGICAL_OR M logical_AND_expression
   69 conditional_expression: logical_OR_expression .
   70                       | logical_OR_expression . N '?' M expression N ':' M conditional_expression

    LOGICAL_OR  shift, and go to state 195

    '?'       reduce using rule 6 (N)
    $default  reduce using rule 69 (conditional_expression)

    N  go to state 196


State 116

   71 assignment_expression: conditional_expression .

    $default  reduce using rule 71 (assignment_expression)


State 117

  177 initializer: assignment_expression .

    $default  reduce using rule 177 (initializer)


State 118

   99 init_declarator: declarator ASGN initializer .

    $default  reduce using rule 99 (init_declarator)


State 119

  203 compound_statement: '{' . X changetable block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 197


State 120

  232 function_definition: declaration_specifiers declarator declaration_list_opt compound_statement .

    $default  reduce using rule 232 (function_definition)


State 121

  236 declaration_list: declaration_list declaration .

    $default  reduce using rule 236 (declaration_list)


State 122

  174 identifier_list: IDENTIFIER .

    $default  reduce using rule 174 (identifier_list)


State 123

  157 direct_declarator: direct_declarator '(' changetable . parameter_type_list ')'
  159                  | direct_declarator '(' changetable . ')'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ')'         shift, and go to state 198

    declaration_specifiers     go to state 199
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_type_list        go to state 200
    parameter_list             go to state 201
    parameter_declaration      go to state 202


State 124

  158 direct_declarator: direct_declarator '(' identifier_list . ')'
  175 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 203
    ','  shift, and go to state 204


State 125

  154 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list_opt assignment_expression ']'

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 161 (type_qualifier_list_opt)

    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 205
    type_qualifier_list      go to state 59


State 126

  153 direct_declarator: direct_declarator '[' type_qualifier_list_opt . assignment_expression_opt ']'
  156                  | direct_declarator '[' type_qualifier_list_opt . MULT ']'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 206
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    $default  reduce using rule 163 (assignment_expression_opt)

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 207
    assignment_expression_opt  go to state 208


State 127

  155 direct_declarator: direct_declarator '[' type_qualifier_list . STATIC assignment_expression ']'
  160 type_qualifier_list_opt: type_qualifier_list .
  167 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 17
    STATIC    shift, and go to state 209
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 160 (type_qualifier_list_opt)

    type_qualifier  go to state 81


State 128

  123 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list . '}'
  128 struct_declaration_list: struct_declaration_list . struct_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    '}'         shift, and go to state 210

    type_specifier             go to state 72
    specifier_qualifier_list   go to state 73
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 137
    enum_specifier             go to state 30
    type_qualifier             go to state 76


State 129

  120 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 120 (specifier_qualifier_list_opt)


State 130

  118 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 118 (specifier_qualifier_list)


State 131

  133 struct_declarator: ':' . constant_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 211
    constant_expression        go to state 212


State 132

  129 struct_declaration: specifier_qualifier_list ';' .

    $default  reduce using rule 129 (struct_declaration)


State 133

  130 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
  132 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 213
    ';'  shift, and go to state 214


State 134

  131 struct_declarator_list: struct_declarator .

    $default  reduce using rule 131 (struct_declarator_list)


State 135

  134 struct_declarator: declarator . ':' constant_expression
  135                  | declarator .

    ':'  shift, and go to state 215

    $default  reduce using rule 135 (struct_declarator)


State 136

  122 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' .

    $default  reduce using rule 122 (struct_or_union_specifier)


State 137

  128 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 128 (struct_declaration_list)


State 138

  119 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 119 (specifier_qualifier_list)


State 139

  144 enumerator: IDENTIFIER ASGN . constant_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 211
    constant_expression        go to state 216


State 140

  136 enum_specifier: ENUM identifier_opt '{' enumerator_list '}' .

    $default  reduce using rule 136 (enum_specifier)


State 141

  137 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' . '}'
  142 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 77
    '}'         shift, and go to state 217

    enumerator  go to state 218


State 142

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list ',' '}'
   32 unary_expression: SIZEOF '(' . type_name ')'

    SIZEOF          shift, and go to state 85
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 148
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 149
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 219


State 143

   31 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 31 (unary_expression)


State 144

   13 primary_expression: '(' . expression ')'
   21 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   22                   | '(' . type_name ')' '{' initializer_list ',' '}'

    SIZEOF          shift, and go to state 85
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 148
    type_specifier             go to state 72
    specifier_qualifier_list   go to state 149
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 76
    type_name                  go to state 220


State 145

   28 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 28 (unary_expression)


State 146

   29 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 29 (unary_expression)


State 147

   84 expression: assignment_expression .

    $default  reduce using rule 84 (expression)


State 148

   13 primary_expression: '(' expression . ')'
   85 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 221
    ','  shift, and go to state 222


State 149

  176 type_name: specifier_qualifier_list .

    $default  reduce using rule 176 (type_name)


State 150

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list ',' '}'
   40 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 223


State 151

  187 designator: '[' . constant_expression ']'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 211
    constant_expression        go to state 224


State 152

  188 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 225


State 153

  178 initializer: '{' initializer_list . '}'
  179            | '{' initializer_list . ',' '}'
  181 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 226
    ','  shift, and go to state 227


State 154

  180 initializer_list: designation_opt . initializer

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 100

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    initializer                go to state 228


State 155

  182 designation_opt: designation .

    $default  reduce using rule 182 (designation_opt)


State 156

  184 designation: designator_list . ASGN
  186 designator_list: designator_list . designator

    ASGN  shift, and go to state 229
    '['   shift, and go to state 151
    '.'   shift, and go to state 152

    designator  go to state 230


State 157

  185 designator_list: designator .

    $default  reduce using rule 185 (designator_list)


State 158

   18 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 231


State 159

   19 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 19 (postfix_expression)


State 160

   20 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 20 (postfix_expression)


State 161

   16 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    $default  reduce using rule 26 (argument_expression_list_opt)

    primary_expression            go to state 101
    postfix_expression            go to state 102
    argument_expression_list      go to state 232
    argument_expression_list_opt  go to state 233
    unary_expression              go to state 103
    unary_operator                go to state 104
    cast_expression               go to state 105
    multiplicative_expression     go to state 106
    additive_expression           go to state 107
    shift_expression              go to state 108
    relational_expression         go to state 109
    equality_expression           go to state 110
    and_expression                go to state 111
    exclusive_OR_expression       go to state 112
    inclusive_OR_expression       go to state 113
    logical_AND_expression        go to state 114
    logical_OR_expression         go to state 115
    conditional_expression        go to state 116
    assignment_expression         go to state 234


State 162

   15 postfix_expression: postfix_expression '[' . expression ']'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 235


State 163

   17 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 236


State 164

   73 assignment_operator: ASGN .

    $default  reduce using rule 73 (assignment_operator)


State 165

   77 assignment_operator: ADD_ASGN .

    $default  reduce using rule 77 (assignment_operator)


State 166

   78 assignment_operator: SUB_ASGN .

    $default  reduce using rule 78 (assignment_operator)


State 167

   74 assignment_operator: MULT_ASGN .

    $default  reduce using rule 74 (assignment_operator)


State 168

   75 assignment_operator: DIV_ASGN .

    $default  reduce using rule 75 (assignment_operator)


State 169

   76 assignment_operator: MOD_ASGN .

    $default  reduce using rule 76 (assignment_operator)


State 170

   79 assignment_operator: LSHIFT_ASGN .

    $default  reduce using rule 79 (assignment_operator)


State 171

   80 assignment_operator: RSHIFT_ASGN .

    $default  reduce using rule 80 (assignment_operator)


State 172

   81 assignment_operator: AND_ASGN .

    $default  reduce using rule 81 (assignment_operator)


State 173

   83 assignment_operator: OR_ASGN .

    $default  reduce using rule 83 (assignment_operator)


State 174

   82 assignment_operator: XOR_ASGN .

    $default  reduce using rule 82 (assignment_operator)


State 175

   72 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 237


State 176

   39 cast_expression: unary_expression .

    $default  reduce using rule 39 (cast_expression)


State 177

   30 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 30 (unary_expression)


State 178

   42 multiplicative_expression: multiplicative_expression MULT . cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 176
    unary_operator      go to state 104
    cast_expression     go to state 238


State 179

   43 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 176
    unary_operator      go to state 104
    cast_expression     go to state 239


State 180

   44 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 176
    unary_operator      go to state 104
    cast_expression     go to state 240


State 181

   46 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 241


State 182

   47 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 242


State 183

   50 shift_expression: shift_expression RSHIFT . additive_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 243


State 184

   49 shift_expression: shift_expression LSHIFT . additive_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 244


State 185

   52 relational_expression: relational_expression LT . shift_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 245


State 186

   53 relational_expression: relational_expression GT . shift_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 246


State 187

   54 relational_expression: relational_expression LEQ . shift_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 247


State 188

   55 relational_expression: relational_expression GEQ . shift_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 248


State 189

   57 equality_expression: equality_expression EQ . relational_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 249


State 190

   58 equality_expression: equality_expression NEQ . relational_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 250


State 191

   60 and_expression: and_expression BITWISE_AND . equality_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 251


State 192

   62 exclusive_OR_expression: exclusive_OR_expression XOR . and_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 252


State 193

   64 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR . exclusive_OR_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 253


State 194

   66 logical_AND_expression: logical_AND_expression LOGICAL_AND . M inclusive_OR_expression

    $default  reduce using rule 1 (M)

    M  go to state 254


State 195

   68 logical_OR_expression: logical_OR_expression LOGICAL_OR . M logical_AND_expression

    $default  reduce using rule 1 (M)

    M  go to state 255


State 196

   70 conditional_expression: logical_OR_expression N . '?' M expression N ':' M conditional_expression

    '?'  shift, and go to state 256


State 197

  203 compound_statement: '{' X . changetable block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 257


State 198

  159 direct_declarator: direct_declarator '(' changetable ')' .

    $default  reduce using rule 159 (direct_declarator)


State 199

  172 parameter_declaration: declaration_specifiers . declarator
  173                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 173 (parameter_declaration)

    declarator         go to state 258
    direct_declarator  go to state 45
    pointer            go to state 46


State 200

  157 direct_declarator: direct_declarator '(' changetable parameter_type_list . ')'

    ')'  shift, and go to state 259


State 201

  168 parameter_type_list: parameter_list .
  169                    | parameter_list . ',' ELLIPSIS
  171 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 260

    $default  reduce using rule 168 (parameter_type_list)


State 202

  170 parameter_list: parameter_declaration .

    $default  reduce using rule 170 (parameter_list)


State 203

  158 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 158 (direct_declarator)


State 204

  175 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 261


State 205

  154 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt . assignment_expression ']'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 262


State 206

   34 unary_operator: MULT .
  156 direct_declarator: direct_declarator '[' type_qualifier_list_opt MULT . ']'

    ']'  shift, and go to state 263

    $default  reduce using rule 34 (unary_operator)


State 207

  162 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 162 (assignment_expression_opt)


State 208

  153 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt . ']'

    ']'  shift, and go to state 264


State 209

  155 direct_declarator: direct_declarator '[' type_qualifier_list STATIC . assignment_expression ']'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 265


State 210

  123 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 123 (struct_or_union_specifier)


State 211

   86 constant_expression: conditional_expression .

    $default  reduce using rule 86 (constant_expression)


State 212

  133 struct_declarator: ':' constant_expression .

    $default  reduce using rule 133 (struct_declarator)


State 213

  132 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40
    ':'         shift, and go to state 131

    struct_declarator  go to state 266
    declarator         go to state 135
    direct_declarator  go to state 45
    pointer            go to state 46


State 214

  130 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 130 (struct_declaration)


State 215

  134 struct_declarator: declarator ':' . constant_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 211
    constant_expression        go to state 267


State 216

  144 enumerator: IDENTIFIER ASGN constant_expression .

    $default  reduce using rule 144 (enumerator)


State 217

  137 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' '}' .

    $default  reduce using rule 137 (enum_specifier)


State 218

  142 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 142 (enumerator_list)


State 219

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list ',' '}'
   32 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 268


State 220

   21 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   22                   | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 269


State 221

   13 primary_expression: '(' expression ')' .

    $default  reduce using rule 13 (primary_expression)


State 222

   85 expression: expression ',' . assignment_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 270


State 223

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list ',' '}'
   40 cast_expression: '(' type_name ')' . cast_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 271

    primary_expression  go to state 101
    postfix_expression  go to state 102
    unary_expression    go to state 176
    unary_operator      go to state 104
    cast_expression     go to state 272


State 224

  187 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 273


State 225

  188 designator: '.' IDENTIFIER .

    $default  reduce using rule 188 (designator)


State 226

  178 initializer: '{' initializer_list '}' .

    $default  reduce using rule 178 (initializer)


State 227

  179 initializer: '{' initializer_list ',' . '}'
  181 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 151
    '.'  shift, and go to state 152
    '}'  shift, and go to state 274

    $default  reduce using rule 183 (designation_opt)

    designation_opt  go to state 275
    designation      go to state 155
    designator_list  go to state 156
    designator       go to state 157


State 228

  180 initializer_list: designation_opt initializer .

    $default  reduce using rule 180 (initializer_list)


State 229

  184 designation: designator_list ASGN .

    $default  reduce using rule 184 (designation)


State 230

  186 designator_list: designator_list designator .

    $default  reduce using rule 186 (designator_list)


State 231

   18 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 18 (postfix_expression)


State 232

   24 argument_expression_list: argument_expression_list . ',' assignment_expression
   25 argument_expression_list_opt: argument_expression_list .

    ','  shift, and go to state 276

    $default  reduce using rule 25 (argument_expression_list_opt)


State 233

   16 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 277


State 234

   23 argument_expression_list: assignment_expression .

    $default  reduce using rule 23 (argument_expression_list)


State 235

   15 postfix_expression: postfix_expression '[' expression . ']'
   85 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 278
    ','  shift, and go to state 222


State 236

   17 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 17 (postfix_expression)


State 237

   72 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 72 (assignment_expression)


State 238

   42 multiplicative_expression: multiplicative_expression MULT cast_expression .

    $default  reduce using rule 42 (multiplicative_expression)


State 239

   43 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 43 (multiplicative_expression)


State 240

   44 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 44 (multiplicative_expression)


State 241

   42 multiplicative_expression: multiplicative_expression . MULT cast_expression
   43                          | multiplicative_expression . DIVIDE cast_expression
   44                          | multiplicative_expression . MODULO cast_expression
   46 additive_expression: additive_expression PLUS multiplicative_expression .

    MULT    shift, and go to state 178
    DIVIDE  shift, and go to state 179
    MODULO  shift, and go to state 180

    $default  reduce using rule 46 (additive_expression)


State 242

   42 multiplicative_expression: multiplicative_expression . MULT cast_expression
   43                          | multiplicative_expression . DIVIDE cast_expression
   44                          | multiplicative_expression . MODULO cast_expression
   47 additive_expression: additive_expression MINUS multiplicative_expression .

    MULT    shift, and go to state 178
    DIVIDE  shift, and go to state 179
    MODULO  shift, and go to state 180

    $default  reduce using rule 47 (additive_expression)


State 243

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   50 shift_expression: shift_expression RSHIFT additive_expression .

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182

    $default  reduce using rule 50 (shift_expression)


State 244

   46 additive_expression: additive_expression . PLUS multiplicative_expression
   47                    | additive_expression . MINUS multiplicative_expression
   49 shift_expression: shift_expression LSHIFT additive_expression .

    PLUS   shift, and go to state 181
    MINUS  shift, and go to state 182

    $default  reduce using rule 49 (shift_expression)


State 245

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   52 relational_expression: relational_expression LT shift_expression .

    RSHIFT  shift, and go to state 183
    LSHIFT  shift, and go to state 184

    $default  reduce using rule 52 (relational_expression)


State 246

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   53 relational_expression: relational_expression GT shift_expression .

    RSHIFT  shift, and go to state 183
    LSHIFT  shift, and go to state 184

    $default  reduce using rule 53 (relational_expression)


State 247

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   54 relational_expression: relational_expression LEQ shift_expression .

    RSHIFT  shift, and go to state 183
    LSHIFT  shift, and go to state 184

    $default  reduce using rule 54 (relational_expression)


State 248

   49 shift_expression: shift_expression . LSHIFT additive_expression
   50                 | shift_expression . RSHIFT additive_expression
   55 relational_expression: relational_expression GEQ shift_expression .

    RSHIFT  shift, and go to state 183
    LSHIFT  shift, and go to state 184

    $default  reduce using rule 55 (relational_expression)


State 249

   52 relational_expression: relational_expression . LT shift_expression
   53                      | relational_expression . GT shift_expression
   54                      | relational_expression . LEQ shift_expression
   55                      | relational_expression . GEQ shift_expression
   57 equality_expression: equality_expression EQ relational_expression .

    LT   shift, and go to state 185
    GT   shift, and go to state 186
    LEQ  shift, and go to state 187
    GEQ  shift, and go to state 188

    $default  reduce using rule 57 (equality_expression)


State 250

   52 relational_expression: relational_expression . LT shift_expression
   53                      | relational_expression . GT shift_expression
   54                      | relational_expression . LEQ shift_expression
   55                      | relational_expression . GEQ shift_expression
   58 equality_expression: equality_expression NEQ relational_expression .

    LT   shift, and go to state 185
    GT   shift, and go to state 186
    LEQ  shift, and go to state 187
    GEQ  shift, and go to state 188

    $default  reduce using rule 58 (equality_expression)


State 251

   57 equality_expression: equality_expression . EQ relational_expression
   58                    | equality_expression . NEQ relational_expression
   60 and_expression: and_expression BITWISE_AND equality_expression .

    EQ   shift, and go to state 189
    NEQ  shift, and go to state 190

    $default  reduce using rule 60 (and_expression)


State 252

   60 and_expression: and_expression . BITWISE_AND equality_expression
   62 exclusive_OR_expression: exclusive_OR_expression XOR and_expression .

    BITWISE_AND  shift, and go to state 191

    $default  reduce using rule 62 (exclusive_OR_expression)


State 253

   62 exclusive_OR_expression: exclusive_OR_expression . XOR and_expression
   64 inclusive_OR_expression: inclusive_OR_expression BITWISE_OR exclusive_OR_expression .

    XOR  shift, and go to state 192

    $default  reduce using rule 64 (inclusive_OR_expression)


State 254

   66 logical_AND_expression: logical_AND_expression LOGICAL_AND M . inclusive_OR_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 279


State 255

   68 logical_OR_expression: logical_OR_expression LOGICAL_OR M . logical_AND_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 280


State 256

   70 conditional_expression: logical_OR_expression N '?' . M expression N ':' M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 281


State 257

  203 compound_statement: '{' X changetable . block_item_list_opt '}'

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 292
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    $default  reduce using rule 207 (block_item_list_opt)

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    declaration                go to state 296
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 297
    labeled_statement          go to state 298
    compound_statement         go to state 299
    block_item_list            go to state 300
    block_item_list_opt        go to state 301
    block_item                 go to state 302
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 258

  172 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 172 (parameter_declaration)


State 259

  157 direct_declarator: direct_declarator '(' changetable parameter_type_list ')' .

    $default  reduce using rule 157 (direct_declarator)


State 260

  169 parameter_type_list: parameter_list ',' . ELLIPSIS
  171 parameter_list: parameter_list ',' . parameter_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ELLIPSIS    shift, and go to state 307

    declaration_specifiers     go to state 199
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_declaration      go to state 308


State 261

  175 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 175 (identifier_list)


State 262

  154 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression . ']'

    ']'  shift, and go to state 309


State 263

  156 direct_declarator: direct_declarator '[' type_qualifier_list_opt MULT ']' .

    $default  reduce using rule 156 (direct_declarator)


State 264

  153 direct_declarator: direct_declarator '[' type_qualifier_list_opt assignment_expression_opt ']' .

    $default  reduce using rule 153 (direct_declarator)


State 265

  155 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression . ']'

    ']'  shift, and go to state 310


State 266

  132 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 132 (struct_declarator_list)


State 267

  134 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 134 (struct_declarator)


State 268

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list ',' '}'
   32 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 271

    $default  reduce using rule 32 (unary_expression)


State 269

   21 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   22                   | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 271


State 270

   85 expression: expression ',' assignment_expression .

    $default  reduce using rule 85 (expression)


State 271

   21 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   22                   | '(' type_name ')' '{' . initializer_list ',' '}'

    '['  shift, and go to state 151
    '.'  shift, and go to state 152

    $default  reduce using rule 183 (designation_opt)

    initializer_list  go to state 311
    designation_opt   go to state 154
    designation       go to state 155
    designator_list   go to state 156
    designator        go to state 157


State 272

   40 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 40 (cast_expression)


State 273

  187 designator: '[' constant_expression ']' .

    $default  reduce using rule 187 (designator)


State 274

  179 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 179 (initializer)


State 275

  181 initializer_list: initializer_list ',' designation_opt . initializer

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 100

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 117
    initializer                go to state 312


State 276

   24 argument_expression_list: argument_expression_list ',' . assignment_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 313


State 277

   16 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 16 (postfix_expression)


State 278

   15 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 15 (postfix_expression)


State 279

   64 inclusive_OR_expression: inclusive_OR_expression . BITWISE_OR exclusive_OR_expression
   66 logical_AND_expression: logical_AND_expression LOGICAL_AND M inclusive_OR_expression .

    BITWISE_OR  shift, and go to state 193

    $default  reduce using rule 66 (logical_AND_expression)


State 280

   66 logical_AND_expression: logical_AND_expression . LOGICAL_AND M inclusive_OR_expression
   68 logical_OR_expression: logical_OR_expression LOGICAL_OR M logical_AND_expression .

    LOGICAL_AND  shift, and go to state 194

    $default  reduce using rule 68 (logical_OR_expression)


State 281

   70 conditional_expression: logical_OR_expression N '?' M . expression N ':' M conditional_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 314


State 282

  225 jump_statement: BREAK . ';'

    ';'  shift, and go to state 315


State 283

  226 jump_statement: RETURN . expression ';'
  227               | RETURN . ';'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    ';'             shift, and go to state 316

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 317


State 284

  201 labeled_statement: CASE . constant_expression ':' statement

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 211
    constant_expression        go to state 318


State 285

  219 iteration_statement: FOR . F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  220                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  221                    | FOR . F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  222                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 2 (F)

    F  go to state 319


State 286

  215 iteration_statement: WHILE . W '(' X changetable M expression ')' M loop_statement
  216                    | WHILE . W '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 3 (W)

    W  go to state 320


State 287

  223 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 321


State 288

  224 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 322


State 289

  212 selection_statement: IF . '(' expression N ')' M statement N
  213                    | IF . '(' expression N ')' M statement N ELSE M statement

    '('  shift, and go to state 323


State 290

  217 iteration_statement: DO . D M loop_statement M WHILE '(' expression ')' ';'
  218                    | DO . D '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';'

    $default  reduce using rule 4 (D)

    D  go to state 324


State 291

  214 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 325


State 292

  202 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 326


State 293

    8 primary_expression: IDENTIFIER .
  200 labeled_statement: IDENTIFIER . ':' M statement

    ':'  shift, and go to state 327

    $default  reduce using rule 8 (primary_expression)


State 294

  210 expression_statement: ';' .

    $default  reduce using rule 210 (expression_statement)


State 295

   85 expression: expression . ',' assignment_expression
  211 expression_statement: expression . ';'

    ','  shift, and go to state 222
    ';'  shift, and go to state 328


State 296

  208 block_item: declaration .

    $default  reduce using rule 208 (block_item)


State 297

  209 block_item: statement .

    $default  reduce using rule 209 (block_item)


State 298

  189 statement: labeled_statement .

    $default  reduce using rule 189 (statement)


State 299

  190 statement: compound_statement .

    $default  reduce using rule 190 (statement)


State 300

  205 block_item_list: block_item_list . M block_item
  206 block_item_list_opt: block_item_list .

    '}'       reduce using rule 206 (block_item_list_opt)
    $default  reduce using rule 1 (M)

    M  go to state 329


State 301

  203 compound_statement: '{' X changetable block_item_list_opt . '}'

    '}'  shift, and go to state 330


State 302

  204 block_item_list: block_item .

    $default  reduce using rule 204 (block_item_list)


State 303

  191 statement: expression_statement .

    $default  reduce using rule 191 (statement)


State 304

  192 statement: selection_statement .

    $default  reduce using rule 192 (statement)


State 305

  193 statement: iteration_statement .

    $default  reduce using rule 193 (statement)


State 306

  194 statement: jump_statement .

    $default  reduce using rule 194 (statement)


State 307

  169 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 169 (parameter_type_list)


State 308

  171 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 171 (parameter_list)


State 309

  154 direct_declarator: direct_declarator '[' STATIC type_qualifier_list_opt assignment_expression ']' .

    $default  reduce using rule 154 (direct_declarator)


State 310

  155 direct_declarator: direct_declarator '[' type_qualifier_list STATIC assignment_expression ']' .

    $default  reduce using rule 155 (direct_declarator)


State 311

   21 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   22                   | '(' type_name ')' '{' initializer_list . ',' '}'
  181 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 331
    ','  shift, and go to state 332


State 312

  181 initializer_list: initializer_list ',' designation_opt initializer .

    $default  reduce using rule 181 (initializer_list)


State 313

   24 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 24 (argument_expression_list)


State 314

   70 conditional_expression: logical_OR_expression N '?' M expression . N ':' M conditional_expression
   85 expression: expression . ',' assignment_expression

    ','  shift, and go to state 222

    $default  reduce using rule 6 (N)

    N  go to state 333


State 315

  225 jump_statement: BREAK ';' .

    $default  reduce using rule 225 (jump_statement)


State 316

  227 jump_statement: RETURN ';' .

    $default  reduce using rule 227 (jump_statement)


State 317

   85 expression: expression . ',' assignment_expression
  226 jump_statement: RETURN expression . ';'

    ','  shift, and go to state 222
    ';'  shift, and go to state 334


State 318

  201 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 335


State 319

  219 iteration_statement: FOR F . '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  220                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  221                    | FOR F . '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  222                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    '('  shift, and go to state 336


State 320

  215 iteration_statement: WHILE W . '(' X changetable M expression ')' M loop_statement
  216                    | WHILE W . '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    '('  shift, and go to state 337


State 321

  223 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 338


State 322

  224 jump_statement: CONTINUE ';' .

    $default  reduce using rule 224 (jump_statement)


State 323

  212 selection_statement: IF '(' . expression N ')' M statement N
  213                    | IF '(' . expression N ')' M statement N ELSE M statement

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 339


State 324

  217 iteration_statement: DO D . M loop_statement M WHILE '(' expression ')' ';'
  218                    | DO D . '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';'

    '{'  shift, and go to state 340

    $default  reduce using rule 1 (M)

    M  go to state 341


State 325

  214 selection_statement: SWITCH '(' . expression ')' statement

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 342


State 326

  202 labeled_statement: DEFAULT ':' . statement

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    statement                  go to state 343
    labeled_statement          go to state 298
    compound_statement         go to state 299
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 327

  200 labeled_statement: IDENTIFIER ':' . M statement

    $default  reduce using rule 1 (M)

    M  go to state 344


State 328

  211 expression_statement: expression ';' .

    $default  reduce using rule 211 (expression_statement)


State 329

  205 block_item_list: block_item_list M . block_item

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 292
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    declaration                go to state 296
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 297
    labeled_statement          go to state 298
    compound_statement         go to state 299
    block_item                 go to state 345
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 330

  203 compound_statement: '{' X changetable block_item_list_opt '}' .

    $default  reduce using rule 203 (compound_statement)


State 331

   21 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 21 (postfix_expression)


State 332

   22 postfix_expression: '(' type_name ')' '{' initializer_list ',' . '}'
  181 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 151
    '.'  shift, and go to state 152
    '}'  shift, and go to state 346

    $default  reduce using rule 183 (designation_opt)

    designation_opt  go to state 275
    designation      go to state 155
    designator_list  go to state 156
    designator       go to state 157


State 333

   70 conditional_expression: logical_OR_expression N '?' M expression N . ':' M conditional_expression

    ':'  shift, and go to state 347


State 334

  226 jump_statement: RETURN expression ';' .

    $default  reduce using rule 226 (jump_statement)


State 335

  201 labeled_statement: CASE constant_expression ':' . statement

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    statement                  go to state 348
    labeled_statement          go to state 298
    compound_statement         go to state 299
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 336

  219 iteration_statement: FOR F '(' . X changetable declaration M expression_statement M expression N ')' M loop_statement
  220                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  221                    | FOR F '(' . X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  222                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 349


State 337

  215 iteration_statement: WHILE W '(' . X changetable M expression ')' M loop_statement
  216                    | WHILE W '(' . X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 5 (X)

    X  go to state 350


State 338

  223 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 223 (jump_statement)


State 339

   85 expression: expression . ',' assignment_expression
  212 selection_statement: IF '(' expression . N ')' M statement N
  213                    | IF '(' expression . N ')' M statement N ELSE M statement

    ','  shift, and go to state 222

    $default  reduce using rule 6 (N)

    N  go to state 351


State 340

  218 iteration_statement: DO D '{' . M block_item_list_opt '}' M WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 352


State 341

  217 iteration_statement: DO D M . loop_statement M WHILE '(' expression ')' ';'

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    loop_statement             go to state 353
    labeled_statement          go to state 354
    expression_statement       go to state 355
    selection_statement        go to state 356
    iteration_statement        go to state 357
    jump_statement             go to state 358


State 342

   85 expression: expression . ',' assignment_expression
  214 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 359
    ','  shift, and go to state 222


State 343

  202 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 202 (labeled_statement)


State 344

  200 labeled_statement: IDENTIFIER ':' M . statement

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    statement                  go to state 360
    labeled_statement          go to state 298
    compound_statement         go to state 299
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 345

  205 block_item_list: block_item_list M block_item .

    $default  reduce using rule 205 (block_item_list)


State 346

   22 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 22 (postfix_expression)


State 347

   70 conditional_expression: logical_OR_expression N '?' M expression N ':' . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 361


State 348

  201 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 201 (labeled_statement)


State 349

  219 iteration_statement: FOR F '(' X . changetable declaration M expression_statement M expression N ')' M loop_statement
  220                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M loop_statement
  221                    | FOR F '(' X . changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  222                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 362


State 350

  215 iteration_statement: WHILE W '(' X . changetable M expression ')' M loop_statement
  216                    | WHILE W '(' X . changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 7 (changetable)

    changetable  go to state 363


State 351

  212 selection_statement: IF '(' expression N . ')' M statement N
  213                    | IF '(' expression N . ')' M statement N ELSE M statement

    ')'  shift, and go to state 364


State 352

  218 iteration_statement: DO D '{' M . block_item_list_opt '}' M WHILE '(' expression ')' ';'

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 292
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    $default  reduce using rule 207 (block_item_list_opt)

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    declaration                go to state 296
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 297
    labeled_statement          go to state 298
    compound_statement         go to state 299
    block_item_list            go to state 300
    block_item_list_opt        go to state 365
    block_item                 go to state 302
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 353

  217 iteration_statement: DO D M loop_statement . M WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 366


State 354

  195 loop_statement: labeled_statement .

    $default  reduce using rule 195 (loop_statement)


State 355

  196 loop_statement: expression_statement .

    $default  reduce using rule 196 (loop_statement)


State 356

  197 loop_statement: selection_statement .

    $default  reduce using rule 197 (loop_statement)


State 357

  198 loop_statement: iteration_statement .

    $default  reduce using rule 198 (loop_statement)


State 358

  199 loop_statement: jump_statement .

    $default  reduce using rule 199 (loop_statement)


State 359

  214 selection_statement: SWITCH '(' expression ')' . statement

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    statement                  go to state 367
    labeled_statement          go to state 298
    compound_statement         go to state 299
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 360

  200 labeled_statement: IDENTIFIER ':' M statement .

    $default  reduce using rule 200 (labeled_statement)


State 361

   70 conditional_expression: logical_OR_expression N '?' M expression N ':' M . conditional_expression

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 176
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 368


State 362

  219 iteration_statement: FOR F '(' X changetable . declaration M expression_statement M expression N ')' M loop_statement
  220                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M loop_statement
  221                    | FOR F '(' X changetable . declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  222                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 85
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    declaration                go to state 369
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    expression_statement       go to state 370


State 363

  215 iteration_statement: WHILE W '(' X changetable . M expression ')' M loop_statement
  216                    | WHILE W '(' X changetable . M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 371


State 364

  212 selection_statement: IF '(' expression N ')' . M statement N
  213                    | IF '(' expression N ')' . M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 372


State 365

  218 iteration_statement: DO D '{' M block_item_list_opt . '}' M WHILE '(' expression ')' ';'

    '}'  shift, and go to state 373


State 366

  217 iteration_statement: DO D M loop_statement M . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 374


State 367

  214 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 214 (selection_statement)


State 368

   70 conditional_expression: logical_OR_expression N '?' M expression N ':' M conditional_expression .

    $default  reduce using rule 70 (conditional_expression)


State 369

  219 iteration_statement: FOR F '(' X changetable declaration . M expression_statement M expression N ')' M loop_statement
  221                    | FOR F '(' X changetable declaration . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 375


State 370

  220 iteration_statement: FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M loop_statement
  222                    | FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 376


State 371

  215 iteration_statement: WHILE W '(' X changetable M . expression ')' M loop_statement
  216                    | WHILE W '(' X changetable M . expression ')' '{' M block_item_list_opt '}'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 377


State 372

  212 selection_statement: IF '(' expression N ')' M . statement N
  213                    | IF '(' expression N ')' M . statement N ELSE M statement

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    statement                  go to state 378
    labeled_statement          go to state 298
    compound_statement         go to state 299
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 373

  218 iteration_statement: DO D '{' M block_item_list_opt '}' . M WHILE '(' expression ')' ';'

    $default  reduce using rule 1 (M)

    M  go to state 379


State 374

  217 iteration_statement: DO D M loop_statement M WHILE . '(' expression ')' ';'

    '('  shift, and go to state 380


State 375

  219 iteration_statement: FOR F '(' X changetable declaration M . expression_statement M expression N ')' M loop_statement
  221                    | FOR F '(' X changetable declaration M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    expression_statement       go to state 381


State 376

  220 iteration_statement: FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M loop_statement
  222                    | FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    expression_statement       go to state 382


State 377

   85 expression: expression . ',' assignment_expression
  215 iteration_statement: WHILE W '(' X changetable M expression . ')' M loop_statement
  216                    | WHILE W '(' X changetable M expression . ')' '{' M block_item_list_opt '}'

    ')'  shift, and go to state 383
    ','  shift, and go to state 222


State 378

  212 selection_statement: IF '(' expression N ')' M statement . N
  213                    | IF '(' expression N ')' M statement . N ELSE M statement

    $default  reduce using rule 6 (N)

    N  go to state 384


State 379

  218 iteration_statement: DO D '{' M block_item_list_opt '}' M . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 385


State 380

  217 iteration_statement: DO D M loop_statement M WHILE '(' . expression ')' ';'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 386


State 381

  219 iteration_statement: FOR F '(' X changetable declaration M expression_statement . M expression N ')' M loop_statement
  221                    | FOR F '(' X changetable declaration M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 387


State 382

  220 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M loop_statement
  222                    | FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 388


State 383

  215 iteration_statement: WHILE W '(' X changetable M expression ')' . M loop_statement
  216                    | WHILE W '(' X changetable M expression ')' . '{' M block_item_list_opt '}'

    '{'  shift, and go to state 389

    $default  reduce using rule 1 (M)

    M  go to state 390


State 384

  212 selection_statement: IF '(' expression N ')' M statement N .
  213                    | IF '(' expression N ')' M statement N . ELSE M statement

    ELSE  shift, and go to state 391

    $default  reduce using rule 212 (selection_statement)


State 385

  218 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE . '(' expression ')' ';'

    '('  shift, and go to state 392


State 386

   85 expression: expression . ',' assignment_expression
  217 iteration_statement: DO D M loop_statement M WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 393
    ','  shift, and go to state 222


State 387

  219 iteration_statement: FOR F '(' X changetable declaration M expression_statement M . expression N ')' M loop_statement
  221                    | FOR F '(' X changetable declaration M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 394


State 388

  220 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M loop_statement
  222                    | FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 395


State 389

  216 iteration_statement: WHILE W '(' X changetable M expression ')' '{' . M block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 396


State 390

  215 iteration_statement: WHILE W '(' X changetable M expression ')' M . loop_statement

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    loop_statement             go to state 397
    labeled_statement          go to state 354
    expression_statement       go to state 355
    selection_statement        go to state 356
    iteration_statement        go to state 357
    jump_statement             go to state 358


State 391

  213 selection_statement: IF '(' expression N ')' M statement N ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 398


State 392

  218 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' . expression ')' ';'

    SIZEOF          shift, and go to state 85
    IDENTIFIER      shift, and go to state 86
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 399


State 393

  217 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 400


State 394

   85 expression: expression . ',' assignment_expression
  219 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression . N ')' M loop_statement
  221                    | FOR F '(' X changetable declaration M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    ','  shift, and go to state 222

    $default  reduce using rule 6 (N)

    N  go to state 401


State 395

   85 expression: expression . ',' assignment_expression
  220 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M loop_statement
  222                    | FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    ','  shift, and go to state 222

    $default  reduce using rule 6 (N)

    N  go to state 402


State 396

  216 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M . block_item_list_opt '}'

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 292
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    $default  reduce using rule 207 (block_item_list_opt)

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    declaration                go to state 296
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 297
    labeled_statement          go to state 298
    compound_statement         go to state 299
    block_item_list            go to state 300
    block_item_list_opt        go to state 403
    block_item                 go to state 302
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 397

  215 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement .

    $default  reduce using rule 215 (iteration_statement)


State 398

  213 selection_statement: IF '(' expression N ')' M statement N ELSE M . statement

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    statement                  go to state 404
    labeled_statement          go to state 298
    compound_statement         go to state 299
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 399

   85 expression: expression . ',' assignment_expression
  218 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 405
    ','  shift, and go to state 222


State 400

  217 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' ';' .

    $default  reduce using rule 217 (iteration_statement)


State 401

  219 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N . ')' M loop_statement
  221                    | FOR F '(' X changetable declaration M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 406


State 402

  220 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M loop_statement
  222                    | FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 407


State 403

  216 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt . '}'

    '}'  shift, and go to state 408


State 404

  213 selection_statement: IF '(' expression N ')' M statement N ELSE M statement .

    $default  reduce using rule 213 (selection_statement)


State 405

  218 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 409


State 406

  219 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' . M loop_statement
  221                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 410


State 407

  220 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M loop_statement
  222                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (M)

    M  go to state 411


State 408

  216 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}' .

    $default  reduce using rule 216 (iteration_statement)


State 409

  218 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' ';' .

    $default  reduce using rule 218 (iteration_statement)


State 410

  219 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M . loop_statement
  221                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 412
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    loop_statement             go to state 413
    labeled_statement          go to state 354
    expression_statement       go to state 355
    selection_statement        go to state 356
    iteration_statement        go to state 357
    jump_statement             go to state 358


State 411

  220 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . loop_statement
  222                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    DEFAULT         shift, and go to state 292
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 414
    ';'             shift, and go to state 294

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    loop_statement             go to state 415
    labeled_statement          go to state 354
    expression_statement       go to state 355
    selection_statement        go to state 356
    iteration_statement        go to state 357
    jump_statement             go to state 358


State 412

  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 292
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    $default  reduce using rule 207 (block_item_list_opt)

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    declaration                go to state 296
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 297
    labeled_statement          go to state 298
    compound_statement         go to state 299
    block_item_list            go to state 300
    block_item_list_opt        go to state 416
    block_item                 go to state 302
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 413

  219 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 219 (iteration_statement)


State 414

  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK           shift, and go to state 282
    RETURN          shift, and go to state 283
    CASE            shift, and go to state 284
    FOR             shift, and go to state 285
    WHILE           shift, and go to state 286
    GOTO            shift, and go to state 287
    SIZEOF          shift, and go to state 85
    CONTINUE        shift, and go to state 288
    IF              shift, and go to state 289
    DO              shift, and go to state 290
    SWITCH          shift, and go to state 291
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 292
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 293
    INTEGER_CONST   shift, and go to state 87
    CHAR_CONST      shift, and go to state 88
    FLOAT_CONST     shift, and go to state 89
    STRING_LITERAL  shift, and go to state 90
    PLUS            shift, and go to state 91
    MINUS           shift, and go to state 92
    MULT            shift, and go to state 93
    INCREMENT       shift, and go to state 94
    DECREMENT       shift, and go to state 95
    BITWISE_AND     shift, and go to state 96
    BITWISE_NOT     shift, and go to state 97
    LOGICAL_NOT     shift, and go to state 98
    '('             shift, and go to state 99
    '{'             shift, and go to state 119
    ';'             shift, and go to state 294

    $default  reduce using rule 207 (block_item_list_opt)

    primary_expression         go to state 101
    postfix_expression         go to state 102
    unary_expression           go to state 103
    unary_operator             go to state 104
    cast_expression            go to state 105
    multiplicative_expression  go to state 106
    additive_expression        go to state 107
    shift_expression           go to state 108
    relational_expression      go to state 109
    equality_expression        go to state 110
    and_expression             go to state 111
    exclusive_OR_expression    go to state 112
    inclusive_OR_expression    go to state 113
    logical_AND_expression     go to state 114
    logical_OR_expression      go to state 115
    conditional_expression     go to state 116
    assignment_expression      go to state 147
    expression                 go to state 295
    declaration                go to state 296
    declaration_specifiers     go to state 65
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 297
    labeled_statement          go to state 298
    compound_statement         go to state 299
    block_item_list            go to state 300
    block_item_list_opt        go to state 417
    block_item                 go to state 302
    expression_statement       go to state 303
    selection_statement        go to state 304
    iteration_statement        go to state 305
    jump_statement             go to state 306


State 415

  220 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 220 (iteration_statement)


State 416

  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 418


State 417

  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 419


State 418

  221 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 221 (iteration_statement)


State 419

  222 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 222 (iteration_statement)

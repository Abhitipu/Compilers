a.out:y.tab.o ass5_19CS10069_19CS30007_translator.o lex.yy.o
	g++ -Wall lex.yy.o y.tab.o ass5_19CS10069_19CS30007_translator.o -o a.out

ass5_19CS10069_19CS30007_translator.o: ass5_19CS10069_19CS30007_translator.h ass5_19CS10069_19CS30007_translator.cxx
	g++ -c ass5_19CS10069_19CS30007_translator.h ass5_19CS10069_19CS30007_translator.cxx
lex.yy.o: lex.yy.c
	g++ -c lex.yy.c
lex.yy.c: y.tab.h ass5_19CS10069_19CS30007_translator.h ass5_19CS10069_19CS30007.l 
	flex ass5_19CS10069_19CS30007.l

y.tab.o: y.tab.c y.tab.h
	g++ -c y.tab.c y.tab.h
y.tab.c y.tab.h: ass5_19CS10069_19CS30007.y ass5_19CS10069_19CS30007_translator.h
	win_bison -dy ass5_19CS10069_19CS30007.y ass5_19CS10069_19CS30007_translator.h




test: a.out
	
	@echo "TRANSLATING TEST FILE 1 \n(2D ARRAYS and LOOPS)==>\n\n"
	./a.out < test_tiny.c > ass5_19CS10069_19CS30007_quads1.out
	@echo "Test File 1 Successfully Translated !\n"

	@echo "\nALL TEST FILES SUCCESSFULLY TRANSLATED !!\n"

a.out: ass5_19CS10069_19CS30007.tab.o lex.yy.o ass5_19CS10069_19CS30007_translator.o
	g++ ass5_19CS10069_19CS30007_translator.o -lfl

lex.yy.o: lex.yy.c
	g++ -c lex.yy.c

ass5_19CS10069_19CS30007.tab.o: ass5_19CS10069_19CS30007.tab.c ass5_19CS10069_19CS30007.tab.h
	g++ -c ass5_19CS10069_19CS30007.tab.c ass5_19CS10069_19CS30007.tab.h

lex.yy.c: ass5_19CS10069_19CS30007.l ass5_19CS10069_19CS30007.tab.h ass5_19CS10069_19CS30007_translator.h
	flex ass5_19CS10069_19CS30007.l

ass5_19CS10069_19CS30007.tab.c ass5_19CS10069_19CS30007.tab.h: ass5_19CS10069_19CS30007.y 
	bison -dtv ass5_19CS10069_19CS30007.y

ass5_19CS10069_19CS30007_translator.o: ass5_19CS10069_19CS30007_translator.h ass5_19CS10069_19CS30007_translator.cxx
	g++ -c ass5_19CS10069_19CS30007_translator.h ass5_19CS10069_19CS30007_translator.cxx

clean:
	rm lex.yy.c\
	   a.out\
	   ass5_19CS10069_19CS30007.tab.c\
	   ass5_19CS10069_19CS30007.tab.h\
	   ass5_19CS10069_19CS30007.output\
	   ass5_19CS10069_19CS30007_quads1.out
%.c: %.l # cancels the implicit conversion of ass3_19CS10069_19CS30007.l to ass3_19CS10069_19CS30007.c using implicit make rules

%.c: %.y # cancels the implicit conversion of ass3_19CS10069_19CS30007.y to ass3_19CS10069_19CS30007.c using implicit make rules

# clean:
# 	rm temp.txt


#  my windows make

test: a.out
	
	@echo "TRANSLATING TEST FILE 1 \n(2D ARRAYS and LOOPS)==>\n\n"
	./a.out < test_tiny.c > ass5_19CS10069_19CS30007_quads1.out
	@echo "Test File 1 Successfully Translated !\n"

	@echo "\nALL TEST FILES SUCCESSFULLY TRANSLATED !!\n"

a.out:y.tab.o ass5_19CS10069_19CS30007_translator.o lex.yy.o
	g++ -Wall lex.yy.o y.tab.o ass5_19CS10069_19CS30007_translator.o -o a.out

ass5_19CS10069_19CS30007_translator.o: ass5_19CS10069_19CS30007_translator.h ass5_19CS10069_19CS30007_translator.cxx
	g++ -c ass5_19CS10069_19CS30007_translator.h ass5_19CS10069_19CS30007_translator.cxx
lex.yy.o: lex.yy.c
	g++ -c lex.yy.c
lex.yy.c: y.tab.h ass5_19CS10069_19CS30007_translator.h ass5_19CS10069_19CS30007.l 
	flex ass5_19CS10069_19CS30007.l

y.tab.o: y.tab.c y.tab.h
	g++ -c y.tab.c y.tab.h
y.tab.c y.tab.h: ass5_19CS10069_19CS30007.y ass5_19CS10069_19CS30007_translator.h
	bison -dy ass5_19CS10069_19CS30007.y ass5_19CS10069_19CS30007_translator.h

clean:
	rm lex.yy.c\
	   a.out\
	   y.tab.c\
	   y.tab.h\
	   ass5_19CS10069_19CS30007.output\
	   ass5_19CS10069_19CS30007_quads1.out
%.c: %.l # cancels the implicit conversion of ass3_19CS10069_19CS30007.l to ass3_19CS10069_19CS30007.c using implicit make rules

%.c: %.y # cancels the implicit conversion of ass3_19CS10069_19CS30007.y to ass3_19CS10069_19CS30007.c using implicit make rules

# clean:
# 	rm temp.txt

#################### LINE NO : 2 ####################

#################### LINE NO : 3 ####################

#################### LINE NO : 4 ####################

#################### LINE NO : 5 ####################

#################### LINE NO : 6 ####################

#################### LINE NO : 7 ####################

#################### LINE NO : 8 ####################

#################### LINE NO : 9 ####################
direct_declarator -> direct_declarator [ type_qualifier_list_opt assignment_expression_opt ]

#################### LINE NO : 10 ####################
direct_declarator -> direct_declarator [ type_qualifier_list_opt assignment_expression_opt ]
direct_declarator -> direct_declarator [ type_qualifier_list_opt assignment_expression_opt ]

#################### LINE NO : 11 ####################

#################### LINE NO : 12 ####################

#################### LINE NO : 13 ####################

#################### LINE NO : 14 ####################

#################### LINE NO : 15 ####################

#################### LINE NO : 16 ####################
syntax error

________________________________________________________________________________________________________________________
THREE ADDRESS CODE (TAC): 
________________________________________________________________________________________________________________________
0:     t0 = 0
1:     x = t0

2: Global.$0: 
3:     t0 = 0
4:     sum = t0
5:     t1 = 'a'
6:     a = t1
7:     t2 = 5
8:     t3 = 5
9:     t4 = 5
10:     t5 = 5
11:     n = t5
12:     t7 = 100
13:     j = t7
14:     t9 = 0
15:     i = t9

16: Global.$0.WHILE$1: 
17:     t0 = 5
18:     if i < t0 goto 
19:     goto 
__________________________________________________________________________________________________________________________________
__________________________________________________________________________________________________________________________________
Table Name: Global                                                Parent Name: NULL
__________________________________________________________________________________________________________________________________
Name                                    Type                Initial Value       Size           Offset         Nested
                                                                                                    
x                                       int                 0                   4              0              NULL
t0                                      int                 0                   4              4              NULL
main                                    int                 -                   4              8              main
Global.$0                               block               -                   4              12             Global.$0
----------------------------------------------------------------------------------------------------------------------------------

__________________________________________________________________________________________________________________________________
Table Name: main                                                  Parent Name: Global
__________________________________________________________________________________________________________________________________
Name                                    Type                Initial Value       Size           Offset         Nested
                                                                                                    
return                                  int                 -                   4              0              NULL
----------------------------------------------------------------------------------------------------------------------------------

__________________________________________________________________________________________________________________________________
Table Name: Global.$0                                             Parent Name: Global
__________________________________________________________________________________________________________________________________
Name                                    Type                Initial Value       Size           Offset         Nested
                                                                                                    
i                                       int                 -                   4              0              NULL
j                                       int                 -                   4              4              NULL
n                                       int                 -                   4              8              NULL
sum                                     int                 0                   4              12             NULL
t0                                      int                 0                   4              16             NULL
a                                       char                'a'                 1              20             NULL
t1                                      char                'a'                 1              21             NULL
p                                       int                 -                   4              22             NULL
t2                                      int                 5                   4              26             NULL
dp                                      int                 -                   4              30             NULL
t3                                      int                 5                   4              34             NULL
t4                                      int                 5                   4              38             NULL
t5                                      int                 5                   4              42             NULL
t6                                      int                                     4              46             NULL
t7                                      int                 100                 4              50             NULL
t8                                      int                                     4              54             NULL
t9                                      int                 0                   4              58             NULL
t10                                     int                                     4              62             NULL
Global.$0.WHILE$1                       block               -                   4              66             Global.$0.WHILE$1
----------------------------------------------------------------------------------------------------------------------------------

__________________________________________________________________________________________________________________________________
Table Name: Global.$0.WHILE$1                                     Parent Name: Global.$0
__________________________________________________________________________________________________________________________________
Name                                    Type                Initial Value       Size           Offset         Nested
                                                                                                    
t0                                      int                 5                   4              0              NULL
----------------------------------------------------------------------------------------------------------------------------------


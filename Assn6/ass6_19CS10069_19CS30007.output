Terminals unused in grammar

    TYPEDEF
    ENUMERATION_CONST


Grammar

    0 $accept: translation_unit $end

    1 changetable: %empty

    2 constant: INTEGER_CONST
    3         | FLOAT_CONST
    4         | CHAR_CONST

    5 primary_expression: IDENTIFIER
    6                   | constant
    7                   | STRING_LITERAL
    8                   | '(' expression ')'

    9 postfix_expression: primary_expression
   10                   | postfix_expression '[' expression ']'
   11                   | postfix_expression '(' argument_expression_list_opt ')'
   12                   | postfix_expression '.' IDENTIFIER
   13                   | postfix_expression ARROW IDENTIFIER
   14                   | postfix_expression INCREMENT
   15                   | postfix_expression DECREMENT
   16                   | '(' type_name ')' '{' initializer_list '}'
   17                   | '(' type_name ')' '{' initializer_list ',' '}'

   18 argument_expression_list: assignment_expression
   19                         | argument_expression_list ',' assignment_expression

   20 argument_expression_list_opt: argument_expression_list
   21                             | %empty

   22 unary_expression: postfix_expression
   23                 | INCREMENT unary_expression
   24                 | DECREMENT unary_expression
   25                 | unary_operator cast_expression
   26                 | SIZEOF unary_expression
   27                 | SIZEOF '(' type_name ')'

   28 unary_operator: BITWISE_AND
   29               | MULT
   30               | PLUS
   31               | MINUS
   32               | BITWISE_NOT
   33               | LOGICAL_NOT

   34 cast_expression: unary_expression
   35                | '(' type_name ')' cast_expression

   36 multiplicative_expression: cast_expression
   37                          | multiplicative_expression MULT cast_expression
   38                          | multiplicative_expression DIVIDE cast_expression
   39                          | multiplicative_expression MODULO cast_expression

   40 additive_expression: multiplicative_expression
   41                    | additive_expression PLUS multiplicative_expression
   42                    | additive_expression MINUS multiplicative_expression

   43 shift_expression: additive_expression
   44                 | shift_expression LSHIFT additive_expression
   45                 | shift_expression RSHIFT additive_expression

   46 relational_expression: shift_expression
   47                      | relational_expression LT shift_expression
   48                      | relational_expression GT shift_expression
   49                      | relational_expression LEQ shift_expression
   50                      | relational_expression GEQ shift_expression

   51 equality_expression: relational_expression
   52                    | equality_expression EQ relational_expression
   53                    | equality_expression NEQ relational_expression

   54 and_expression: equality_expression
   55               | and_expression BITWISE_AND equality_expression

   56 exclusive_or_expression: and_expression
   57                        | exclusive_or_expression XOR and_expression

   58 inclusive_or_expression: exclusive_or_expression
   59                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   60 logical_and_expression: inclusive_or_expression
   61                       | logical_and_expression LOGICAL_AND M inclusive_or_expression

   62 logical_or_expression: logical_and_expression
   63                      | logical_or_expression LOGICAL_OR M logical_and_expression

   64 conditional_expression: logical_or_expression
   65                       | logical_or_expression '?' expression ':' conditional_expression

   66 assignment_expression: conditional_expression
   67                      | unary_expression assignment_operator assignment_expression

   68 assignment_operator: ASGN
   69                    | MULT_ASGN
   70                    | DIV_ASGN
   71                    | MOD_ASGN
   72                    | ADD_ASGN
   73                    | SUB_ASGN
   74                    | LSHIFT_ASGN
   75                    | RSHIFT_ASGN
   76                    | AND_ASGN
   77                    | XOR_ASGN
   78                    | OR_ASGN

   79 expression: assignment_expression
   80           | expression ',' assignment_expression

   81 constant_expression: conditional_expression

   82 declaration: declaration_specifiers init_declarator_list_opt semicolon

   83 init_declarator_list_opt: init_declarator_list
   84                         | %empty

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt
   86                       | type_specifier declaration_specifiers_opt
   87                       | type_qualifier declaration_specifiers_opt
   88                       | function_specifier declaration_specifiers_opt

   89 declaration_specifiers_opt: declaration_specifiers
   90                           | %empty

   91 init_declarator_list: init_declarator
   92                     | init_declarator_list ',' init_declarator

   93 init_declarator: declarator
   94                | declarator ASGN initializer

   95 storage_class_specifier: EXTERN
   96                        | STATIC
   97                        | AUTO
   98                        | REGISTER

   99 type_specifier: VOID
  100               | CHAR
  101               | SHORT
  102               | INT
  103               | LONG
  104               | FLOAT
  105               | DOUBLE
  106               | SIGNED
  107               | UNSIGNED
  108               | _BOOL
  109               | _COMPLEX
  110               | _IMAGINARY
  111               | enum_specifier
  112               | struct_or_union_specifier

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  114                         | type_qualifier specifier_qualifier_list_opt

  115 specifier_qualifier_list_opt: specifier_qualifier_list
  116                             | %empty

  117 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}'
  118                          | struct_or_union IDENTIFIER '{' struct_declaration_list '}'
  119                          | struct_or_union IDENTIFIER

  120 struct_or_union: STRUCT
  121                | UNION

  122 struct_declaration_list: struct_declaration
  123                        | struct_declaration_list struct_declaration

  124 struct_declaration: specifier_qualifier_list semicolon
  125                   | specifier_qualifier_list struct_declarator_list semicolon

  126 struct_declarator_list: struct_declarator
  127                       | struct_declarator_list ',' struct_declarator

  128 struct_declarator: ':' constant_expression
  129                  | declarator ':' constant_expression
  130                  | declarator

  131 enum_specifier: ENUM identifier_opt '{' enumerator_list '}'
  132               | ENUM identifier_opt '{' enumerator_list ',' '}'
  133               | ENUM IDENTIFIER

  134 identifier_opt: IDENTIFIER
  135               | %empty

  136 enumerator_list: enumerator
  137                | enumerator_list ',' enumerator

  138 enumerator: IDENTIFIER
  139           | IDENTIFIER ASGN constant_expression

  140 type_qualifier: CONST
  141               | RESTRICT
  142               | VOLATILE

  143 function_specifier: INLINE

  144 declarator: pointer direct_declarator
  145           | direct_declarator

  146 direct_declarator: IDENTIFIER
  147                  | '(' declarator ')'
  148                  | direct_declarator '[' type_qualifier_list assignment_expression ']'
  149                  | direct_declarator '[' type_qualifier_list ']'
  150                  | direct_declarator '[' assignment_expression ']'
  151                  | direct_declarator '[' ']'
  152                  | direct_declarator '[' STATIC type_qualifier_list assignment_expression ']'
  153                  | direct_declarator '[' STATIC assignment_expression ']'
  154                  | direct_declarator '[' type_qualifier_list MULT ']'
  155                  | direct_declarator '[' MULT ']'
  156                  | direct_declarator '(' changetable parameter_type_list ')'
  157                  | direct_declarator '(' identifier_list ')'
  158                  | direct_declarator '(' changetable ')'

  159 type_qualifier_list_opt: type_qualifier_list
  160                        | %empty

  161 pointer: MULT type_qualifier_list_opt
  162        | MULT type_qualifier_list_opt pointer

  163 type_qualifier_list: type_qualifier
  164                    | type_qualifier_list type_qualifier

  165 parameter_type_list: parameter_list
  166                    | parameter_list ',' ELLIPSIS

  167 parameter_list: parameter_declaration
  168               | parameter_list ',' parameter_declaration

  169 parameter_declaration: declaration_specifiers declarator
  170                      | declaration_specifiers

  171 identifier_list: IDENTIFIER
  172                | identifier_list ',' IDENTIFIER

  173 type_name: specifier_qualifier_list

  174 initializer: assignment_expression
  175            | '{' initializer_list '}'
  176            | '{' initializer_list ',' '}'

  177 initializer_list: designation_opt initializer
  178                 | initializer_list ',' designation_opt initializer

  179 designation_opt: designation
  180                | %empty

  181 designation: designator_list ASGN

  182 designator_list: designator
  183                | designator_list designator

  184 designator: '[' constant_expression ']'
  185           | '.' IDENTIFIER

  186 statement: labeled_statement
  187          | compound_statement
  188          | expression_statement
  189          | selection_statement
  190          | iteration_statement
  191          | jump_statement

  192 loop_statement: labeled_statement
  193               | expression_statement
  194               | selection_statement
  195               | iteration_statement
  196               | jump_statement

  197 labeled_statement: IDENTIFIER ':' M statement
  198                  | CASE constant_expression ':' statement
  199                  | DEFAULT ':' statement

  200 compound_statement: '{' X changetable block_item_list_opt '}'

  201 block_item_list: block_item
  202                | block_item_list M block_item

  203 block_item_list_opt: block_item_list
  204                    | %empty

  205 block_item: declaration
  206           | statement

  207 expression_statement: semicolon
  208                     | expression semicolon

  209 selection_statement: IF '(' expression N ')' M statement N
  210                    | IF '(' expression N ')' M statement N ELSE M statement
  211                    | SWITCH '(' expression ')' statement

  212 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement
  213                    | WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}'
  214                    | DO D M loop_statement M WHILE '(' expression ')' semicolon
  215                    | DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' semicolon
  216                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  218                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  219                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

  220 jump_statement: GOTO IDENTIFIER semicolon
  221               | CONTINUE semicolon
  222               | BREAK semicolon
  223               | RETURN expression semicolon
  224               | RETURN semicolon

  225 translation_unit: external_declaration
  226                 | translation_unit external_declaration

  227 external_declaration: function_definition
  228                     | declaration

  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}'

  230 declaration_list_opt: declaration_list
  231                     | %empty

  232 declaration_list: declaration
  233                 | declaration_list declaration

  234 M: %empty

  235 F: %empty

  236 W: %empty

  237 D: %empty

  238 X: %empty

  239 N: %empty

  240 semicolon: ';'


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 8 11 16 17 27 35 147 156 157 158 209 210 211 212 213 214 215 216 217 218 219
    ')' (41) 8 11 16 17 27 35 147 156 157 158 209 210 211 212 213 214 215 216 217 218 219
    ',' (44) 17 19 80 92 127 132 137 166 168 172 176 178
    '.' (46) 12 185
    ':' (58) 65 128 129 197 198 199
    ';' (59) 240
    '?' (63) 65
    '[' (91) 10 148 149 150 151 152 153 154 155 184
    ']' (93) 10 148 149 150 151 152 153 154 155 184
    '{' (123) 16 17 117 118 131 132 175 176 200 213 215 218 219 229
    '}' (125) 16 17 117 118 131 132 175 176 200 213 215 218 219 229
    error (256)
    BREAK (258) 222
    RETURN (259) 223 224
    CASE (260) 198
    FOR (261) 216 217 218 219
    WHILE (262) 212 213 214 215
    GOTO (263) 220
    SIZEOF (264) 26 27
    CONTINUE (265) 221
    IF (266) 209 210
    DO (267) 214 215
    SWITCH (268) 211
    ELSE (269) 210
    FLOAT (270) 104
    SHORT (271) 101
    CHAR (272) 100
    _BOOL (273) 108
    _IMAGINARY (274) 110
    _COMPLEX (275) 109
    INT (276) 102
    DOUBLE (277) 105
    LONG (278) 103
    VOID (279) 99
    SIGNED (280) 106
    AUTO (281) 97
    UNSIGNED (282) 107
    ENUM (283) 131 132 133
    UNION (284) 121
    STRUCT (285) 120
    TYPEDEF (286)
    CONST (287) 140
    DEFAULT (288) 199
    STATIC (289) 96 152 153
    REGISTER (290) 98
    RESTRICT (291) 141
    VOLATILE (292) 142
    EXTERN (293) 95
    INLINE (294) 143
    IDENTIFIER <symp> (295) 5 12 13 118 119 133 134 138 139 146 171 172 185 197 220
    INTEGER_CONST <int_val> (296) 2
    CHAR_CONST <char_val> (297) 4
    FLOAT_CONST <float_val> (298) 3
    STRING_LITERAL <char_val> (299) 7
    PLUS (300) 30 41
    MINUS (301) 31 42
    MULT (302) 29 37 154 155 161 162
    DIVIDE (303) 38
    ARROW (304) 13
    INCREMENT (305) 14 23
    DECREMENT (306) 15 24
    RSHIFT (307) 45
    LSHIFT (308) 44
    LT (309) 47
    GT (310) 48
    LEQ (311) 49
    GEQ (312) 50
    EQ (313) 52
    NEQ (314) 53
    BITWISE_OR (315) 59
    LOGICAL_OR (316) 63
    BITWISE_AND (317) 28 55
    LOGICAL_AND (318) 61
    XOR (319) 57
    BITWISE_NOT (320) 32
    LOGICAL_NOT (321) 33
    ELLIPSIS (322) 166
    MODULO (323) 39
    ASGN (324) 68 94 139 181
    ENUMERATION_CONST (325)
    ADD_ASGN (326) 72
    SUB_ASGN (327) 73
    MULT_ASGN (328) 69
    DIV_ASGN (329) 70
    MOD_ASGN (330) 71
    LSHIFT_ASGN (331) 74
    RSHIFT_ASGN (332) 75
    AND_ASGN (333) 76
    OR_ASGN (334) 78
    XOR_ASGN (335) 77
    "then" (336)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    changetable (94)
        on left: 1
        on right: 156 158 200 212 213 216 217 218 219 229
    constant <expr> (95)
        on left: 2 3 4
        on right: 6
    primary_expression <expr> (96)
        on left: 5 6 7 8
        on right: 9
    postfix_expression <A> (97)
        on left: 9 10 11 12 13 14 15 16 17
        on right: 10 11 12 13 14 15 22
    argument_expression_list <num_params> (98)
        on left: 18 19
        on right: 19 20
    argument_expression_list_opt <num_params> (99)
        on left: 20 21
        on right: 11
    unary_expression <A> (100)
        on left: 22 23 24 25 26 27
        on right: 23 24 26 34 67
    unary_operator <unaryOp> (101)
        on left: 28 29 30 31 32 33
        on right: 25
    cast_expression <A> (102)
        on left: 34 35
        on right: 25 35 36 37 38 39
    multiplicative_expression <expr> (103)
        on left: 36 37 38 39
        on right: 37 38 39 40 41 42
    additive_expression <expr> (104)
        on left: 40 41 42
        on right: 41 42 43 44 45
    shift_expression <expr> (105)
        on left: 43 44 45
        on right: 44 45 46 47 48 49 50
    relational_expression <expr> (106)
        on left: 46 47 48 49 50
        on right: 47 48 49 50 51 52 53
    equality_expression <expr> (107)
        on left: 51 52 53
        on right: 52 53 54 55
    and_expression <expr> (108)
        on left: 54 55
        on right: 55 56 57
    exclusive_or_expression <expr> (109)
        on left: 56 57
        on right: 57 58 59
    inclusive_or_expression <expr> (110)
        on left: 58 59
        on right: 59 60 61
    logical_and_expression <expr> (111)
        on left: 60 61
        on right: 61 62 63
    logical_or_expression <expr> (112)
        on left: 62 63
        on right: 63 64 65
    conditional_expression <expr> (113)
        on left: 64 65
        on right: 65 66 81
    assignment_expression <expr> (114)
        on left: 66 67
        on right: 18 19 67 79 80 148 150 152 153 174
    assignment_operator (115)
        on left: 68 69 70 71 72 73 74 75 76 77 78
        on right: 67
    expression <expr> (116)
        on left: 79 80
        on right: 8 10 65 80 208 209 210 211 212 213 214 215 216 217 218 219 223
    constant_expression (117)
        on left: 81
        on right: 128 129 139 184 198
    declaration (118)
        on left: 82
        on right: 205 216 218 228 232 233
    init_declarator_list_opt (119)
        on left: 83 84
        on right: 82
    declaration_specifiers (120)
        on left: 85 86 87 88
        on right: 82 89 169 170 229
    declaration_specifiers_opt (121)
        on left: 89 90
        on right: 85 86 87 88
    init_declarator_list (122)
        on left: 91 92
        on right: 83 92
    init_declarator <symp> (123)
        on left: 93 94
        on right: 91 92
    storage_class_specifier (124)
        on left: 95 96 97 98
        on right: 85
    type_specifier (125)
        on left: 99 100 101 102 103 104 105 106 107 108 109 110 111 112
        on right: 86 113
    specifier_qualifier_list (126)
        on left: 113 114
        on right: 115 124 125 173
    specifier_qualifier_list_opt (127)
        on left: 115 116
        on right: 113 114
    struct_or_union_specifier (128)
        on left: 117 118 119
        on right: 112
    struct_or_union (129)
        on left: 120 121
        on right: 117 118 119
    struct_declaration_list (130)
        on left: 122 123
        on right: 117 118 123
    struct_declaration (131)
        on left: 124 125
        on right: 122 123
    struct_declarator_list (132)
        on left: 126 127
        on right: 125 127
    struct_declarator (133)
        on left: 128 129 130
        on right: 126 127
    enum_specifier (134)
        on left: 131 132 133
        on right: 111
    identifier_opt (135)
        on left: 134 135
        on right: 131 132
    enumerator_list (136)
        on left: 136 137
        on right: 131 132 137
    enumerator (137)
        on left: 138 139
        on right: 136 137
    type_qualifier (138)
        on left: 140 141 142
        on right: 87 114 163 164
    function_specifier (139)
        on left: 143
        on right: 88
    declarator <symp> (140)
        on left: 144 145
        on right: 93 94 129 130 147 169 229
    direct_declarator <symp> (141)
        on left: 146 147 148 149 150 151 152 153 154 155 156 157 158
        on right: 144 145 148 149 150 151 152 153 154 155 156 157 158
    type_qualifier_list_opt (142)
        on left: 159 160
        on right: 161 162
    pointer <sym_type> (143)
        on left: 161 162
        on right: 144 162
    type_qualifier_list (144)
        on left: 163 164
        on right: 148 149 152 154 159 164
    parameter_type_list (145)
        on left: 165 166
        on right: 156
    parameter_list (146)
        on left: 167 168
        on right: 165 166 168
    parameter_declaration (147)
        on left: 169 170
        on right: 167 168
    identifier_list (148)
        on left: 171 172
        on right: 157 172
    type_name (149)
        on left: 173
        on right: 16 17 27 35
    initializer <symp> (150)
        on left: 174 175 176
        on right: 94 177 178
    initializer_list (151)
        on left: 177 178
        on right: 16 17 175 176 178
    designation_opt (152)
        on left: 179 180
        on right: 177 178
    designation (153)
        on left: 181
        on right: 179
    designator_list (154)
        on left: 182 183
        on right: 181 183
    designator (155)
        on left: 184 185
        on right: 182 183
    statement <stat> (156)
        on left: 186 187 188 189 190 191
        on right: 197 198 199 206 209 210 211
    loop_statement <stat> (157)
        on left: 192 193 194 195 196
        on right: 212 214 216 217
    labeled_statement <stat> (158)
        on left: 197 198 199
        on right: 186 192
    compound_statement <stat> (159)
        on left: 200
        on right: 187
    block_item_list <stat> (160)
        on left: 201 202
        on right: 202 203
    block_item_list_opt <stat> (161)
        on left: 203 204
        on right: 200 213 215 218 219 229
    block_item <stat> (162)
        on left: 205 206
        on right: 201 202
    expression_statement <expr> (163)
        on left: 207 208
        on right: 188 193 216 217 218 219
    selection_statement <stat> (164)
        on left: 209 210 211
        on right: 189 194
    iteration_statement <stat> (165)
        on left: 212 213 214 215 216 217 218 219
        on right: 190 195
    jump_statement <stat> (166)
        on left: 220 221 222 223 224
        on right: 191 196
    translation_unit (167)
        on left: 225 226
        on right: 0 226
    external_declaration (168)
        on left: 227 228
        on right: 225 226
    function_definition (169)
        on left: 229
        on right: 227
    declaration_list_opt (170)
        on left: 230 231
        on right: 229
    declaration_list (171)
        on left: 232 233
        on right: 230 233
    M <instr_number> (172)
        on left: 234
        on right: 61 63 197 202 209 210 212 213 214 215 216 217 218 219
    F (173)
        on left: 235
        on right: 216 217 218 219
    W (174)
        on left: 236
        on right: 212 213
    D (175)
        on left: 237
        on right: 214 215
    X (176)
        on left: 238
        on right: 200 212 213 216 217 218 219
    N <stat> (177)
        on left: 239
        on right: 209 210 216 217 218 219
    semicolon (178)
        on left: 240
        on right: 82 124 125 207 208 214 215 220 221 222 223 224


State 0

    0 $accept: . translation_unit $end

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    translation_unit           go to state 33
    external_declaration       go to state 34
    function_definition        go to state 35


State 1

  104 type_specifier: FLOAT .

    $default  reduce using rule 104 (type_specifier)


State 2

  101 type_specifier: SHORT .

    $default  reduce using rule 101 (type_specifier)


State 3

  100 type_specifier: CHAR .

    $default  reduce using rule 100 (type_specifier)


State 4

  108 type_specifier: _BOOL .

    $default  reduce using rule 108 (type_specifier)


State 5

  110 type_specifier: _IMAGINARY .

    $default  reduce using rule 110 (type_specifier)


State 6

  109 type_specifier: _COMPLEX .

    $default  reduce using rule 109 (type_specifier)


State 7

  102 type_specifier: INT .

    $default  reduce using rule 102 (type_specifier)


State 8

  105 type_specifier: DOUBLE .

    $default  reduce using rule 105 (type_specifier)


State 9

  103 type_specifier: LONG .

    $default  reduce using rule 103 (type_specifier)


State 10

   99 type_specifier: VOID .

    $default  reduce using rule 99 (type_specifier)


State 11

  106 type_specifier: SIGNED .

    $default  reduce using rule 106 (type_specifier)


State 12

   97 storage_class_specifier: AUTO .

    $default  reduce using rule 97 (storage_class_specifier)


State 13

  107 type_specifier: UNSIGNED .

    $default  reduce using rule 107 (type_specifier)


State 14

  131 enum_specifier: ENUM . identifier_opt '{' enumerator_list '}'
  132               | ENUM . identifier_opt '{' enumerator_list ',' '}'
  133               | ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 36

    $default  reduce using rule 135 (identifier_opt)

    identifier_opt  go to state 37


State 15

  121 struct_or_union: UNION .

    $default  reduce using rule 121 (struct_or_union)


State 16

  120 struct_or_union: STRUCT .

    $default  reduce using rule 120 (struct_or_union)


State 17

  140 type_qualifier: CONST .

    $default  reduce using rule 140 (type_qualifier)


State 18

   96 storage_class_specifier: STATIC .

    $default  reduce using rule 96 (storage_class_specifier)


State 19

   98 storage_class_specifier: REGISTER .

    $default  reduce using rule 98 (storage_class_specifier)


State 20

  141 type_qualifier: RESTRICT .

    $default  reduce using rule 141 (type_qualifier)


State 21

  142 type_qualifier: VOLATILE .

    $default  reduce using rule 142 (type_qualifier)


State 22

   95 storage_class_specifier: EXTERN .

    $default  reduce using rule 95 (storage_class_specifier)


State 23

  143 function_specifier: INLINE .

    $default  reduce using rule 143 (function_specifier)


State 24

  228 external_declaration: declaration .

    $default  reduce using rule 228 (external_declaration)


State 25

   82 declaration: declaration_specifiers . init_declarator_list_opt semicolon
  229 function_definition: declaration_specifiers . declarator declaration_list_opt changetable '{' block_item_list_opt '}'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 84 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 44
    direct_declarator         go to state 45
    pointer                   go to state 46


State 26

   85 declaration_specifiers: storage_class_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 48
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 27

   86 declaration_specifiers: type_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 49
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 28

  112 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 112 (type_specifier)


State 29

  117 struct_or_union_specifier: struct_or_union . '{' struct_declaration_list '}'
  118                          | struct_or_union . IDENTIFIER '{' struct_declaration_list '}'
  119                          | struct_or_union . IDENTIFIER

    IDENTIFIER  shift, and go to state 50
    '{'         shift, and go to state 51


State 30

  111 type_specifier: enum_specifier .

    $default  reduce using rule 111 (type_specifier)


State 31

   87 declaration_specifiers: type_qualifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 52
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 32

   88 declaration_specifiers: function_specifier . declaration_specifiers_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 90 (declaration_specifiers_opt)

    declaration_specifiers      go to state 47
    declaration_specifiers_opt  go to state 53
    storage_class_specifier     go to state 26
    type_specifier              go to state 27
    struct_or_union_specifier   go to state 28
    struct_or_union             go to state 29
    enum_specifier              go to state 30
    type_qualifier              go to state 31
    function_specifier          go to state 32


State 33

    0 $accept: translation_unit . $end
  226 translation_unit: translation_unit . external_declaration

    $end        shift, and go to state 54
    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    declaration                go to state 24
    declaration_specifiers     go to state 25
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    external_declaration       go to state 55
    function_definition        go to state 35


State 34

  225 translation_unit: external_declaration .

    $default  reduce using rule 225 (translation_unit)


State 35

  227 external_declaration: function_definition .

    $default  reduce using rule 227 (external_declaration)


State 36

  133 enum_specifier: ENUM IDENTIFIER .
  134 identifier_opt: IDENTIFIER .

    '{'       reduce using rule 134 (identifier_opt)
    $default  reduce using rule 133 (enum_specifier)


State 37

  131 enum_specifier: ENUM identifier_opt . '{' enumerator_list '}'
  132               | ENUM identifier_opt . '{' enumerator_list ',' '}'

    '{'  shift, and go to state 56


State 38

  146 direct_declarator: IDENTIFIER .

    $default  reduce using rule 146 (direct_declarator)


State 39

  161 pointer: MULT . type_qualifier_list_opt
  162        | MULT . type_qualifier_list_opt pointer

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 160 (type_qualifier_list_opt)

    type_qualifier           go to state 57
    type_qualifier_list_opt  go to state 58
    type_qualifier_list      go to state 59


State 40

  147 direct_declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    declarator         go to state 60
    direct_declarator  go to state 45
    pointer            go to state 46


State 41

   82 declaration: declaration_specifiers init_declarator_list_opt . semicolon

    ';'  shift, and go to state 61

    semicolon  go to state 62


State 42

   83 init_declarator_list_opt: init_declarator_list .
   92 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 63

    $default  reduce using rule 83 (init_declarator_list_opt)


State 43

   91 init_declarator_list: init_declarator .

    $default  reduce using rule 91 (init_declarator_list)


State 44

   93 init_declarator: declarator .
   94                | declarator . ASGN initializer
  229 function_definition: declaration_specifiers declarator . declaration_list_opt changetable '{' block_item_list_opt '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ASGN        shift, and go to state 64

    '{'       reduce using rule 231 (declaration_list_opt)
    $default  reduce using rule 93 (init_declarator)

    declaration                go to state 65
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    declaration_list_opt       go to state 67
    declaration_list           go to state 68


State 45

  145 declarator: direct_declarator .
  148 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  149                  | direct_declarator . '[' type_qualifier_list ']'
  150                  | direct_declarator . '[' assignment_expression ']'
  151                  | direct_declarator . '[' ']'
  152                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  153                  | direct_declarator . '[' STATIC assignment_expression ']'
  154                  | direct_declarator . '[' type_qualifier_list MULT ']'
  155                  | direct_declarator . '[' MULT ']'
  156                  | direct_declarator . '(' changetable parameter_type_list ')'
  157                  | direct_declarator . '(' identifier_list ')'
  158                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 145 (declarator)


State 46

  144 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 38
    '('         shift, and go to state 40

    direct_declarator  go to state 71


State 47

   89 declaration_specifiers_opt: declaration_specifiers .

    $default  reduce using rule 89 (declaration_specifiers_opt)


State 48

   85 declaration_specifiers: storage_class_specifier declaration_specifiers_opt .

    $default  reduce using rule 85 (declaration_specifiers)


State 49

   86 declaration_specifiers: type_specifier declaration_specifiers_opt .

    $default  reduce using rule 86 (declaration_specifiers)


State 50

  118 struct_or_union_specifier: struct_or_union IDENTIFIER . '{' struct_declaration_list '}'
  119                          | struct_or_union IDENTIFIER .

    '{'  shift, and go to state 72

    $default  reduce using rule 119 (struct_or_union_specifier)


State 51

  117 struct_or_union_specifier: struct_or_union '{' . struct_declaration_list '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    type_specifier             go to state 73
    specifier_qualifier_list   go to state 74
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 75
    struct_declaration         go to state 76
    enum_specifier             go to state 30
    type_qualifier             go to state 77


State 52

   87 declaration_specifiers: type_qualifier declaration_specifiers_opt .

    $default  reduce using rule 87 (declaration_specifiers)


State 53

   88 declaration_specifiers: function_specifier declaration_specifiers_opt .

    $default  reduce using rule 88 (declaration_specifiers)


State 54

    0 $accept: translation_unit $end .

    $default  accept


State 55

  226 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 226 (translation_unit)


State 56

  131 enum_specifier: ENUM identifier_opt '{' . enumerator_list '}'
  132               | ENUM identifier_opt '{' . enumerator_list ',' '}'

    IDENTIFIER  shift, and go to state 78

    enumerator_list  go to state 79
    enumerator       go to state 80


State 57

  163 type_qualifier_list: type_qualifier .

    $default  reduce using rule 163 (type_qualifier_list)


State 58

  161 pointer: MULT type_qualifier_list_opt .
  162        | MULT type_qualifier_list_opt . pointer

    MULT  shift, and go to state 39

    $default  reduce using rule 161 (pointer)

    pointer  go to state 81


State 59

  159 type_qualifier_list_opt: type_qualifier_list .
  164 type_qualifier_list: type_qualifier_list . type_qualifier

    CONST     shift, and go to state 17
    RESTRICT  shift, and go to state 20
    VOLATILE  shift, and go to state 21

    $default  reduce using rule 159 (type_qualifier_list_opt)

    type_qualifier  go to state 82


State 60

  147 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 83


State 61

  240 semicolon: ';' .

    $default  reduce using rule 240 (semicolon)


State 62

   82 declaration: declaration_specifiers init_declarator_list_opt semicolon .

    $default  reduce using rule 82 (declaration)


State 63

   92 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    init_declarator    go to state 84
    declarator         go to state 85
    direct_declarator  go to state 45
    pointer            go to state 46


State 64

   94 init_declarator: declarator ASGN . initializer

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 101

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    initializer                go to state 120


State 65

  232 declaration_list: declaration .

    $default  reduce using rule 232 (declaration_list)


State 66

   82 declaration: declaration_specifiers . init_declarator_list_opt semicolon

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 84 (init_declarator_list_opt)

    init_declarator_list_opt  go to state 41
    init_declarator_list      go to state 42
    init_declarator           go to state 43
    declarator                go to state 85
    direct_declarator         go to state 45
    pointer                   go to state 46


State 67

  229 function_definition: declaration_specifiers declarator declaration_list_opt . changetable '{' block_item_list_opt '}'

    $default  reduce using rule 1 (changetable)

    changetable  go to state 121


State 68

  230 declaration_list_opt: declaration_list .
  233 declaration_list: declaration_list . declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23

    $default  reduce using rule 230 (declaration_list_opt)

    declaration                go to state 122
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32


State 69

  156 direct_declarator: direct_declarator '(' . changetable parameter_type_list ')'
  157                  | direct_declarator '(' . identifier_list ')'
  158                  | direct_declarator '(' . changetable ')'

    IDENTIFIER  shift, and go to state 123

    $default  reduce using rule 1 (changetable)

    changetable      go to state 124
    identifier_list  go to state 125


State 70

  148 direct_declarator: direct_declarator '[' . type_qualifier_list assignment_expression ']'
  149                  | direct_declarator '[' . type_qualifier_list ']'
  150                  | direct_declarator '[' . assignment_expression ']'
  151                  | direct_declarator '[' . ']'
  152                  | direct_declarator '[' . STATIC type_qualifier_list assignment_expression ']'
  153                  | direct_declarator '[' . STATIC assignment_expression ']'
  154                  | direct_declarator '[' . type_qualifier_list MULT ']'
  155                  | direct_declarator '[' . MULT ']'

    SIZEOF          shift, and go to state 86
    CONST           shift, and go to state 17
    STATIC          shift, and go to state 126
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 127
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    ']'             shift, and go to state 128

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 129
    type_qualifier             go to state 57
    type_qualifier_list        go to state 130


State 71

  144 declarator: pointer direct_declarator .
  148 direct_declarator: direct_declarator . '[' type_qualifier_list assignment_expression ']'
  149                  | direct_declarator . '[' type_qualifier_list ']'
  150                  | direct_declarator . '[' assignment_expression ']'
  151                  | direct_declarator . '[' ']'
  152                  | direct_declarator . '[' STATIC type_qualifier_list assignment_expression ']'
  153                  | direct_declarator . '[' STATIC assignment_expression ']'
  154                  | direct_declarator . '[' type_qualifier_list MULT ']'
  155                  | direct_declarator . '[' MULT ']'
  156                  | direct_declarator . '(' changetable parameter_type_list ')'
  157                  | direct_declarator . '(' identifier_list ')'
  158                  | direct_declarator . '(' changetable ')'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 144 (declarator)


State 72

  118 struct_or_union_specifier: struct_or_union IDENTIFIER '{' . struct_declaration_list '}'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    type_specifier             go to state 73
    specifier_qualifier_list   go to state 74
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration_list    go to state 131
    struct_declaration         go to state 76
    enum_specifier             go to state 30
    type_qualifier             go to state 77


State 73

  113 specifier_qualifier_list: type_specifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 73
    specifier_qualifier_list      go to state 132
    specifier_qualifier_list_opt  go to state 133
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 77


State 74

  124 struct_declaration: specifier_qualifier_list . semicolon
  125                   | specifier_qualifier_list . struct_declarator_list semicolon

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40
    ':'         shift, and go to state 134
    ';'         shift, and go to state 61

    struct_declarator_list  go to state 135
    struct_declarator       go to state 136
    declarator              go to state 137
    direct_declarator       go to state 45
    pointer                 go to state 46
    semicolon               go to state 138


State 75

  117 struct_or_union_specifier: struct_or_union '{' struct_declaration_list . '}'
  123 struct_declaration_list: struct_declaration_list . struct_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    '}'         shift, and go to state 139

    type_specifier             go to state 73
    specifier_qualifier_list   go to state 74
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 140
    enum_specifier             go to state 30
    type_qualifier             go to state 77


State 76

  122 struct_declaration_list: struct_declaration .

    $default  reduce using rule 122 (struct_declaration_list)


State 77

  114 specifier_qualifier_list: type_qualifier . specifier_qualifier_list_opt

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21

    $default  reduce using rule 116 (specifier_qualifier_list_opt)

    type_specifier                go to state 73
    specifier_qualifier_list      go to state 132
    specifier_qualifier_list_opt  go to state 141
    struct_or_union_specifier     go to state 28
    struct_or_union               go to state 29
    enum_specifier                go to state 30
    type_qualifier                go to state 77


State 78

  138 enumerator: IDENTIFIER .
  139           | IDENTIFIER . ASGN constant_expression

    ASGN  shift, and go to state 142

    $default  reduce using rule 138 (enumerator)


State 79

  131 enum_specifier: ENUM identifier_opt '{' enumerator_list . '}'
  132               | ENUM identifier_opt '{' enumerator_list . ',' '}'
  137 enumerator_list: enumerator_list . ',' enumerator

    '}'  shift, and go to state 143
    ','  shift, and go to state 144


State 80

  136 enumerator_list: enumerator .

    $default  reduce using rule 136 (enumerator_list)


State 81

  162 pointer: MULT type_qualifier_list_opt pointer .

    $default  reduce using rule 162 (pointer)


State 82

  164 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 164 (type_qualifier_list)


State 83

  147 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 147 (direct_declarator)


State 84

   92 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 92 (init_declarator_list)


State 85

   93 init_declarator: declarator .
   94                | declarator . ASGN initializer

    ASGN  shift, and go to state 64

    $default  reduce using rule 93 (init_declarator)


State 86

   26 unary_expression: SIZEOF . unary_expression
   27                 | SIZEOF . '(' type_name ')'

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 145

    constant            go to state 102
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 146
    unary_operator      go to state 106


State 87

    5 primary_expression: IDENTIFIER .

    $default  reduce using rule 5 (primary_expression)


State 88

    2 constant: INTEGER_CONST .

    $default  reduce using rule 2 (constant)


State 89

    4 constant: CHAR_CONST .

    $default  reduce using rule 4 (constant)


State 90

    3 constant: FLOAT_CONST .

    $default  reduce using rule 3 (constant)


State 91

    7 primary_expression: STRING_LITERAL .

    $default  reduce using rule 7 (primary_expression)


State 92

   30 unary_operator: PLUS .

    $default  reduce using rule 30 (unary_operator)


State 93

   31 unary_operator: MINUS .

    $default  reduce using rule 31 (unary_operator)


State 94

   29 unary_operator: MULT .

    $default  reduce using rule 29 (unary_operator)


State 95

   23 unary_expression: INCREMENT . unary_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 147

    constant            go to state 102
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 148
    unary_operator      go to state 106


State 96

   24 unary_expression: DECREMENT . unary_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 147

    constant            go to state 102
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 149
    unary_operator      go to state 106


State 97

   28 unary_operator: BITWISE_AND .

    $default  reduce using rule 28 (unary_operator)


State 98

   32 unary_operator: BITWISE_NOT .

    $default  reduce using rule 32 (unary_operator)


State 99

   33 unary_operator: LOGICAL_NOT .

    $default  reduce using rule 33 (unary_operator)


State 100

    8 primary_expression: '(' . expression ')'
   16 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   17                   | '(' . type_name ')' '{' initializer_list ',' '}'
   35 cast_expression: '(' . type_name ')' cast_expression

    SIZEOF          shift, and go to state 86
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 151
    type_specifier             go to state 73
    specifier_qualifier_list   go to state 152
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 77
    type_name                  go to state 153


State 101

  175 initializer: '{' . initializer_list '}'
  176            | '{' . initializer_list ',' '}'

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 180 (designation_opt)

    initializer_list  go to state 156
    designation_opt   go to state 157
    designation       go to state 158
    designator_list   go to state 159
    designator        go to state 160


State 102

    6 primary_expression: constant .

    $default  reduce using rule 6 (primary_expression)


State 103

    9 postfix_expression: primary_expression .

    $default  reduce using rule 9 (postfix_expression)


State 104

   10 postfix_expression: postfix_expression . '[' expression ']'
   11                   | postfix_expression . '(' argument_expression_list_opt ')'
   12                   | postfix_expression . '.' IDENTIFIER
   13                   | postfix_expression . ARROW IDENTIFIER
   14                   | postfix_expression . INCREMENT
   15                   | postfix_expression . DECREMENT
   22 unary_expression: postfix_expression .

    ARROW      shift, and go to state 161
    INCREMENT  shift, and go to state 162
    DECREMENT  shift, and go to state 163
    '('        shift, and go to state 164
    '['        shift, and go to state 165
    '.'        shift, and go to state 166

    $default  reduce using rule 22 (unary_expression)


State 105

   34 cast_expression: unary_expression .
   67 assignment_expression: unary_expression . assignment_operator assignment_expression

    ASGN         shift, and go to state 167
    ADD_ASGN     shift, and go to state 168
    SUB_ASGN     shift, and go to state 169
    MULT_ASGN    shift, and go to state 170
    DIV_ASGN     shift, and go to state 171
    MOD_ASGN     shift, and go to state 172
    LSHIFT_ASGN  shift, and go to state 173
    RSHIFT_ASGN  shift, and go to state 174
    AND_ASGN     shift, and go to state 175
    OR_ASGN      shift, and go to state 176
    XOR_ASGN     shift, and go to state 177

    $default  reduce using rule 34 (cast_expression)

    assignment_operator  go to state 178


State 106

   25 unary_expression: unary_operator . cast_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant            go to state 102
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 179
    unary_operator      go to state 106
    cast_expression     go to state 180


State 107

   36 multiplicative_expression: cast_expression .

    $default  reduce using rule 36 (multiplicative_expression)


State 108

   37 multiplicative_expression: multiplicative_expression . MULT cast_expression
   38                          | multiplicative_expression . DIVIDE cast_expression
   39                          | multiplicative_expression . MODULO cast_expression
   40 additive_expression: multiplicative_expression .

    MULT    shift, and go to state 181
    DIVIDE  shift, and go to state 182
    MODULO  shift, and go to state 183

    $default  reduce using rule 40 (additive_expression)


State 109

   41 additive_expression: additive_expression . PLUS multiplicative_expression
   42                    | additive_expression . MINUS multiplicative_expression
   43 shift_expression: additive_expression .

    PLUS   shift, and go to state 184
    MINUS  shift, and go to state 185

    $default  reduce using rule 43 (shift_expression)


State 110

   44 shift_expression: shift_expression . LSHIFT additive_expression
   45                 | shift_expression . RSHIFT additive_expression
   46 relational_expression: shift_expression .

    RSHIFT  shift, and go to state 186
    LSHIFT  shift, and go to state 187

    $default  reduce using rule 46 (relational_expression)


State 111

   47 relational_expression: relational_expression . LT shift_expression
   48                      | relational_expression . GT shift_expression
   49                      | relational_expression . LEQ shift_expression
   50                      | relational_expression . GEQ shift_expression
   51 equality_expression: relational_expression .

    LT   shift, and go to state 188
    GT   shift, and go to state 189
    LEQ  shift, and go to state 190
    GEQ  shift, and go to state 191

    $default  reduce using rule 51 (equality_expression)


State 112

   52 equality_expression: equality_expression . EQ relational_expression
   53                    | equality_expression . NEQ relational_expression
   54 and_expression: equality_expression .

    EQ   shift, and go to state 192
    NEQ  shift, and go to state 193

    $default  reduce using rule 54 (and_expression)


State 113

   55 and_expression: and_expression . BITWISE_AND equality_expression
   56 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 194

    $default  reduce using rule 56 (exclusive_or_expression)


State 114

   57 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   58 inclusive_or_expression: exclusive_or_expression .

    XOR  shift, and go to state 195

    $default  reduce using rule 58 (inclusive_or_expression)


State 115

   59 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   60 logical_and_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 196

    $default  reduce using rule 60 (logical_and_expression)


State 116

   61 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   62 logical_or_expression: logical_and_expression .

    LOGICAL_AND  shift, and go to state 197

    $default  reduce using rule 62 (logical_or_expression)


State 117

   63 logical_or_expression: logical_or_expression . LOGICAL_OR M logical_and_expression
   64 conditional_expression: logical_or_expression .
   65                       | logical_or_expression . '?' expression ':' conditional_expression

    LOGICAL_OR  shift, and go to state 198
    '?'         shift, and go to state 199

    $default  reduce using rule 64 (conditional_expression)


State 118

   66 assignment_expression: conditional_expression .

    $default  reduce using rule 66 (assignment_expression)


State 119

  174 initializer: assignment_expression .

    $default  reduce using rule 174 (initializer)


State 120

   94 init_declarator: declarator ASGN initializer .

    $default  reduce using rule 94 (init_declarator)


State 121

  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable . '{' block_item_list_opt '}'

    '{'  shift, and go to state 200


State 122

  233 declaration_list: declaration_list declaration .

    $default  reduce using rule 233 (declaration_list)


State 123

  171 identifier_list: IDENTIFIER .

    $default  reduce using rule 171 (identifier_list)


State 124

  156 direct_declarator: direct_declarator '(' changetable . parameter_type_list ')'
  158                  | direct_declarator '(' changetable . ')'

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ')'         shift, and go to state 201

    declaration_specifiers     go to state 202
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_type_list        go to state 203
    parameter_list             go to state 204
    parameter_declaration      go to state 205


State 125

  157 direct_declarator: direct_declarator '(' identifier_list . ')'
  172 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 206
    ','  shift, and go to state 207


State 126

  152 direct_declarator: direct_declarator '[' STATIC . type_qualifier_list assignment_expression ']'
  153                  | direct_declarator '[' STATIC . assignment_expression ']'

    SIZEOF          shift, and go to state 86
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 208
    type_qualifier             go to state 57
    type_qualifier_list        go to state 209


State 127

   29 unary_operator: MULT .
  155 direct_declarator: direct_declarator '[' MULT . ']'

    ']'  shift, and go to state 210

    $default  reduce using rule 29 (unary_operator)


State 128

  151 direct_declarator: direct_declarator '[' ']' .

    $default  reduce using rule 151 (direct_declarator)


State 129

  150 direct_declarator: direct_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 211


State 130

  148 direct_declarator: direct_declarator '[' type_qualifier_list . assignment_expression ']'
  149                  | direct_declarator '[' type_qualifier_list . ']'
  154                  | direct_declarator '[' type_qualifier_list . MULT ']'
  164 type_qualifier_list: type_qualifier_list . type_qualifier

    SIZEOF          shift, and go to state 86
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 212
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    ']'             shift, and go to state 213

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 214
    type_qualifier             go to state 82


State 131

  118 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list . '}'
  123 struct_declaration_list: struct_declaration_list . struct_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    '}'         shift, and go to state 215

    type_specifier             go to state 73
    specifier_qualifier_list   go to state 74
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    struct_declaration         go to state 140
    enum_specifier             go to state 30
    type_qualifier             go to state 77


State 132

  115 specifier_qualifier_list_opt: specifier_qualifier_list .

    $default  reduce using rule 115 (specifier_qualifier_list_opt)


State 133

  113 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt .

    $default  reduce using rule 113 (specifier_qualifier_list)


State 134

  128 struct_declarator: ':' . constant_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 216
    constant_expression        go to state 217


State 135

  125 struct_declaration: specifier_qualifier_list struct_declarator_list . semicolon
  127 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 218
    ';'  shift, and go to state 61

    semicolon  go to state 219


State 136

  126 struct_declarator_list: struct_declarator .

    $default  reduce using rule 126 (struct_declarator_list)


State 137

  129 struct_declarator: declarator . ':' constant_expression
  130                  | declarator .

    ':'  shift, and go to state 220

    $default  reduce using rule 130 (struct_declarator)


State 138

  124 struct_declaration: specifier_qualifier_list semicolon .

    $default  reduce using rule 124 (struct_declaration)


State 139

  117 struct_or_union_specifier: struct_or_union '{' struct_declaration_list '}' .

    $default  reduce using rule 117 (struct_or_union_specifier)


State 140

  123 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 123 (struct_declaration_list)


State 141

  114 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt .

    $default  reduce using rule 114 (specifier_qualifier_list)


State 142

  139 enumerator: IDENTIFIER ASGN . constant_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 216
    constant_expression        go to state 221


State 143

  131 enum_specifier: ENUM identifier_opt '{' enumerator_list '}' .

    $default  reduce using rule 131 (enum_specifier)


State 144

  132 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' . '}'
  137 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 78
    '}'         shift, and go to state 222

    enumerator  go to state 223


State 145

    8 primary_expression: '(' . expression ')'
   16 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   17                   | '(' . type_name ')' '{' initializer_list ',' '}'
   27 unary_expression: SIZEOF '(' . type_name ')'

    SIZEOF          shift, and go to state 86
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 151
    type_specifier             go to state 73
    specifier_qualifier_list   go to state 152
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 77
    type_name                  go to state 224


State 146

   26 unary_expression: SIZEOF unary_expression .

    $default  reduce using rule 26 (unary_expression)


State 147

    8 primary_expression: '(' . expression ')'
   16 postfix_expression: '(' . type_name ')' '{' initializer_list '}'
   17                   | '(' . type_name ')' '{' initializer_list ',' '}'

    SIZEOF          shift, and go to state 86
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 151
    type_specifier             go to state 73
    specifier_qualifier_list   go to state 152
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 77
    type_name                  go to state 225


State 148

   23 unary_expression: INCREMENT unary_expression .

    $default  reduce using rule 23 (unary_expression)


State 149

   24 unary_expression: DECREMENT unary_expression .

    $default  reduce using rule 24 (unary_expression)


State 150

   79 expression: assignment_expression .

    $default  reduce using rule 79 (expression)


State 151

    8 primary_expression: '(' expression . ')'
   80 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 226
    ','  shift, and go to state 227


State 152

  173 type_name: specifier_qualifier_list .

    $default  reduce using rule 173 (type_name)


State 153

   16 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   17                   | '(' type_name . ')' '{' initializer_list ',' '}'
   35 cast_expression: '(' type_name . ')' cast_expression

    ')'  shift, and go to state 228


State 154

  184 designator: '[' . constant_expression ']'

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 216
    constant_expression        go to state 229


State 155

  185 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 230


State 156

  175 initializer: '{' initializer_list . '}'
  176            | '{' initializer_list . ',' '}'
  178 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 231
    ','  shift, and go to state 232


State 157

  177 initializer_list: designation_opt . initializer

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 101

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    initializer                go to state 233


State 158

  179 designation_opt: designation .

    $default  reduce using rule 179 (designation_opt)


State 159

  181 designation: designator_list . ASGN
  183 designator_list: designator_list . designator

    ASGN  shift, and go to state 234
    '['   shift, and go to state 154
    '.'   shift, and go to state 155

    designator  go to state 235


State 160

  182 designator_list: designator .

    $default  reduce using rule 182 (designator_list)


State 161

   13 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 236


State 162

   14 postfix_expression: postfix_expression INCREMENT .

    $default  reduce using rule 14 (postfix_expression)


State 163

   15 postfix_expression: postfix_expression DECREMENT .

    $default  reduce using rule 15 (postfix_expression)


State 164

   11 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    $default  reduce using rule 21 (argument_expression_list_opt)

    constant                      go to state 102
    primary_expression            go to state 103
    postfix_expression            go to state 104
    argument_expression_list      go to state 237
    argument_expression_list_opt  go to state 238
    unary_expression              go to state 105
    unary_operator                go to state 106
    cast_expression               go to state 107
    multiplicative_expression     go to state 108
    additive_expression           go to state 109
    shift_expression              go to state 110
    relational_expression         go to state 111
    equality_expression           go to state 112
    and_expression                go to state 113
    exclusive_or_expression       go to state 114
    inclusive_or_expression       go to state 115
    logical_and_expression        go to state 116
    logical_or_expression         go to state 117
    conditional_expression        go to state 118
    assignment_expression         go to state 239


State 165

   10 postfix_expression: postfix_expression '[' . expression ']'

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 240


State 166

   12 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 241


State 167

   68 assignment_operator: ASGN .

    $default  reduce using rule 68 (assignment_operator)


State 168

   72 assignment_operator: ADD_ASGN .

    $default  reduce using rule 72 (assignment_operator)


State 169

   73 assignment_operator: SUB_ASGN .

    $default  reduce using rule 73 (assignment_operator)


State 170

   69 assignment_operator: MULT_ASGN .

    $default  reduce using rule 69 (assignment_operator)


State 171

   70 assignment_operator: DIV_ASGN .

    $default  reduce using rule 70 (assignment_operator)


State 172

   71 assignment_operator: MOD_ASGN .

    $default  reduce using rule 71 (assignment_operator)


State 173

   74 assignment_operator: LSHIFT_ASGN .

    $default  reduce using rule 74 (assignment_operator)


State 174

   75 assignment_operator: RSHIFT_ASGN .

    $default  reduce using rule 75 (assignment_operator)


State 175

   76 assignment_operator: AND_ASGN .

    $default  reduce using rule 76 (assignment_operator)


State 176

   78 assignment_operator: OR_ASGN .

    $default  reduce using rule 78 (assignment_operator)


State 177

   77 assignment_operator: XOR_ASGN .

    $default  reduce using rule 77 (assignment_operator)


State 178

   67 assignment_expression: unary_expression assignment_operator . assignment_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 242


State 179

   34 cast_expression: unary_expression .

    $default  reduce using rule 34 (cast_expression)


State 180

   25 unary_expression: unary_operator cast_expression .

    $default  reduce using rule 25 (unary_expression)


State 181

   37 multiplicative_expression: multiplicative_expression MULT . cast_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant            go to state 102
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 179
    unary_operator      go to state 106
    cast_expression     go to state 243


State 182

   38 multiplicative_expression: multiplicative_expression DIVIDE . cast_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant            go to state 102
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 179
    unary_operator      go to state 106
    cast_expression     go to state 244


State 183

   39 multiplicative_expression: multiplicative_expression MODULO . cast_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant            go to state 102
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 179
    unary_operator      go to state 106
    cast_expression     go to state 245


State 184

   41 additive_expression: additive_expression PLUS . multiplicative_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 246


State 185

   42 additive_expression: additive_expression MINUS . multiplicative_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 247


State 186

   45 shift_expression: shift_expression RSHIFT . additive_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 248


State 187

   44 shift_expression: shift_expression LSHIFT . additive_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 249


State 188

   47 relational_expression: relational_expression LT . shift_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 250


State 189

   48 relational_expression: relational_expression GT . shift_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 251


State 190

   49 relational_expression: relational_expression LEQ . shift_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 252


State 191

   50 relational_expression: relational_expression GEQ . shift_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 253


State 192

   52 equality_expression: equality_expression EQ . relational_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 254


State 193

   53 equality_expression: equality_expression NEQ . relational_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 255


State 194

   55 and_expression: and_expression BITWISE_AND . equality_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 256


State 195

   57 exclusive_or_expression: exclusive_or_expression XOR . and_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 257


State 196

   59 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 258


State 197

   61 logical_and_expression: logical_and_expression LOGICAL_AND . M inclusive_or_expression

    $default  reduce using rule 234 (M)

    M  go to state 259


State 198

   63 logical_or_expression: logical_or_expression LOGICAL_OR . M logical_and_expression

    $default  reduce using rule 234 (M)

    M  go to state 260


State 199

   65 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 261


State 200

  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' . block_item_list_opt '}'

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 272
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 281
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 201

  158 direct_declarator: direct_declarator '(' changetable ')' .

    $default  reduce using rule 158 (direct_declarator)


State 202

  169 parameter_declaration: declaration_specifiers . declarator
  170                      | declaration_specifiers .

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40

    $default  reduce using rule 170 (parameter_declaration)

    declarator         go to state 288
    direct_declarator  go to state 45
    pointer            go to state 46


State 203

  156 direct_declarator: direct_declarator '(' changetable parameter_type_list . ')'

    ')'  shift, and go to state 289


State 204

  165 parameter_type_list: parameter_list .
  166                    | parameter_list . ',' ELLIPSIS
  168 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 290

    $default  reduce using rule 165 (parameter_type_list)


State 205

  167 parameter_list: parameter_declaration .

    $default  reduce using rule 167 (parameter_list)


State 206

  157 direct_declarator: direct_declarator '(' identifier_list ')' .

    $default  reduce using rule 157 (direct_declarator)


State 207

  172 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 291


State 208

  153 direct_declarator: direct_declarator '[' STATIC assignment_expression . ']'

    ']'  shift, and go to state 292


State 209

  152 direct_declarator: direct_declarator '[' STATIC type_qualifier_list . assignment_expression ']'
  164 type_qualifier_list: type_qualifier_list . type_qualifier

    SIZEOF          shift, and go to state 86
    CONST           shift, and go to state 17
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 293
    type_qualifier             go to state 82


State 210

  155 direct_declarator: direct_declarator '[' MULT ']' .

    $default  reduce using rule 155 (direct_declarator)


State 211

  150 direct_declarator: direct_declarator '[' assignment_expression ']' .

    $default  reduce using rule 150 (direct_declarator)


State 212

   29 unary_operator: MULT .
  154 direct_declarator: direct_declarator '[' type_qualifier_list MULT . ']'

    ']'  shift, and go to state 294

    $default  reduce using rule 29 (unary_operator)


State 213

  149 direct_declarator: direct_declarator '[' type_qualifier_list ']' .

    $default  reduce using rule 149 (direct_declarator)


State 214

  148 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 295


State 215

  118 struct_or_union_specifier: struct_or_union IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 118 (struct_or_union_specifier)


State 216

   81 constant_expression: conditional_expression .

    $default  reduce using rule 81 (constant_expression)


State 217

  128 struct_declarator: ':' constant_expression .

    $default  reduce using rule 128 (struct_declarator)


State 218

  127 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    IDENTIFIER  shift, and go to state 38
    MULT        shift, and go to state 39
    '('         shift, and go to state 40
    ':'         shift, and go to state 134

    struct_declarator  go to state 296
    declarator         go to state 137
    direct_declarator  go to state 45
    pointer            go to state 46


State 219

  125 struct_declaration: specifier_qualifier_list struct_declarator_list semicolon .

    $default  reduce using rule 125 (struct_declaration)


State 220

  129 struct_declarator: declarator ':' . constant_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 216
    constant_expression        go to state 297


State 221

  139 enumerator: IDENTIFIER ASGN constant_expression .

    $default  reduce using rule 139 (enumerator)


State 222

  132 enum_specifier: ENUM identifier_opt '{' enumerator_list ',' '}' .

    $default  reduce using rule 132 (enum_specifier)


State 223

  137 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 137 (enumerator_list)


State 224

   16 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   17                   | '(' type_name . ')' '{' initializer_list ',' '}'
   27 unary_expression: SIZEOF '(' type_name . ')'

    ')'  shift, and go to state 298


State 225

   16 postfix_expression: '(' type_name . ')' '{' initializer_list '}'
   17                   | '(' type_name . ')' '{' initializer_list ',' '}'

    ')'  shift, and go to state 299


State 226

    8 primary_expression: '(' expression ')' .

    $default  reduce using rule 8 (primary_expression)


State 227

   80 expression: expression ',' . assignment_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 300


State 228

   16 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   17                   | '(' type_name ')' . '{' initializer_list ',' '}'
   35 cast_expression: '(' type_name ')' . cast_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 301

    constant            go to state 102
    primary_expression  go to state 103
    postfix_expression  go to state 104
    unary_expression    go to state 179
    unary_operator      go to state 106
    cast_expression     go to state 302


State 229

  184 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 303


State 230

  185 designator: '.' IDENTIFIER .

    $default  reduce using rule 185 (designator)


State 231

  175 initializer: '{' initializer_list '}' .

    $default  reduce using rule 175 (initializer)


State 232

  176 initializer: '{' initializer_list ',' . '}'
  178 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 154
    '.'  shift, and go to state 155
    '}'  shift, and go to state 304

    $default  reduce using rule 180 (designation_opt)

    designation_opt  go to state 305
    designation      go to state 158
    designator_list  go to state 159
    designator       go to state 160


State 233

  177 initializer_list: designation_opt initializer .

    $default  reduce using rule 177 (initializer_list)


State 234

  181 designation: designator_list ASGN .

    $default  reduce using rule 181 (designation)


State 235

  183 designator_list: designator_list designator .

    $default  reduce using rule 183 (designator_list)


State 236

   13 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


State 237

   19 argument_expression_list: argument_expression_list . ',' assignment_expression
   20 argument_expression_list_opt: argument_expression_list .

    ','  shift, and go to state 306

    $default  reduce using rule 20 (argument_expression_list_opt)


State 238

   11 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 307


State 239

   18 argument_expression_list: assignment_expression .

    $default  reduce using rule 18 (argument_expression_list)


State 240

   10 postfix_expression: postfix_expression '[' expression . ']'
   80 expression: expression . ',' assignment_expression

    ']'  shift, and go to state 308
    ','  shift, and go to state 227


State 241

   12 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 12 (postfix_expression)


State 242

   67 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 67 (assignment_expression)


State 243

   37 multiplicative_expression: multiplicative_expression MULT cast_expression .

    $default  reduce using rule 37 (multiplicative_expression)


State 244

   38 multiplicative_expression: multiplicative_expression DIVIDE cast_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 245

   39 multiplicative_expression: multiplicative_expression MODULO cast_expression .

    $default  reduce using rule 39 (multiplicative_expression)


State 246

   37 multiplicative_expression: multiplicative_expression . MULT cast_expression
   38                          | multiplicative_expression . DIVIDE cast_expression
   39                          | multiplicative_expression . MODULO cast_expression
   41 additive_expression: additive_expression PLUS multiplicative_expression .

    MULT    shift, and go to state 181
    DIVIDE  shift, and go to state 182
    MODULO  shift, and go to state 183

    $default  reduce using rule 41 (additive_expression)


State 247

   37 multiplicative_expression: multiplicative_expression . MULT cast_expression
   38                          | multiplicative_expression . DIVIDE cast_expression
   39                          | multiplicative_expression . MODULO cast_expression
   42 additive_expression: additive_expression MINUS multiplicative_expression .

    MULT    shift, and go to state 181
    DIVIDE  shift, and go to state 182
    MODULO  shift, and go to state 183

    $default  reduce using rule 42 (additive_expression)


State 248

   41 additive_expression: additive_expression . PLUS multiplicative_expression
   42                    | additive_expression . MINUS multiplicative_expression
   45 shift_expression: shift_expression RSHIFT additive_expression .

    PLUS   shift, and go to state 184
    MINUS  shift, and go to state 185

    $default  reduce using rule 45 (shift_expression)


State 249

   41 additive_expression: additive_expression . PLUS multiplicative_expression
   42                    | additive_expression . MINUS multiplicative_expression
   44 shift_expression: shift_expression LSHIFT additive_expression .

    PLUS   shift, and go to state 184
    MINUS  shift, and go to state 185

    $default  reduce using rule 44 (shift_expression)


State 250

   44 shift_expression: shift_expression . LSHIFT additive_expression
   45                 | shift_expression . RSHIFT additive_expression
   47 relational_expression: relational_expression LT shift_expression .

    RSHIFT  shift, and go to state 186
    LSHIFT  shift, and go to state 187

    $default  reduce using rule 47 (relational_expression)


State 251

   44 shift_expression: shift_expression . LSHIFT additive_expression
   45                 | shift_expression . RSHIFT additive_expression
   48 relational_expression: relational_expression GT shift_expression .

    RSHIFT  shift, and go to state 186
    LSHIFT  shift, and go to state 187

    $default  reduce using rule 48 (relational_expression)


State 252

   44 shift_expression: shift_expression . LSHIFT additive_expression
   45                 | shift_expression . RSHIFT additive_expression
   49 relational_expression: relational_expression LEQ shift_expression .

    RSHIFT  shift, and go to state 186
    LSHIFT  shift, and go to state 187

    $default  reduce using rule 49 (relational_expression)


State 253

   44 shift_expression: shift_expression . LSHIFT additive_expression
   45                 | shift_expression . RSHIFT additive_expression
   50 relational_expression: relational_expression GEQ shift_expression .

    RSHIFT  shift, and go to state 186
    LSHIFT  shift, and go to state 187

    $default  reduce using rule 50 (relational_expression)


State 254

   47 relational_expression: relational_expression . LT shift_expression
   48                      | relational_expression . GT shift_expression
   49                      | relational_expression . LEQ shift_expression
   50                      | relational_expression . GEQ shift_expression
   52 equality_expression: equality_expression EQ relational_expression .

    LT   shift, and go to state 188
    GT   shift, and go to state 189
    LEQ  shift, and go to state 190
    GEQ  shift, and go to state 191

    $default  reduce using rule 52 (equality_expression)


State 255

   47 relational_expression: relational_expression . LT shift_expression
   48                      | relational_expression . GT shift_expression
   49                      | relational_expression . LEQ shift_expression
   50                      | relational_expression . GEQ shift_expression
   53 equality_expression: equality_expression NEQ relational_expression .

    LT   shift, and go to state 188
    GT   shift, and go to state 189
    LEQ  shift, and go to state 190
    GEQ  shift, and go to state 191

    $default  reduce using rule 53 (equality_expression)


State 256

   52 equality_expression: equality_expression . EQ relational_expression
   53                    | equality_expression . NEQ relational_expression
   55 and_expression: and_expression BITWISE_AND equality_expression .

    EQ   shift, and go to state 192
    NEQ  shift, and go to state 193

    $default  reduce using rule 55 (and_expression)


State 257

   55 and_expression: and_expression . BITWISE_AND equality_expression
   57 exclusive_or_expression: exclusive_or_expression XOR and_expression .

    BITWISE_AND  shift, and go to state 194

    $default  reduce using rule 57 (exclusive_or_expression)


State 258

   57 exclusive_or_expression: exclusive_or_expression . XOR and_expression
   59 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    XOR  shift, and go to state 195

    $default  reduce using rule 59 (inclusive_or_expression)


State 259

   61 logical_and_expression: logical_and_expression LOGICAL_AND M . inclusive_or_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 309


State 260

   63 logical_or_expression: logical_or_expression LOGICAL_OR M . logical_and_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 310


State 261

   65 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
   80 expression: expression . ',' assignment_expression

    ','  shift, and go to state 227
    ':'  shift, and go to state 311


State 262

  222 jump_statement: BREAK . semicolon

    ';'  shift, and go to state 61

    semicolon  go to state 312


State 263

  223 jump_statement: RETURN . expression semicolon
  224               | RETURN . semicolon

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 313
    semicolon                  go to state 314


State 264

  198 labeled_statement: CASE . constant_expression ':' statement

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 216
    constant_expression        go to state 315


State 265

  216 iteration_statement: FOR . F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  217                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  218                    | FOR . F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  219                    | FOR . F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 235 (F)

    F  go to state 316


State 266

  212 iteration_statement: WHILE . W '(' X changetable M expression ')' M loop_statement
  213                    | WHILE . W '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 236 (W)

    W  go to state 317


State 267

  220 jump_statement: GOTO . IDENTIFIER semicolon

    IDENTIFIER  shift, and go to state 318


State 268

  221 jump_statement: CONTINUE . semicolon

    ';'  shift, and go to state 61

    semicolon  go to state 319


State 269

  209 selection_statement: IF . '(' expression N ')' M statement N
  210                    | IF . '(' expression N ')' M statement N ELSE M statement

    '('  shift, and go to state 320


State 270

  214 iteration_statement: DO . D M loop_statement M WHILE '(' expression ')' semicolon
  215                    | DO . D '{' M block_item_list_opt '}' M WHILE '(' expression ')' semicolon

    $default  reduce using rule 237 (D)

    D  go to state 321


State 271

  211 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 322


State 272

  199 labeled_statement: DEFAULT . ':' statement

    ':'  shift, and go to state 323


State 273

    5 primary_expression: IDENTIFIER .
  197 labeled_statement: IDENTIFIER . ':' M statement

    ':'  shift, and go to state 324

    $default  reduce using rule 5 (primary_expression)


State 274

  200 compound_statement: '{' . X changetable block_item_list_opt '}'

    $default  reduce using rule 238 (X)

    X  go to state 325


State 275

   80 expression: expression . ',' assignment_expression
  208 expression_statement: expression . semicolon

    ','  shift, and go to state 227
    ';'  shift, and go to state 61

    semicolon  go to state 326


State 276

  205 block_item: declaration .

    $default  reduce using rule 205 (block_item)


State 277

  206 block_item: statement .

    $default  reduce using rule 206 (block_item)


State 278

  186 statement: labeled_statement .

    $default  reduce using rule 186 (statement)


State 279

  187 statement: compound_statement .

    $default  reduce using rule 187 (statement)


State 280

  202 block_item_list: block_item_list . M block_item
  203 block_item_list_opt: block_item_list .

    '}'       reduce using rule 203 (block_item_list_opt)
    $default  reduce using rule 234 (M)

    M  go to state 327


State 281

  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt . '}'

    '}'  shift, and go to state 328


State 282

  201 block_item_list: block_item .

    $default  reduce using rule 201 (block_item_list)


State 283

  188 statement: expression_statement .

    $default  reduce using rule 188 (statement)


State 284

  189 statement: selection_statement .

    $default  reduce using rule 189 (statement)


State 285

  190 statement: iteration_statement .

    $default  reduce using rule 190 (statement)


State 286

  191 statement: jump_statement .

    $default  reduce using rule 191 (statement)


State 287

  207 expression_statement: semicolon .

    $default  reduce using rule 207 (expression_statement)


State 288

  169 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 169 (parameter_declaration)


State 289

  156 direct_declarator: direct_declarator '(' changetable parameter_type_list ')' .

    $default  reduce using rule 156 (direct_declarator)


State 290

  166 parameter_type_list: parameter_list ',' . ELLIPSIS
  168 parameter_list: parameter_list ',' . parameter_declaration

    FLOAT       shift, and go to state 1
    SHORT       shift, and go to state 2
    CHAR        shift, and go to state 3
    _BOOL       shift, and go to state 4
    _IMAGINARY  shift, and go to state 5
    _COMPLEX    shift, and go to state 6
    INT         shift, and go to state 7
    DOUBLE      shift, and go to state 8
    LONG        shift, and go to state 9
    VOID        shift, and go to state 10
    SIGNED      shift, and go to state 11
    AUTO        shift, and go to state 12
    UNSIGNED    shift, and go to state 13
    ENUM        shift, and go to state 14
    UNION       shift, and go to state 15
    STRUCT      shift, and go to state 16
    CONST       shift, and go to state 17
    STATIC      shift, and go to state 18
    REGISTER    shift, and go to state 19
    RESTRICT    shift, and go to state 20
    VOLATILE    shift, and go to state 21
    EXTERN      shift, and go to state 22
    INLINE      shift, and go to state 23
    ELLIPSIS    shift, and go to state 329

    declaration_specifiers     go to state 202
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    parameter_declaration      go to state 330


State 291

  172 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 172 (identifier_list)


State 292

  153 direct_declarator: direct_declarator '[' STATIC assignment_expression ']' .

    $default  reduce using rule 153 (direct_declarator)


State 293

  152 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression . ']'

    ']'  shift, and go to state 331


State 294

  154 direct_declarator: direct_declarator '[' type_qualifier_list MULT ']' .

    $default  reduce using rule 154 (direct_declarator)


State 295

  148 direct_declarator: direct_declarator '[' type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 148 (direct_declarator)


State 296

  127 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 127 (struct_declarator_list)


State 297

  129 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 129 (struct_declarator)


State 298

   16 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   17                   | '(' type_name ')' . '{' initializer_list ',' '}'
   27 unary_expression: SIZEOF '(' type_name ')' .

    '{'  shift, and go to state 301

    $default  reduce using rule 27 (unary_expression)


State 299

   16 postfix_expression: '(' type_name ')' . '{' initializer_list '}'
   17                   | '(' type_name ')' . '{' initializer_list ',' '}'

    '{'  shift, and go to state 301


State 300

   80 expression: expression ',' assignment_expression .

    $default  reduce using rule 80 (expression)


State 301

   16 postfix_expression: '(' type_name ')' '{' . initializer_list '}'
   17                   | '(' type_name ')' '{' . initializer_list ',' '}'

    '['  shift, and go to state 154
    '.'  shift, and go to state 155

    $default  reduce using rule 180 (designation_opt)

    initializer_list  go to state 332
    designation_opt   go to state 157
    designation       go to state 158
    designator_list   go to state 159
    designator        go to state 160


State 302

   35 cast_expression: '(' type_name ')' cast_expression .

    $default  reduce using rule 35 (cast_expression)


State 303

  184 designator: '[' constant_expression ']' .

    $default  reduce using rule 184 (designator)


State 304

  176 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 176 (initializer)


State 305

  178 initializer_list: initializer_list ',' designation_opt . initializer

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 101

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 119
    initializer                go to state 333


State 306

   19 argument_expression_list: argument_expression_list ',' . assignment_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 334


State 307

   11 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 11 (postfix_expression)


State 308

   10 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 10 (postfix_expression)


State 309

   59 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   61 logical_and_expression: logical_and_expression LOGICAL_AND M inclusive_or_expression .

    BITWISE_OR  shift, and go to state 196

    $default  reduce using rule 61 (logical_and_expression)


State 310

   61 logical_and_expression: logical_and_expression . LOGICAL_AND M inclusive_or_expression
   63 logical_or_expression: logical_or_expression LOGICAL_OR M logical_and_expression .

    LOGICAL_AND  shift, and go to state 197

    $default  reduce using rule 63 (logical_or_expression)


State 311

   65 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 179
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 335


State 312

  222 jump_statement: BREAK semicolon .

    $default  reduce using rule 222 (jump_statement)


State 313

   80 expression: expression . ',' assignment_expression
  223 jump_statement: RETURN expression . semicolon

    ','  shift, and go to state 227
    ';'  shift, and go to state 61

    semicolon  go to state 336


State 314

  224 jump_statement: RETURN semicolon .

    $default  reduce using rule 224 (jump_statement)


State 315

  198 labeled_statement: CASE constant_expression . ':' statement

    ':'  shift, and go to state 337


State 316

  216 iteration_statement: FOR F . '(' X changetable declaration M expression_statement M expression N ')' M loop_statement
  217                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  218                    | FOR F . '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  219                    | FOR F . '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    '('  shift, and go to state 338


State 317

  212 iteration_statement: WHILE W . '(' X changetable M expression ')' M loop_statement
  213                    | WHILE W . '(' X changetable M expression ')' '{' M block_item_list_opt '}'

    '('  shift, and go to state 339


State 318

  220 jump_statement: GOTO IDENTIFIER . semicolon

    ';'  shift, and go to state 61

    semicolon  go to state 340


State 319

  221 jump_statement: CONTINUE semicolon .

    $default  reduce using rule 221 (jump_statement)


State 320

  209 selection_statement: IF '(' . expression N ')' M statement N
  210                    | IF '(' . expression N ')' M statement N ELSE M statement

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 341


State 321

  214 iteration_statement: DO D . M loop_statement M WHILE '(' expression ')' semicolon
  215                    | DO D . '{' M block_item_list_opt '}' M WHILE '(' expression ')' semicolon

    '{'  shift, and go to state 342

    $default  reduce using rule 234 (M)

    M  go to state 343


State 322

  211 selection_statement: SWITCH '(' . expression ')' statement

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 344


State 323

  199 labeled_statement: DEFAULT ':' . statement

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    statement                  go to state 345
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 324

  197 labeled_statement: IDENTIFIER ':' . M statement

    $default  reduce using rule 234 (M)

    M  go to state 346


State 325

  200 compound_statement: '{' X . changetable block_item_list_opt '}'

    $default  reduce using rule 1 (changetable)

    changetable  go to state 347


State 326

  208 expression_statement: expression semicolon .

    $default  reduce using rule 208 (expression_statement)


State 327

  202 block_item_list: block_item_list M . block_item

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 272
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item                 go to state 348
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 328

  229 function_definition: declaration_specifiers declarator declaration_list_opt changetable '{' block_item_list_opt '}' .

    $default  reduce using rule 229 (function_definition)


State 329

  166 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 166 (parameter_type_list)


State 330

  168 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 168 (parameter_list)


State 331

  152 direct_declarator: direct_declarator '[' STATIC type_qualifier_list assignment_expression ']' .

    $default  reduce using rule 152 (direct_declarator)


State 332

   16 postfix_expression: '(' type_name ')' '{' initializer_list . '}'
   17                   | '(' type_name ')' '{' initializer_list . ',' '}'
  178 initializer_list: initializer_list . ',' designation_opt initializer

    '}'  shift, and go to state 349
    ','  shift, and go to state 350


State 333

  178 initializer_list: initializer_list ',' designation_opt initializer .

    $default  reduce using rule 178 (initializer_list)


State 334

   19 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 19 (argument_expression_list)


State 335

   65 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 65 (conditional_expression)


State 336

  223 jump_statement: RETURN expression semicolon .

    $default  reduce using rule 223 (jump_statement)


State 337

  198 labeled_statement: CASE constant_expression ':' . statement

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    statement                  go to state 351
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 338

  216 iteration_statement: FOR F '(' . X changetable declaration M expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M loop_statement
  218                    | FOR F '(' . X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  219                    | FOR F '(' . X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 238 (X)

    X  go to state 352


State 339

  212 iteration_statement: WHILE W '(' . X changetable M expression ')' M loop_statement
  213                    | WHILE W '(' . X changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 238 (X)

    X  go to state 353


State 340

  220 jump_statement: GOTO IDENTIFIER semicolon .

    $default  reduce using rule 220 (jump_statement)


State 341

   80 expression: expression . ',' assignment_expression
  209 selection_statement: IF '(' expression . N ')' M statement N
  210                    | IF '(' expression . N ')' M statement N ELSE M statement

    ','  shift, and go to state 227

    $default  reduce using rule 239 (N)

    N  go to state 354


State 342

  215 iteration_statement: DO D '{' . M block_item_list_opt '}' M WHILE '(' expression ')' semicolon

    $default  reduce using rule 234 (M)

    M  go to state 355


State 343

  214 iteration_statement: DO D M . loop_statement M WHILE '(' expression ')' semicolon

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    loop_statement             go to state 356
    labeled_statement          go to state 357
    expression_statement       go to state 358
    selection_statement        go to state 359
    iteration_statement        go to state 360
    jump_statement             go to state 361
    semicolon                  go to state 287


State 344

   80 expression: expression . ',' assignment_expression
  211 selection_statement: SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 362
    ','  shift, and go to state 227


State 345

  199 labeled_statement: DEFAULT ':' statement .

    $default  reduce using rule 199 (labeled_statement)


State 346

  197 labeled_statement: IDENTIFIER ':' M . statement

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    statement                  go to state 363
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 347

  200 compound_statement: '{' X changetable . block_item_list_opt '}'

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 272
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 364
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 348

  202 block_item_list: block_item_list M block_item .

    $default  reduce using rule 202 (block_item_list)


State 349

   16 postfix_expression: '(' type_name ')' '{' initializer_list '}' .

    $default  reduce using rule 16 (postfix_expression)


State 350

   17 postfix_expression: '(' type_name ')' '{' initializer_list ',' . '}'
  178 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 154
    '.'  shift, and go to state 155
    '}'  shift, and go to state 365

    $default  reduce using rule 180 (designation_opt)

    designation_opt  go to state 305
    designation      go to state 158
    designator_list  go to state 159
    designator       go to state 160


State 351

  198 labeled_statement: CASE constant_expression ':' statement .

    $default  reduce using rule 198 (labeled_statement)


State 352

  216 iteration_statement: FOR F '(' X . changetable declaration M expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M loop_statement
  218                    | FOR F '(' X . changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  219                    | FOR F '(' X . changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 1 (changetable)

    changetable  go to state 366


State 353

  212 iteration_statement: WHILE W '(' X . changetable M expression ')' M loop_statement
  213                    | WHILE W '(' X . changetable M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 1 (changetable)

    changetable  go to state 367


State 354

  209 selection_statement: IF '(' expression N . ')' M statement N
  210                    | IF '(' expression N . ')' M statement N ELSE M statement

    ')'  shift, and go to state 368


State 355

  215 iteration_statement: DO D '{' M . block_item_list_opt '}' M WHILE '(' expression ')' semicolon

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 272
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 369
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 356

  214 iteration_statement: DO D M loop_statement . M WHILE '(' expression ')' semicolon

    $default  reduce using rule 234 (M)

    M  go to state 370


State 357

  192 loop_statement: labeled_statement .

    $default  reduce using rule 192 (loop_statement)


State 358

  193 loop_statement: expression_statement .

    $default  reduce using rule 193 (loop_statement)


State 359

  194 loop_statement: selection_statement .

    $default  reduce using rule 194 (loop_statement)


State 360

  195 loop_statement: iteration_statement .

    $default  reduce using rule 195 (loop_statement)


State 361

  196 loop_statement: jump_statement .

    $default  reduce using rule 196 (loop_statement)


State 362

  211 selection_statement: SWITCH '(' expression ')' . statement

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    statement                  go to state 371
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 363

  197 labeled_statement: IDENTIFIER ':' M statement .

    $default  reduce using rule 197 (labeled_statement)


State 364

  200 compound_statement: '{' X changetable block_item_list_opt . '}'

    '}'  shift, and go to state 372


State 365

   17 postfix_expression: '(' type_name ')' '{' initializer_list ',' '}' .

    $default  reduce using rule 17 (postfix_expression)


State 366

  216 iteration_statement: FOR F '(' X changetable . declaration M expression_statement M expression N ')' M loop_statement
  217                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M loop_statement
  218                    | FOR F '(' X changetable . declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}'
  219                    | FOR F '(' X changetable . expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 86
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    declaration                go to state 373
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    expression_statement       go to state 374
    semicolon                  go to state 287


State 367

  212 iteration_statement: WHILE W '(' X changetable . M expression ')' M loop_statement
  213                    | WHILE W '(' X changetable . M expression ')' '{' M block_item_list_opt '}'

    $default  reduce using rule 234 (M)

    M  go to state 375


State 368

  209 selection_statement: IF '(' expression N ')' . M statement N
  210                    | IF '(' expression N ')' . M statement N ELSE M statement

    $default  reduce using rule 234 (M)

    M  go to state 376


State 369

  215 iteration_statement: DO D '{' M block_item_list_opt . '}' M WHILE '(' expression ')' semicolon

    '}'  shift, and go to state 377


State 370

  214 iteration_statement: DO D M loop_statement M . WHILE '(' expression ')' semicolon

    WHILE  shift, and go to state 378


State 371

  211 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 211 (selection_statement)


State 372

  200 compound_statement: '{' X changetable block_item_list_opt '}' .

    $default  reduce using rule 200 (compound_statement)


State 373

  216 iteration_statement: FOR F '(' X changetable declaration . M expression_statement M expression N ')' M loop_statement
  218                    | FOR F '(' X changetable declaration . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 234 (M)

    M  go to state 379


State 374

  217 iteration_statement: FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M loop_statement
  219                    | FOR F '(' X changetable expression_statement . M expression_statement M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 234 (M)

    M  go to state 380


State 375

  212 iteration_statement: WHILE W '(' X changetable M . expression ')' M loop_statement
  213                    | WHILE W '(' X changetable M . expression ')' '{' M block_item_list_opt '}'

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 381


State 376

  209 selection_statement: IF '(' expression N ')' M . statement N
  210                    | IF '(' expression N ')' M . statement N ELSE M statement

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    statement                  go to state 382
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 377

  215 iteration_statement: DO D '{' M block_item_list_opt '}' . M WHILE '(' expression ')' semicolon

    $default  reduce using rule 234 (M)

    M  go to state 383


State 378

  214 iteration_statement: DO D M loop_statement M WHILE . '(' expression ')' semicolon

    '('  shift, and go to state 384


State 379

  216 iteration_statement: FOR F '(' X changetable declaration M . expression_statement M expression N ')' M loop_statement
  218                    | FOR F '(' X changetable declaration M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    expression_statement       go to state 385
    semicolon                  go to state 287


State 380

  217 iteration_statement: FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M loop_statement
  219                    | FOR F '(' X changetable expression_statement M . expression_statement M expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    expression_statement       go to state 386
    semicolon                  go to state 287


State 381

   80 expression: expression . ',' assignment_expression
  212 iteration_statement: WHILE W '(' X changetable M expression . ')' M loop_statement
  213                    | WHILE W '(' X changetable M expression . ')' '{' M block_item_list_opt '}'

    ')'  shift, and go to state 387
    ','  shift, and go to state 227


State 382

  209 selection_statement: IF '(' expression N ')' M statement . N
  210                    | IF '(' expression N ')' M statement . N ELSE M statement

    $default  reduce using rule 239 (N)

    N  go to state 388


State 383

  215 iteration_statement: DO D '{' M block_item_list_opt '}' M . WHILE '(' expression ')' semicolon

    WHILE  shift, and go to state 389


State 384

  214 iteration_statement: DO D M loop_statement M WHILE '(' . expression ')' semicolon

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 390


State 385

  216 iteration_statement: FOR F '(' X changetable declaration M expression_statement . M expression N ')' M loop_statement
  218                    | FOR F '(' X changetable declaration M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 234 (M)

    M  go to state 391


State 386

  217 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M loop_statement
  219                    | FOR F '(' X changetable expression_statement M expression_statement . M expression N ')' M '{' block_item_list_opt '}'

    $default  reduce using rule 234 (M)

    M  go to state 392


State 387

  212 iteration_statement: WHILE W '(' X changetable M expression ')' . M loop_statement
  213                    | WHILE W '(' X changetable M expression ')' . '{' M block_item_list_opt '}'

    '{'  shift, and go to state 393

    $default  reduce using rule 234 (M)

    M  go to state 394


State 388

  209 selection_statement: IF '(' expression N ')' M statement N .
  210                    | IF '(' expression N ')' M statement N . ELSE M statement

    ELSE  shift, and go to state 395

    $default  reduce using rule 209 (selection_statement)


State 389

  215 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE . '(' expression ')' semicolon

    '('  shift, and go to state 396


State 390

   80 expression: expression . ',' assignment_expression
  214 iteration_statement: DO D M loop_statement M WHILE '(' expression . ')' semicolon

    ')'  shift, and go to state 397
    ','  shift, and go to state 227


State 391

  216 iteration_statement: FOR F '(' X changetable declaration M expression_statement M . expression N ')' M loop_statement
  218                    | FOR F '(' X changetable declaration M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 398


State 392

  217 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M loop_statement
  219                    | FOR F '(' X changetable expression_statement M expression_statement M . expression N ')' M '{' block_item_list_opt '}'

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 399


State 393

  213 iteration_statement: WHILE W '(' X changetable M expression ')' '{' . M block_item_list_opt '}'

    $default  reduce using rule 234 (M)

    M  go to state 400


State 394

  212 iteration_statement: WHILE W '(' X changetable M expression ')' M . loop_statement

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    loop_statement             go to state 401
    labeled_statement          go to state 357
    expression_statement       go to state 358
    selection_statement        go to state 359
    iteration_statement        go to state 360
    jump_statement             go to state 361
    semicolon                  go to state 287


State 395

  210 selection_statement: IF '(' expression N ')' M statement N ELSE . M statement

    $default  reduce using rule 234 (M)

    M  go to state 402


State 396

  215 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' . expression ')' semicolon

    SIZEOF          shift, and go to state 86
    IDENTIFIER      shift, and go to state 87
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 403


State 397

  214 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' . semicolon

    ';'  shift, and go to state 61

    semicolon  go to state 404


State 398

   80 expression: expression . ',' assignment_expression
  216 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression . N ')' M loop_statement
  218                    | FOR F '(' X changetable declaration M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    ','  shift, and go to state 227

    $default  reduce using rule 239 (N)

    N  go to state 405


State 399

   80 expression: expression . ',' assignment_expression
  217 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M loop_statement
  219                    | FOR F '(' X changetable expression_statement M expression_statement M expression . N ')' M '{' block_item_list_opt '}'

    ','  shift, and go to state 227

    $default  reduce using rule 239 (N)

    N  go to state 406


State 400

  213 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M . block_item_list_opt '}'

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 272
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 407
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 401

  212 iteration_statement: WHILE W '(' X changetable M expression ')' M loop_statement .

    $default  reduce using rule 212 (iteration_statement)


State 402

  210 selection_statement: IF '(' expression N ')' M statement N ELSE M . statement

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    statement                  go to state 408
    labeled_statement          go to state 278
    compound_statement         go to state 279
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 403

   80 expression: expression . ',' assignment_expression
  215 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression . ')' semicolon

    ')'  shift, and go to state 409
    ','  shift, and go to state 227


State 404

  214 iteration_statement: DO D M loop_statement M WHILE '(' expression ')' semicolon .

    $default  reduce using rule 214 (iteration_statement)


State 405

  216 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N . ')' M loop_statement
  218                    | FOR F '(' X changetable declaration M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 410


State 406

  217 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M loop_statement
  219                    | FOR F '(' X changetable expression_statement M expression_statement M expression N . ')' M '{' block_item_list_opt '}'

    ')'  shift, and go to state 411


State 407

  213 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt . '}'

    '}'  shift, and go to state 412


State 408

  210 selection_statement: IF '(' expression N ')' M statement N ELSE M statement .

    $default  reduce using rule 210 (selection_statement)


State 409

  215 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' . semicolon

    ';'  shift, and go to state 61

    semicolon  go to state 413


State 410

  216 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' . M loop_statement
  218                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 234 (M)

    M  go to state 414


State 411

  217 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M loop_statement
  219                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' . M '{' block_item_list_opt '}'

    $default  reduce using rule 234 (M)

    M  go to state 415


State 412

  213 iteration_statement: WHILE W '(' X changetable M expression ')' '{' M block_item_list_opt '}' .

    $default  reduce using rule 213 (iteration_statement)


State 413

  215 iteration_statement: DO D '{' M block_item_list_opt '}' M WHILE '(' expression ')' semicolon .

    $default  reduce using rule 215 (iteration_statement)


State 414

  216 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M . loop_statement
  218                    | FOR F '(' X changetable declaration M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 416
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    loop_statement             go to state 417
    labeled_statement          go to state 357
    expression_statement       go to state 358
    selection_statement        go to state 359
    iteration_statement        go to state 360
    jump_statement             go to state 361
    semicolon                  go to state 287


State 415

  217 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . loop_statement
  219                    | FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M . '{' block_item_list_opt '}'

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    DEFAULT         shift, and go to state 272
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 418
    ';'             shift, and go to state 61

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    loop_statement             go to state 419
    labeled_statement          go to state 357
    expression_statement       go to state 358
    selection_statement        go to state 359
    iteration_statement        go to state 360
    jump_statement             go to state 361
    semicolon                  go to state 287


State 416

  218 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 272
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 420
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 417

  216 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 216 (iteration_statement)


State 418

  219 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' . block_item_list_opt '}'

    BREAK           shift, and go to state 262
    RETURN          shift, and go to state 263
    CASE            shift, and go to state 264
    FOR             shift, and go to state 265
    WHILE           shift, and go to state 266
    GOTO            shift, and go to state 267
    SIZEOF          shift, and go to state 86
    CONTINUE        shift, and go to state 268
    IF              shift, and go to state 269
    DO              shift, and go to state 270
    SWITCH          shift, and go to state 271
    FLOAT           shift, and go to state 1
    SHORT           shift, and go to state 2
    CHAR            shift, and go to state 3
    _BOOL           shift, and go to state 4
    _IMAGINARY      shift, and go to state 5
    _COMPLEX        shift, and go to state 6
    INT             shift, and go to state 7
    DOUBLE          shift, and go to state 8
    LONG            shift, and go to state 9
    VOID            shift, and go to state 10
    SIGNED          shift, and go to state 11
    AUTO            shift, and go to state 12
    UNSIGNED        shift, and go to state 13
    ENUM            shift, and go to state 14
    UNION           shift, and go to state 15
    STRUCT          shift, and go to state 16
    CONST           shift, and go to state 17
    DEFAULT         shift, and go to state 272
    STATIC          shift, and go to state 18
    REGISTER        shift, and go to state 19
    RESTRICT        shift, and go to state 20
    VOLATILE        shift, and go to state 21
    EXTERN          shift, and go to state 22
    INLINE          shift, and go to state 23
    IDENTIFIER      shift, and go to state 273
    INTEGER_CONST   shift, and go to state 88
    CHAR_CONST      shift, and go to state 89
    FLOAT_CONST     shift, and go to state 90
    STRING_LITERAL  shift, and go to state 91
    PLUS            shift, and go to state 92
    MINUS           shift, and go to state 93
    MULT            shift, and go to state 94
    INCREMENT       shift, and go to state 95
    DECREMENT       shift, and go to state 96
    BITWISE_AND     shift, and go to state 97
    BITWISE_NOT     shift, and go to state 98
    LOGICAL_NOT     shift, and go to state 99
    '('             shift, and go to state 100
    '{'             shift, and go to state 274
    ';'             shift, and go to state 61

    $default  reduce using rule 204 (block_item_list_opt)

    constant                   go to state 102
    primary_expression         go to state 103
    postfix_expression         go to state 104
    unary_expression           go to state 105
    unary_operator             go to state 106
    cast_expression            go to state 107
    multiplicative_expression  go to state 108
    additive_expression        go to state 109
    shift_expression           go to state 110
    relational_expression      go to state 111
    equality_expression        go to state 112
    and_expression             go to state 113
    exclusive_or_expression    go to state 114
    inclusive_or_expression    go to state 115
    logical_and_expression     go to state 116
    logical_or_expression      go to state 117
    conditional_expression     go to state 118
    assignment_expression      go to state 150
    expression                 go to state 275
    declaration                go to state 276
    declaration_specifiers     go to state 66
    storage_class_specifier    go to state 26
    type_specifier             go to state 27
    struct_or_union_specifier  go to state 28
    struct_or_union            go to state 29
    enum_specifier             go to state 30
    type_qualifier             go to state 31
    function_specifier         go to state 32
    statement                  go to state 277
    labeled_statement          go to state 278
    compound_statement         go to state 279
    block_item_list            go to state 280
    block_item_list_opt        go to state 421
    block_item                 go to state 282
    expression_statement       go to state 283
    selection_statement        go to state 284
    iteration_statement        go to state 285
    jump_statement             go to state 286
    semicolon                  go to state 287


State 419

  217 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M loop_statement .

    $default  reduce using rule 217 (iteration_statement)


State 420

  218 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 422


State 421

  219 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt . '}'

    '}'  shift, and go to state 423


State 422

  218 iteration_statement: FOR F '(' X changetable declaration M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 218 (iteration_statement)


State 423

  219 iteration_statement: FOR F '(' X changetable expression_statement M expression_statement M expression N ')' M '{' block_item_list_opt '}' .

    $default  reduce using rule 219 (iteration_statement)
